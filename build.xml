	
<project name="WSML2Reasoner Framework" default="create-lgpl-jar" basedir="." >

	<!-- =================================================================== -->
	<!-- Initialization                                                -->
	<!-- =================================================================== -->
	<target name="init">
		<!-- For standard build/releases -->
		<tstamp />
		<property name="deploy.version" value="${DSTAMP}" />
			
		<property name="target.vm" value="1.5" />
		<property name="src.dir" value="${basedir}/src" />
		<property name="api-src.dir" value="${basedir}/api/src/" />
		<property name="test-src.dir" value="${basedir}/test/" />
		<property name="lib.dir" value="${basedir}/lib" />
		<property name="lib.kaon2" value="${lib.dir}/ext/kaon2-reasoner/"/>
		<property name="example.dir" value="${src.dir}/example/" />
		<property name="build" value="${basedir}/build" />
		<property name="build.src" value="${build}/src" />
		<property name="build.lib" value="${build}/lib" />
		<property name="build.class" value="${build}/class" />
		<property name="dist" value="${basedir}/dist" />
		
		<!-- For javadoc -->
		<property name="javadoc.dir" location="${basedir}/javadoc" />
		
		<!-- For unit tests -->
		<property name="testresults.dir" location="${basedir}/test-results" />
		<property name="file.test" value="base.RunAllStandardTests.java" />
		
		
		<!-- For checking out project -->
		<property name="cvs.user" value="graham"/>
		<property name="cvs.path" value=":ext:${cvs.user}@cvs.deri.at:/usr/local/cvsroot" />
		
		<!-- For updating remote snapshot -->
		<property name="shell.host" value="tools.deri.org" />
		<property name="remote.snapshot.path" value="/var/www/html/tools_deri_org/wsml2reasoner/snapshot/" />
		<property name="remote.snapshot.path.wsmo" value="${remote.snapshot.path}/wsml2reasoner-wsmo/" />
		<property name="remote.javadoc.path" value="/var/www/html/tools_deri_org/wsml2reasoner/javadoc/" />
	</target>
	
	<!-- =================================================================== -->
	<!-- Targets                                                       		 -->
	<!-- =================================================================== -->

	<patternset id="source-files">
		<exclude name="build/*" />
		<include name="**/*.java" />
		<include name="**/example/*.wsml" />
	</patternset>
			
	<patternset id="gpl-jars">
		<exclude name="lib/ext/kaon2-reasoner/" />
	</patternset>
		
	<patternset id="lgpl-jars">
		<exclude name="lib/ext/kaon2-reasoner/" />
		<exclude name="lib/ext/mins-reasoner/" />
	</patternset>
	
	<patternset id="sdk-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="bin/**" />
		<exclude name="build/**" />
		<exclude name="dist/**" />
		<exclude name="ext/**" />
		<exclude name="pub/**" />
		<exclude name="web/**" />
		<exclude name="javadoc/**" />
		<!--<excludesfile name="pwd" />-->
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="gpl-examples">
		<include name="**/*.*" />
		<exclude name="**/example/Kaon2ReasonerExample.*" />
		<exclude name="**/example/Kaon2DLReasonerExample.*" />
	</patternset>
	
	<patternset id="lgpl-examples">
		<include name="**/*.*" />
		<exclude name="example/Kaon2ReasonerExample.*" />
		<exclude name="example/Kaon2DLReasonerExample.*" />
		<exclude name="example/MinsReasonerExample.*" />
	</patternset>
	
	<patternset id="gpl-release">
		<include name="**/example/*.wsml" />
		<include name="**/example/*.java" />
		<exclude name="**/example/Kaon2ReasonerExample.*" />
		<exclude name="**/example/Kaon2DLReasonerExample.*" />
	</patternset>
	
	<patternset id="lgpl-release">
		<include name="**/example/*.wsml" />
		<include name="**/example/*.java" />
		<exclude name="example/Kaon2ReasonerExample.*" />
		<exclude name="example/Kaon2DLReasonerExample.*" />
		<exclude name="example/MinsReasonerExample.*" />
	</patternset>
	
	<patternset id="lgpl-packages">
		<include name= "**/*.*" />
		<exclude name= "**/mins/"/>
	</patternset>
			
	<path id="classpath">
		<pathelement location ="${build.lib}" />
	</path>
	
	<target name="clean-build-dirs" depends="init" description="Cleans the build directories">
		<delete dir="${build.src}" />
		<delete dir="${build.lib}" />
		<delete dir="${build.class}" />
	</target>
	
	<target name="remove-build-dir" depends="clean-build-dirs" description="Removes build dir">
		<delete dir="${build}" />	
	</target>

	<target name="create-dirs" depends="init" description="Creates the build directories">
		<mkdir dir="${build}" />
		<mkdir dir="${build.src}" />
		<mkdir dir="${build.lib}" />
		<mkdir dir="${build.class}" />
		<mkdir dir="${dist}" />
	</target>

	<target name="compile" depends="remove-build-dir, create-dirs" 
		description="Compiles wsml2reasoner framework">
		<copy todir="${build.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${src.dir}">
				<patternset refid="source-files" />
			</fileset>
			<fileset dir="${api-src.dir}">
				<patternset refid="source-files" />
			</fileset>
		</copy>
		<copy todir="${build.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${lib.dir}"/>
		</copy>
		<javac srcdir="${build.src}" destdir="${build.class}" 
				debug="on" optimize="off" deprecation="off" target="1.5" nowarn="on">
			<classpath>
				<fileset dir="${build.lib}" />
			</classpath>
		</javac>
	</target>
	
	<target name="run-tests" description="runs junit tests" depends="compile">
		<junit showoutput="true" printsummary="true" fork="yes">
			<jvmarg value="-ea"/>
			<classpath>
				<path refid="classpath" />
				<dirset dir="${test-src.dir}" />
				<dirset dir="${src.dir}" />
				<dirset dir="${api-src.dir}" />
			</classpath>
			<formatter type="xml" />
			<!-- todo find usefull exclusion pattern -->
			<test name="${file.test}" todir="${testresults.dir}" />
		</junit>
		<mkdir dir="${testresults.dir}/html" />
		<junitreport todir="${testresults.dir}">
			<fileset dir="${testresults.dir}">
				<include name="TEST-*Test.xml" />
			</fileset>
			<report format="frames" todir="${dir.test.reports}/html" />
		</junitreport>
	</target>
	
	<target name="create-gpl-jar" depends="compile" description="Creates wsml2reasoner gpl jar">
		<mkdir dir="${dist}" />
		<jar jarfile="${dist}/wsml2reasoner_gpl-${deploy.version}.jar">
			<fileset dir="${build.src}">
				<patternset refid="gpl-examples"/>
			</fileset>
			<fileset dir="${build.class}">
				<patternset refid="gpl-examples"/>
			</fileset>
		</jar>
	</target>
	
	<target name="create-lgpl-jar" depends="compile" description="Creates wsml2reasoner lgpl jar - does not include mins packages">
		<mkdir dir="${dist}" />
		<jar jarfile="${dist}/wsml2reasoner_lgpl-${deploy.version}.jar">
			<fileset dir="${build.src}">
				<patternset refid="lgpl-examples"/>
				<patternset refid="lgpl-packages"/>
			</fileset>
			<fileset dir="${build.class}">
				<patternset refid="lgpl-examples"/>
				<patternset refid="lgpl-packages"/>
			</fileset>
		</jar>
	</target>
				
	<target name="create-wsml2reasoner_noncommercial" depends="get-kaon2-jars, create-gpl-jar" 
		description="Creates wsml2reasoner noncommercial version (including KAON2 jars)">
		<zip destfile="${dist}/wsml2reasoner_noncommercial-${deploy.version}.zip">
			<fileset dir="${dist}" includes ="wsml2reasoner-${deploy.version}.jar"/>
			<fileset dir="${build}" includes ="lib/"/>
			<fileset dir="${build.src}" includes ="example/"/>
		</zip>
	</target>

	
	<target name="create-wsml2reasoner_noncommercial_src" depends="compile" 
		description="Creates wsml2reasoner noncommercial version (including KAON2 jars)">
		<zip destfile="${dist}/wsml2reasoner_noncommercial_src-${deploy.version}.zip">
			<fileset dir="${build}" includes ="lib/" />
			<fileset dir="${build}" includes ="src/"/>
		</zip>
	</target>

	
	<target name="create-wsml2reasoner_sdk" depends="remove-build-dir, create-dirs" 
		description="Creates complete wsml2reasoner (including tests) for developers">
		<zip destfile="${dist}/wsml2reasoner_sdk-${deploy.version}.zip">
			<fileset dir="${basedir}">
				<patternset refid="sdk-files" />
			</fileset>
		</zip>
	</target>
	
	<target name="create-wsml2reasoner_lgpl" depends="create-lgpl-jar" 
		description="Creates wsml2reasoner jar + lgpl libs only">
		<zip destfile="${dist}/wsml2reasoner_lgpl-${deploy.version}.zip">
			<fileset dir="${dist}" includes ="wsml2reasoner_lgpl-${deploy.version}.jar"/>
			<fileset dir="${build}" includes ="lib/">
				<patternset refid="lgpl-jars"/>
			</fileset>
			<fileset dir="${build.src}" includes ="example/">
				<patternset refid="lgpl-release" />
			</fileset>
			<fileset dir="${basedir}" includes ="license-lgpl.txt" />
		</zip>
	</target>
	
	<target name="create-wsml2reasoner_lgpl_src" depends="create-lgpl-jar" 
		description="Creates wsml2reasoner src + lgpl libs only">
		<zip destfile="${dist}/wsml2reasoner_lgpl_src-${deploy.version}.zip">
			<fileset dir="${build}" includes ="lib/">
				<patternset refid="lgpl-jars"/>
			</fileset>
			<fileset dir="${build}" includes ="src/">
				<patternset refid="lgpl-packages"/>
			</fileset>
			<fileset dir="${basedir}" includes ="license-lgpl.txt" />
		</zip>
	</target>
	
	<target name="create-wsml2reasoner_gpl" depends="create-gpl-jar" 
			description="Creates wsml2reasoner jar + gpl libs only">
			<zip destfile="${dist}/wsml2reasoner_gpl-${deploy.version}.zip">
				<fileset dir="${dist}" includes ="wsml2reasoner_gpl-${deploy.version}.jar"/>
				<fileset dir="${build}" includes ="lib/">
					<patternset refid="gpl-jars"/>
				</fileset>
				<fileset dir="${build.src}" includes ="example/">
					<patternset refid="gpl-release" />
				</fileset>
				<fileset dir="${basedir}" includes ="license-gpl.txt" />
			</zip>
		</target>
		
		<target name="create-wsml2reasoner_gpl_src" depends="create-gpl-jar" 
			description="Creates wsml2reasoner jar + gpl libs only">
			<zip destfile="${dist}/wsml2reasoner_gpl_src-${deploy.version}.zip">
				<fileset dir="${build}" includes ="lib/">
					<patternset refid="gpl-jars"/>
				</fileset>
				<fileset dir="${build}" includes ="src/"  excludes = "example/" />
				<fileset dir="${basedir}" includes ="license-gpl.txt" />
			</zip>
		</target>
	
	<target name="create-wsml2reasoner-releases-bins" depends= 
		"create-wsml2reasoner_noncommercial, 
		create-wsml2reasoner_lgpl,
		create-wsml2reasoner_gpl"
		description="Creates/zips wsml2reasoner bins">
	</target>
	
	<target name="create-wsml2reasoner-releases-srcs" depends=
		"create-wsml2reasoner_noncommercial_src, 
		create-wsml2reasoner_lgpl_src,
		create-wsml2reasoner_gpl_src, 
		create-wsml2reasoner_sdk"
		description="Creates/zips wsml2reasoner srcs">
	</target>

	<target name="release" depends=
		"create-javadoc,
		create-wsml2reasoner-releases-bins,
		create-wsml2reasoner-releases-srcs" 
		description="Creates/zips wsml2reasoner releases">
	</target>

	<target name="create-javadoc" depends="compile" description="Produces javadoc">
		<delete dir="${javadoc.dir}" />
		<mkdir dir="${javadoc.dir}" />
		<javadoc destdir="${javadoc.dir}"
             classpathref ="classpath"
             author="true"
             version="true"
             use="true"
			 link="http://java.sun.com/j2se/1.5.0/docs/api/"
			 windowtitle = "WSML2Reasoner Framework">
			<fileset dir="${build.src}">
				<include name="**/*.java" />
			</fileset>
			<doctitle><![CDATA[<h1>WSML2Reasoner Framework</h1>]]></doctitle>
			<bottom>
				<![CDATA[<i>Copyright &#169; 2005 University of Innsbruck, Austria; FZI, Germany. All Rights Reserved.</i>]]>
			</bottom>
			<tag name="TODO" scope="all" description="To do:" />
		</javadoc>
	</target>

	<target name="get-jsse-4-ssh+scp"
          description="Download necessary jar for ssh/scp and place directly into ant lib">
		<get dest="${ant.library.dir}/jsch-0.1.32.jar"
         src="http://puzzle.dl.sourceforge.net/sourceforge/jsch/jsch-0.1.32.jar" />
	</target>
	
	<target name="confirm-kaon2-usage"
          description="User must approve KAON2 retrieval">
		 <input message="KAON2 is is free of charge for universities for noncommecial academic usage (national laboratories are not considered universities). For commercial purposes, there is a commercial version of KAON2 called OntoBroker OWL (http://www.ontoprise.de/ontobrokerowl). By downloading KAON2, you accept these license agreements. Continue? (Y/N)" 
		    validargs="Y,N"
		    addproperty="do.delete"
		 />
		<condition property="do.abort">
			<equals arg1="N" arg2="${do.delete}"/>
		</condition>
		<fail if="do.abort">Build aborted by user.</fail>
		<echo message="The jars will be added to your libs/ext/kaon2-reasoner/ dir - you must then manually add them to your build path."
		/>
		  
	</target>
	
	<target name="get-kaon2-jars"  depends="init"
          description="Downloads necessary KAON2 + Facades jar">
		<delete dir="${lib.kaon2}" />
		<mkdir dir="${lib.kaon2}"/>
		<mkdir dir="${lib.kaon2}/kaon2/"/>
		<get src="http://tools.deri.org/wsml2reasoner/ext/wsml2reasoner-ext-kaon2.jar"
			dest="${lib.kaon2}/wsml2reasoner-ext-kaon2.jar"/>
		<get src="http://tools.deri.org/wsml2reasoner/ext/license-lgpl.txt"
					dest="${lib.kaon2}/license-lgpl.txt"/>
		<get src="http://tools.deri.org/wsml2reasoner/ext/kaon2/kaon2.jar"
					dest="${lib.kaon2}/kaon2/kaon2.jar"/>
		<get src="http://tools.deri.org/wsml2reasoner/ext/kaon2/read_me.txt"
							dest="${lib.kaon2}/kaon2/read_me.txt"/>
	</target>
	
	<target name="get-kaon2-jars-with-confirmation"  depends="init, confirm-kaon2-usage"
          description="Downloads necessary KAON2 + Facades jar">
		<delete dir="${lib.kaon2}" />
		<mkdir dir="${lib.kaon2}"/>
		<mkdir dir="${lib.kaon2}/kaon2/"/>
		<get src="http://tools.deri.org/wsml2reasoner/ext/wsml2reasoner-ext-kaon2.jar"
			dest="${lib.kaon2}/wsml2reasoner-ext-kaon2.jar"/>
		<get src="http://tools.deri.org/wsml2reasoner/ext/license-lgpl.txt"
					dest="${lib.kaon2}/license-lgpl.txt"/>
		<get src="http://tools.deri.org/wsml2reasoner/ext/kaon2/kaon2.jar"
					dest="${lib.kaon2}/kaon2/kaon2.jar"/>
		<get src="http://tools.deri.org/wsml2reasoner/ext/kaon2/read_me.txt"
							dest="${lib.kaon2}/kaon2/read_me.txt"/>
	</target>

	<target name="choose-user-password">
		<input message="Username for ${shell.host}:" addproperty="ssh.user" />
		<input message="Password for ${shell.host}:" addproperty="ssh.password" />
	</target>

	
	<target name="update_remote_snapshot_wsml2reasoner"
		depends="create-wsml2reasoner_gpl"
        description="Updates wsml2reasoner (jar + src) snapshot on tools.deri.org">

		<sshexec host="${shell.host}"
        	username="${ssh.user}"
            password="${ssh.password}"		
            trust="yes"
            command="rm -f ${remote.snapshot.path}/wsml2reasoner*" />
		
		<scp file="${dist.complete}/wsml2reasoner-noncom-${deploy.version}.jar"
			trust="yes"
         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.snapshot.path}" 
		/>

		<scp file="${dist}/wsml2reasoner-noncom-${deploy.version}.zip"
         	trust="yes"
         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.snapshot.path}" 
		/>
		<delete dir="${dist.complete}"/>

		
	</target>
	
	<target name="update_remote_snapshot_wsml2reasoner-wsmo"
		depends="create-wsml2reasoner_gpl"
        description="Updates wsml2reasoner-minimal (wsmo jar+lib+example) snapshot on tools.deri.org">
		
		<sshexec host="${shell.host}"
        	username="${ssh.user}"
            password="${ssh.password}"
            trust="yes"
            command="rm -f ${remote.snapshot.path.wsmo}/wsml2reasoner-wsmo*" />

		<scp file="${dist.complete}/wsml2reasoner-${deploy.version}.jar"
					trust="yes"
		         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.snapshot.path.wsmo}" 
		/>
		
		<scp file="${dist}/wsml2reasoner-${deploy.version}.zip"
		         	trust="yes"
		         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.snapshot.path.wsmo}" 
		/>
	</target>

	<target name="update_remote_javadoc"
          depends="create-javadoc"
          description="Updates wsml2reasoner javadoc on tools.deri.org">

		<sshexec host="${shell.host}"
        	username="${ssh.user}"
            password="${ssh.password}"
            trust="yes"
            command="rm -r -f ${remote.javadoc.path}/*" />

		<scp trust="yes"
         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.javadoc.path}" >
			<fileset dir="${javadoc.dir}" />
		</scp>
	</target>
		
    <target name="performence-create-benchmark-files" depends="init">
        <javac srcdir="${basedir}/performance" destdir="${build.class}" classpathref="classpath" classpath="${build.class}" />
        <java  classname="performance.BenchmarkOntologyGenerator" classpathref="classpath" classpath="${build.class}" jvmargs="-Xmx 1024"/>
    </target>
  
    <target name="performence-run-benchmark" depends="init">
        <java  classname="performance.TestPerformanceWithUseOfFeatures" classpathref="classpath" classpath="${build.class}" jvmargs="-Xmx 1024"/>
    </target>

    <target name="performence-run-chart" depends="init">
        <java  classname="performance.chart.Chart" classpathref="classpath" classpath="${build.class}" jvmargs="-Xmx 1024"/>
    </target>
  
</project>