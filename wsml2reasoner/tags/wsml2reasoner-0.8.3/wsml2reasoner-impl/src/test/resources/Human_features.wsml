namespace {_"http://www.example.org/example/",
    dc _"http://purl.org/dc/elements/1.1#",
    xsd _"http://www.w3.org/2001/XMLSchema#",
    wsml _"http://www.wsmo.org/2004/wsml",
    loc _"http://www.example.org/loc#",
    oo _"http://www.example.org/oo#",
    foaf _"http://www.example.org/foaf#"}

ontology _"http://www.example.org/ontologies/example"
      concept Human
            hasName			impliesType foaf#name
            hasRelative		impliesType Human
            hasAncestor		impliesType Human
            hasParent		impliesType Human
  			hasMother		impliesType Mother
			hasFather		impliesType Father
			loves			impliesType {}
            hasWeightInKG	ofType xsd#float
            hasBirthdate	ofType xsd#date
            dateOfDeath		ofType xsd#date
            hasBirthplace	impliesType loc#location
            isMarriedTo		impliesType Human
            hasCitizenship	impliesType oo#country
            isAlive			ofType xsd#boolean

		axiom MotherSubParent
			definedBy
				?x[hasMother hasValue ?y] implies ?x[hasParent hasValue ?y].

		axiom ParentSubAncestor
			definedBy
				?x[hasParent hasValue ?y] implies ?x[hasAncestor hasValue ?y].

		axiom AncestorSubRelative
			definedBy
				?x[hasAncestor hasValue ?y] implies ?x[hasRelative hasValue ?y].

		axiom MarriedSubRelative
			definedBy
				?x[isMarriedTo hasValue ?y] implies ?x[hasRelative hasValue ?y].

		axiom ChildSubRelative
			definedBy
				?x[hasChild hasValue ?y] implies ?x[hasRelative hasValue ?y].

		axiom RelativeTransitive
			definedBy
				?x[hasRelative hasValue ?y] and ?y[hasRelative hasValue ?z]  implies ?x[hasRelative hasValue ?z].

		axiom AncestorTransitive
			definedBy
				?x[hasAncestor hasValue ?y] and ?y[hasAncestor hasValue ?z]  implies ?x[hasAncestor hasValue ?z].


      concept Man subConceptOf Human
      
      concept Woman subConceptOf Human

      axiom ManDisjointWoman
            definedBy
                  !- ?x memberOf Man and ?x memberOf Woman.

      concept Parent subConceptOf Human
            hasChild impliesType Human

      concept Father subConceptOf Parent
      
      axiom FatherEqDad
      	definedBy
      		?x memberOf Father equivalent ?x memberOf Dad.
      		
      axiom NarcistLoverAxiom
      	definedBy
      		exists ?x (?x[loves hasValue ?y] and ?y[loves hasValue ?y] and ?y memberOf Person) implies ?x memberOf NarcistLover.
      
      axiom hasChildSubLoves
      	definedBy
      		?x[hasChild hasValue ?y] implies ?x[loves hasValue ?y].
      
      concept Child subConceptOf Human

      concept Girl subConceptOf Woman

      concept Boy

      axiom ABoy
            definedBy
                  ?x memberOf Boy equivalent ?x memberOf Man and ?x memberOf Child.

      instance Mary memberOf {Parent, Woman}
            annotations
                  dc#description hasValue "Mary is parent of the twins Paul and Susan"
            endAnnotations
            hasName hasValue "Maria Smith"
            hasBirthdate hasValue xsd#date(1949,09,12)
            isAlive hasValue xsd#boolean("true")
            hasWeightInKG hasValue 60.3
            hasChild hasValue { Paul, Susan }

      instance Paul memberOf { Parent, Man }
            hasName hasValue "Paul Smith"
            hasBirthdate hasValue xsd#date(1976,08,16)
            hasChild hasValue George
            hasCitizenship hasValue oo#de
            loves			hasValue Paul
  			hasMother		hasValue Mary
            hasBirthplace	hasValue Innsbruck
            isMarriedTo		hasValue Paula

      instance Susan memberOf Woman
            hasName hasValue "Susan Jones"
            hasBirthdate hasValue xsd#date(1976,08,16)

       /*
        * This will be automatically an instance of Boy, since George is a
        * Man younger than 14.
        */
      instance George memberOf Man
            hasName hasValue "George Smith"
            hasFather hasValue Paul
            hasWeightInKG hasValue 3.52
            hasBirthdate hasValue xsd#date(1977,10,21)
            
