%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Slide 1)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 14:22:30 01/10/07
%%For: (Stephan Grimm)
%%DocumentData: Clean7Bit
%%BoundingBox: 29 62 747 599
%%HiResBoundingBox: 29.0 62.0 747.0 599.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Drucker-/PostScript-Farbmanagement 0
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial-ItalicMT
[/N18/Arial-ItalicMT 1 TZ
%%IncludeResource TimesNewRoman
[/N29/TimesNewRoman 1 TZ
%%IncludeResource ArialMT
[/N19/ArialMT 1 TZ
%%IncludeResource Arial-BoldMT
[/N20/Arial-BoldMT 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1424 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:d14250e0-5084-4fa2-b266-c3badd881e12' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Company='FZI Karlsruhe' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:d14250e0-5084-4fa2-b266-c3badd881e12' xmlns:pdfx='http://ns.adobe.com/pdfx/1.3/' pdfx:Company='FZI Karlsruhe'/>
<rdf:Description rdf:about='uuid:d14250e0-5084-4fa2-b266-c3badd881e12' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2007-01-10T14:21:56+01:00' xap:CreatorTool='Acrobat PDFMaker 6.0 für PowerPoint' xap:ModifyDate='2007-01-10T14:22:05+01:00' xap:MetadataDate='2007-01-10T14:22:05+01:00'></rdf:Description>
<rdf:Description rdf:about='uuid:d14250e0-5084-4fa2-b266-c3badd881e12' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:aadde61f-9071-4ade-9497-8ed0de9a06f8'/>
<rdf:Description rdf:about='uuid:d14250e0-5084-4fa2-b266-c3badd881e12' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:creator><rdf:Seq><rdf:li>Stephan Grimm</rdf:li></rdf:Seq></dc:creator><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Slide 1</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
29 62 718 537 rectclip
[ 0 -1 1 0 -33 628 ] concat
/N21 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: AJAMDD+TimesNewRomanPS-ItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (AJAMDD+TimesNewRomanPS-ItalicMT)
%%Title: (AJAMDD+TimesNewRomanPS-ItalicMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /AJAMDD+TimesNewRomanPS-ItalicMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-498 -307 1120 1023} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 940 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704AA398
8900AFCFF05DD> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /AJAMDD+TimesNewRomanPS-ItalicMT-Identity-H /Identity-H 0 [/AJAMDD+TimesNewRomanPS-ItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N26 (AJAMDD+TimesNewRomanPS-ItalicMT-Identity-H)
/N26 (AJAMDD+TimesNewRomanPS-ItalicMT-Identity-H) /Identity-H [ (AJAMDD+TimesNewRomanPS-ItalicMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%ADOBeginSubsetFont: AJAMED+TimesNewRomanPS-ItalicMT Initial
ct_T42Dict begin
-0.496 -0.305 1.117 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /AJAMED+TimesNewRomanPS-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32a02c8d29000000cc000000566376
7420ff44a29700000124000007786670676d015abb920000089c000005cd
676c7966a4e1c3cd00003da800000e5468656164c514940800000e6c0000
0036686865610c7d077200000ea400000024686d74781197607500000ec8
00000eb06c6f6361003046fc00001d7800000eb46d61787008d90c500000
2c2c000000206e616d65afe86dc200002c4c0000069670726570791a47c3
000032e400000ac367646972000000000000000000000000000103370190
00050000059a0533002c0125059a0533004c03a000660212010502020503
05040509030400000a870000000000000000000000004d6f6e6f00010020
fffc058efe460133072101bb400001bfdff700002701058e0000054c001f
054c001c037100180000ffe10000ffe80000ffe8fe4afffc056b0023fe68
ffe2033e00000095000000950000000000000000002500a8008e010b007d
00820045003200a400ca006b0070005100af003c00f001d7004700040025
00770029004000fd00160161004601370029008e0017ffca0025005bffe9
02e600020099008100f2007500d6006300c60006009a01330024003800cc
003dff67001305d8003600860095ffdb0007043400a500d8ffdcfffe0048
00a200d8013c01530380053e0057007a007c008c0117012a0138017c0026
003c007800bd00c0021009b5000c004d004e00540058006700b404010002
0005005000af01d5034300240058008b013501c0ffac002000250026002d
00410136022bffba001e002a0034003b003f00850094009800d7012e013d
033104b900170040006100b9010e0116012201bfff9c001f001f004d005c
0086008c009600aa00cb00cb011f0154022f036005a9fee8000e006f007c
007d008b00d500f1010a0157017802b803adfe3fff6affb3ffc4001f0037
003f0044004a0078007d009700a200a700b600c000c100c600d8011d0150
019701ee04740532fd81fed1fee0ff16fff1000f002d00550068006e007f
00890095009e00c200da00e400f801040108011101c2023002da030e049e
0517ff00ff8700000020002f00410057007800870088008800b900c200c5
012001280133017401d6020e020f026c027e02ab02ec038903b103e304e7
ff43ffa8ffc3ffdcffe9000700230023002600520077007d0081008f0099
00ac00ae00b500b800c800ea00f000f40135016a018b01b101b501f70214
02ad02d504fc05d805f0ff9dfffc000b00240025002c0030003000330040
004700490057006e009a00bd00c900cd00dc00fa00fa011b0139017e0187
018a018e0195019601df01f6028602cf02de039603a903b003c804010432
046a058b05e006510761fe96fe9aff4bff870013002500340038003e004a
0065006b0073007a009c00a200b200b700bf00f000f700fb010401130120
0124013b01520178017c0181018f01a001d90248026a026f02700301031d
032303270388041f04ab04d104da057a058bfe26fe59ff2e00010002000a
003b003b004700580058005f0066006b007a007a008b009900af00bc00c0
00c700cc00e900f200f500fb00fb0102010a010b01150121012701450145
015501570158015e01610168017d01a301ab01da01ee021002180222028f
029402a302d202e703710393039b03b303d303fe04ff050b05320532054b
0559058b05ab05f2065506890742076207a708ccfd2afdc8fddefe0cfe15
fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffafffc0000000000003
0094001d001f002000200027002e0048004b004c005e005f006b0071007c
008a00900091009100a700af00b300b400c400c600d100d200de00df00df
00e600e800ea00eb00f200f500f500fc010201180123013101330137015c
016201660170017a017a017a018201980199019b01b001bf01c001ca01d3
01d701d801e001e001f601f701f802120213022f023702440247024f0252
026302650270027f0298029b02a602b702ba02c502cf02d602d702e502fe
031c031d03450348035d035e03710379038103a103b703d403d503d803e1
03f803fe0404041f042104230425043a0467048304e00528054b0564056a
059f059f05c2060b066a06af06b306cb06e8070607280748075007a607b2
07ff009500af00920096000000000000000000000000017e01a80129025b
0212020301c302b4019301cd02b204ed020e0159017a0300022d042c00c8
004d00e602890325013e0378011b00f1018d00490203007c000e029d0247
0024000000000052004400330038005405d3041501a70000028601680050
00cf0002004b0024008800ba0025ffd800110091ff6b00b5011700260065
ff9900490080014b01c000f40167027102ea04fc0310017c01e103d90155
01e601ee0434019606cb005c022b0099003d009f00160039002700de0079
0120022e005a00990388009400210019002a046c05e8000001f203b200aa
0296028902b4ffc9020000ec0005005a0447010004e00000052a001f01eb
00ae016800ca02d3028901b5040601a1014f014b011c0308005e00c70024
029d006503750104028002f304d800d90239025a032c01f2043103030050
02e50283005901eb010800ac019602f8012100950180004400e501eb02e5
007400f301ff02fd038f026801c801c70116022b0142033000fe02e10162
0200002400ee05170108023700660006010201e602aa0366019b00d305c2
03dc044d03b6000401be013702fc03200244014d0338ffed002506f8030d
fed5ff43004402ffff92040bfdef0155017100d9ffc4032d0461044afbb5
fbcf02170192036d0558fff2fe7d0583023e006605e9073d007902430025
00cf00fd00af002a01ef021a0026001f0025003a000001170490fbfb0251
001d02f001f50078018f005f00240044005400bf00af006701a800260005
0006003f009800fa02ab00c2004d0375004a00b600c401bf017c006f0013
0263000c006801520002012e0104001f001f009a000000f1046900790080
005000bd056b00ab0080001e05a5404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c01182f2d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802ee23701020b802ee4520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb013
4358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b01060482046b0106048590a21211b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b8
fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a
2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab0
12435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab01243
5c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80622320
10238ab903b003b08a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
59b12401885458b2022002436042004b014b5258b2020802436042591bb9
40000080885458b202040243604259b94000008063b80100885458b20208
0243604259b94000010063b80200885458b2021002436042595959592da3
f2ff000100000002e6679006a0ee5f0f3cf50819080000000000a31fb8bd
00000000b5c9aa29fc05fd8c08f6083000000009000100010000f1ff0001
00000721fe450057086bfc05fcfe08f60018000700000000000000000000
000003ac0639011c00000000020000000200000002aa009a035c01260400
00930400005606aa00900639006201b6010d02aa008c02aaff2104000122
056600be0200ffeb02aa0036020000450239ffbb0400007a0400007d0400
002004000044040000400400004904000081040000e80400004e0400003b
02aa007a02aa002405660096056600c805660096040000c6075c006104e3
ff9c04e3ffd10556008a05c7ffc304e3ffd204e3ffce05c7008e05c7ffca
02aaffc0038dffba0556ffc90473ffbe06aaffbd0556ffc705c7007a04e3
ffcf05c7006104e3ffd10400000e0473008f05c700da04e3010006aa00f9
04e3ff77047300b80473fffc031d000d023900da031dff33036000380400
ffef02aa01680400003004000036038d003804000027038d00400239fe9b
0400ffc904000029023900580239fea0038d00140239004f05c700230400
00270400003c0400ff1e0400002d031d002a031dffed023900540400003c
038d002c05560023038dffb8038dff5c031dffc70333008d023300ed0333
ff670454001404e3ff9c04e3ff9e0556008a04e3ffd20556ffc705c7007a
05c700da040000300400003004000030040000300400003004000030038d
003c038d0040038d0040038d0040038d0040023900580239005802390058
02390058040000270400003c0400003c0400003c0400003c0400003c0400
003c0400003c0400003c0400003c040000dd033300d40400007204000031
0400fffc02cd00ad042f006c0400feb70614008b0614008b07d700be02aa
019902aa010c04640019071dff9405c7004805b40035046400350464005e
0464005a0400fff2049cffd203f4004005b4002b06960092046400480231
0000023500b2027b00e40625005b0556002d0400000504000049031d0090
0566009604640054040000020464001e04e5ffc40400005404000025071d
010a04e3ff9c04e3ff9c05c7007a078d002d055600360400ffee071dffed
0473018a0473017502aa01b202aa01910464003503f4002f038dff600473
00b70156feab0400001102aa007402aa002e0400fe7d0400fe7d0400ffe3
0200009102aa00410473001e0800007f04e3ff9c04e3ffd204e3ff9c04e3
ffd204e3ffd202aaffc002aaffc002aaffc002aaffc005c7007a05c7007a
05c7007a05c700da05c700da05c700da0239005802aa00fe02aa00c602aa
00f602aa012602aa01c102aa017d02aaffdb02aa012f02aa004e02aa0152
0473ffc6023900330400000e031dfff00473fffc031dffad023300ed05c7
ffd004000037047300b7038dff6004e3ffcf0400ff1e056600960566017a
026600a30266006f02660084060000a1060000a1060000820400ffce05c7
008e0400ffc902aaffc00400000e031dffed0556008a038d003c0556008a
038d003c04000027040000c502ab01ee04e3ff9c0400003004e3ff9c0400
003005c7ffc304de002705c7ffd004e3ffd2038d004004e3ffd2038d0040
0473ffbe0239004f0473ffbe02e9004e0473ffbe029500490556ffc70400
00270556ffc70400002705c7007a0400003c04e3ffd1031d002604e3ffd1
031d00260400000e031dffed0473008f0239ffdd0473008f02e9005605c7
00da0400003c05c700da0400003c0473fffc031dffc30473fffc031dffc3
048dffb605c7007d0617009d0433003c03b800300327001603f2003602dd
0033046d004a0400ffef0495009a0285001407eb002f0800004f04000099
0800004f040000990800004f040000980400009807d5016a05c700c00566
00c604cd00990566009804d5022204d5010505abffe904ed01c005ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f0415004004000025060000550600ffc30401004b049e
007301c0010d0355012606ab006c0355001e04d5009202d6008302d60083
04d500b202d6007004e3ff9c040000300556008a038d003a0556008a038d
003a04e3ffd2038d004004e3ffd2038d004004e3ffd2038d004005c7008e
0400ffc905c7008e0400ffc905c7008e0400ffc805c7ffca0400002905c7
ffca0400002902aaffc00239005402aaffc00239005802aaffc002390054
02aaffc0023a0034038dffba0239fea00556ffc9038d0014038d00140473
ffbe0239ffa20556ffc7040000270592ffc003db002705c7007a0400003c
05c7007a0400003c04e3ffd1031dfff90400000e031dffed04730093023a
003105c700da0400003c05c700da0400003c05c700da0400003c05c700de
0400003c06aa00f905560023047300b8038dff5e0239fe9d04e3ffa50400
0030071dff940556002d05c700480400000502aa014d06aa00f905560023
06aa00f90556002306aa00f905560023047300b8038dff5e02aa01bd02aa
00b70400003104cd005a060000a10600008206000084060000e802aa004c
02aaffdb02aa019902aa00b404e3ff9c056f005d065600590337004d05c7
007a0548005e05cf00200239005404e3ff9c04e3ffd104b2ffa704e3ffd2
0473fffc05c7ffca02aaffc00556ffc904d5ff8f06aaffbd0556ffc7051d
fff205c7007a05c7ffc504e3ffcf04c1ffb90473008f047300b804e3ff77
05a0011305c9001b02aaffc0047300bc0433003c0327001603f8003a0239
005503ac003503fcff7703270031033d002f03f8003a03ee005a02390055
03d7001f0377ffc00404ff94038d002c036d00250400003c03d7ff6f033f
003f03ac00350385ff4004f8008f05a600480239005503ac00350400003c
03ac00350595003f04e3ffce066000c1048dffb6055a008e0400000e02aa
ffc002aaffc0038dffba076bffbb075effc2066400c60550ffc7056200e1
05c7ffcd04e3ff9c04b8ffc604e3ffd1048dffb60517ff2d04e3ffd20754
ff9003f6fffe05c7ffcc05c7ffcc0550ffc7056bffb906aaffbd05c7ffca
05c7007a05c7ffc504e3ffcf0556008a0473008f056200e1066f009504e3
ff7705c7ffcc058300e70858ffe40858ffe40568007606faffc604b8ffc6
053d001e0842ffbe0542ff9104000030040600490379003f031f0002040c
003d038d00400771ffff031fffce0400003c0400003c03be0025037dffa5
051bffa403f800290400003c040000270400ff1e038d003805c70023038d
ff5c05ae003c038dffb80400003c03d10056060a0040060a00400427003c
056b006603a400660387000f05a4002a03b8ff84038d003c03d500280304
ffaa037d0036031dffed02390058023900550239fea0056fffa605b2002a
0400002903be0025038dff5c040000250385ffc30285005608000041078b
ffa80402003202aa003502aaff4f02aaff6502aaff4502aa003502aaffc2
02aaffc202aaffc302aaffc302aa01cf02aaff4f02aa010202aa005402f7
00ed02aa015c02aa005f02be037c02be003702aa007a03d3ffd5037fffc5
0291ff7e035700bd03ceffd1021c00bf0208002903c4fffa03d3005901ef
00c6038000c10349ffc7037000c703c8ffe403c3ffde020b004a023cff9d
03b1006b0383ffcd0372004f036effd5039000c50397fff0038eff8f0395
00bc04f500c203cbff85043800bf040b00c603de00c60186009b02f1009b
064c0010021c0041038000c10380008f03700016037000160383ffd104f5
00c204f500c204f500c204f500c203d3ffd503d3ffd503d3ffd5037fffc5
0291ff7e035700bd03ceffd1021c00620225000c03d3005901ef005a0380
00c10349ffc7037000c703c3ffde023cff9d03b1006b0372004f036effd5
0397fff0038eff8f038e009d04f500c203cbff85021c00bf037fffc50349
ffc7036effd50448004a0000ffdc0000ff250000ffdc0000fe510400005a
0800000005c7007a0445003c060800da045d003c0000ff1a0000fdf20000
fdb40000ff910000fef60000fee40000ff780000ff8a0000fe880000fefb
0000fea20000fe6e0000fdf4000000350000001f0000fe47041a00780600
00a10600006f0000ff2b0000fe6c0000fe8a0000fdd20000ff1e0000fe38
0000fdcd0000fd190000fce70000fd710000fd3f0000fcf90000fccd0000
fc050000fc050000fc550000fc0f0000ff190000ffa20000fe310000fc55
0000fcef0000fd9c0000fdda0000fca10000fd530000fcef0000fcb30000
fd0d0000fcb30000fdba0000fd940000fd7e0000fd300239005804e3ff9c
0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3
ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c04000030
04e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400
003004e3ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2
038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3
ffd2038d004002aaffc00239005802aaffc00239003105c7007a0400003c
05c7007a0400003c05c7007a0400003c05c7007a0400003c05c7007a0400
003c05c7007a0400003c05c7007a0400003c05c7007a0445003c05c7007a
0445003c05c7007a0445003c05c7007a0445003c05c7007a0445003c05c7
00da0400003c05c700da0400003c060800da045d003c060800da045d003c
060800da045d003c060800da045d003c060800da045d003c047300b8038d
ff5c047300b8038dff5c047300b8038dff5c04e3ff9c0400003002aaffc0
0239005805c7007a0400003c05c700da0400003c05c700da0400003c05c7
00da0400003c05c700da0400003c05c700da0400003c000000be000000be
000000be000000be048dffb6031f00020754ff900771ffff0550ffc703be
00250550ffc703be002505c7ffca03f80029047300b804000003047300b8
0400ffdf04e3ff77038dffb8058300e703d100560583ffca04000027058f
007a038d001b05c7007a0400003c00000000000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
0000006800000068000000680000006800000068000002e4000002e40000
02e4000002e4000002e4000002e4000002e4000002e40000048800000488
0000048800000488000007c2000009f600000afc00000afc00000afc0000
0c7a00000c7a00000c7a00000c7a00000c7a00000c7a00000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540000
0e5400000e5400000e5400000e5400000e5400000e5400000e5400000e54
00000e5400000e5400000e5400000e5400000e5400000e5400000e540001
000003ac00f2003c0068000500020010002f0055000004830ac300030002
0000000e00ae000000030000000000fe0000000000030000000700d800fe
0001000000000000007f01d60001000000000003001f0255000100000000
0004001f02740001000000000006001f02930001000000000007006c02b2
000300010409000000fe031e0003000104090001002c041c000300010409
0002000e04480003000104090003003e04560003000104090004003e0494
0003000104090006003e04d2000300010409000700d80510005400790070
00650066006100630065002000a900200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002e00200044006100740061002000a90020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e00200070006c0063002f0054
00790070006500200053006f006c007500740069006f006e007300200049
006e0063002e00200031003900390030002d0031003900390032002e0020
0041006c006c002000520069006700680074007300200052006500730065
007200760065006400540069006d006500730020004e0065007700200052
006f006d0061006e00ae002000540072006100640065006d00610072006b
0020006f006600200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e00200070
006c00630020007200650067006900730074006500720065006400200069
006e00200074006800650020005500530020005000610074002000260020
0054004d0020004f00660066002e00200061006e006400200065006c0073
006500770068006500720065002e547970656661636520a920546865204d
6f6e6f7479706520436f72706f726174696f6e20706c632e204461746120
a920546865204d6f6e6f7479706520436f72706f726174696f6e20706c63
2f5479706520536f6c7574696f6e7320496e632e20313939302d31393932
2e20416c6c20526967687473205265736572766564414a414d45442b5469
6d65734e6577526f6d616e50532d4974616c69634d54414a414d45442b54
696d65734e6577526f6d616e50532d4974616c69634d54414a414d45442b
54696d65734e6577526f6d616e50532d4974616c69634d5454696d657320
4e657720526f6d616ea82054726164656d61726b206f6620546865204d6f
6e6f7479706520436f72706f726174696f6e20706c632072656769737465
72656420696e2074686520555320506174202620544d204f66662e20616e
6420656c736577686572652e005400790070006500660061006300650020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002e00200044006100740061002000a900200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e00200070006c0063002f005400790070006500200053006f
006c007500740069006f006e007300200049006e0063002e002000310039
00390030002d0031003900390032002e00200041006c006c002000520069
00670068007400730020005200650073006500720076006500640041004a
0041004d00450044002b00540069006d00650073004e006500770052006f
006d0061006e005000530052006500670075006c006100720041004a0041
004d00450044002b00540069006d00650073004e006500770052006f006d
0061006e00500053002d004900740061006c00690063004d00540041004a
0041004d00450044002b00540069006d00650073004e006500770052006f
006d0061006e00500053002d004900740061006c00690063004d00540041
004a0041004d00450044002b00540069006d00650073004e006500770052
006f006d0061006e00500053002d004900740061006c00690063004d0054
00540069006d006500730020004e0065007700200052006f006d0061006e
00ae002000540072006100640065006d00610072006b0020006f00660020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e00200070006c006300200072
00650067006900730074006500720065006400200069006e002000740068
006500200055005300200050006100740020002600200054004d0020004f
00660066002e00200061006e006400200065006c00730065007700680065
00720065002e0000ba0054ffc003bbb345453240b803bbb32b2e3240b803
bbb2282932b9ffc003bbb31a263280411303bb009f03bb00af03bb00cf03
bb0004000003bb001f03bb000203bb02af0027001fffc003b9b2161b32b9
ffc003b8b2424232b9ffc003b8b2363832b9ffc003b8b32a2d32df410a03
b800ef03b8000203b803b90028001fffc003b9b3282e32f0410b03b90001
000003b7000103b700030800001f03b60381b23a1f0f411703b3001003b2
002003b2005003b2007003b200e003b2000600cf03b300df03b300ef03b3
00ff03b30004001203a8b2e2891fbe039f016b019a001f03980093080140
0c1f7f047f05027f027f03025fbb02b00001ffc00117b2196632b8ffc0b3
651a6632b9ff800173b2196632bd038401170800001fffc002afb2313340
b802afb22e3340b802afb328293240b802afb326273240b802afb3212532
40b802afb31c203240b802afb2233340b802afb21933a0bc02af00b002af
00e002afb5034003212932b8fff2b33a263d32bc038203820382003a0800
b51f40255c331eb80381b25c6432b8ffeeb3252e3314b80381b32b2e3269
be03810001008a03810001000e0381b32b2f3210b80381b3515b320cb803
81b34e513222b80381b3474d320eb80381b246330ab80381400926473212
254358320cb80381b2323310b80381b22a3312b80381b3373d3212bb0381
003d0033fff44015253d331825355b32102526343206252a330c252e33b8
fffe4024252d330c3a2f33329925aa25ba25c92504052536330c25323832
193a293a383a03182517b80381b42825382504bc03810381038100250800
40101f0f1f2b2e32691f781f020b1f303332b8fff1b31f263d32bc038003
800380001f080040151f375f07af07025f06af060222ac2b2e3209ac2f33
b8ffdc400aac1f223222232b52320eb8037fb229330eb8037fb2223314b8
037fb21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037fb64c4f3232262c
33410affee037f00390033fff8037f002b0033ffea037fb23a3320b8037f
b33f46321eb8037fb32f3a3212b8037fb22e331eb8037fb32a2d320eb803
7fb2263304b8037fb3494a3404b8037fb2463304b8037fb2213318b8037f
400c1d3322263032322226333832b8fff8400a262b2f3209261b21328abe
037f0001037f037f037f00260800402e1f371f062f063f06039f02af02bf
02cf02049f03af03bf03cf03046f037f038f03031f032f033f034f035f03
050f413502ed0001005f02ed009f02ed00df02ed0003002f02ed003f02ed
006f02ed000300af02af0001004f02af009f02af0002002f02af003f02af
0002003f02b00001004f02af005f02af0002002f02af003f02af00020070
03b2000103b203b202ed02ed02b002b002af02af401a3701003001400102
010100090102000800171700000012110840410b027b02230034000d013d
0034000d01370034000d011b401a340d8f340d84340d68340d59340d5434
0d48340d2c340d28340d411002350020000d021b0020000d01fc0020000d
01c30020000d01500020000d012c401a200df0200dbe200d94200d79200d
6a200d61200d5f200d44200d410d013e0138000d003d0138000d00300138
000d001d0138000d01fdb40f4d0f0009bf01fd004d000d03b1037f001500
1f0215b226341fb80214b2263f1fb80208b21ebb1f41190206001e080100
1f0205001f02ab001f0204001f02ab001f0203001f0401001f0201003101
9a001f01fb00230156001f01aeb2262a1fb801adb2262a1fb801abb22634
1f411501a8002602ab001f01a5001e0125001f01a400ab02ab001f01a200
3102ab001f01a1003102ab001f019db2236c1fb8019cb2236c1f4109019b
00230401001f019a0033019a001f0176b2262e1fb8016cb231721f411101
6b0023019a001f016800240401001f014500260801001f013f0023040100
1f0123b21e9e1fbc0121001e0201001f0100b426791ffd1fb80125b21ffa
33b80801b21ff924b802abb21fe826b80101b21fe51fb8019ab21fe431b8
0101400b1fe331e41fe231891fd226b80201b61fd026cd1fcd25b80401b2
1fb731b8019ab21fae26b80801b21fac1eb80401400b1f9e315e1f97269e
1f9333b80801b21f8a24b8019ab21f831fb802ab40131f82236c1f7523e4
1f7026cd1f6423721f5e25b80401b21f5d23b802abb21f55e6b80401b21f
5324b80201b21f4f33b802abb21f4e26b8040140131f4731671f4626ab1f
4331cd1f3e235e1f3a1fb80401b61f3924e41f3723b80801b21f2e23b804
01b21f2a1eb80125400b1f2923ab1f2731ab1f5537bc01c60007018a0007
012b402e077f077107690766074b074007380736072d0722072107140812
0810080e080c080a080808060804080208000814b8ffe0402b0000010014
061000000100060400000100041000000100100200000100020000000100
0002010802004a00b013034b024b5342b0372b4bb807ff52b0382b4bb009
505b58b101018e59014bb0c063004b6220b0f65323b8010a515ab0052342
01b0124b004b544218b0382bb00288b801005458b801ffb101018e851bb0
124358b900010140858d1bb900010159858d59590016763f183f123e1139
46443e113946443e113946443e113946443e11394660443e11394660442b
2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181db096
4b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027d027b4544
b9027c027b45445958b90146027d455258b9027d01464459594bb0475320
5c58b9001e027c4544b90026027c45445958b9017f001e455258b9001e01
7f4459594bb05e53205c58b9001f027d4544b90025027d45445958b901a8
001f455258b9001f01a84459594bb8010153205c58b1ab1f4544b11f1f45
445958b9047000ab455258b900ab04704459594bb8012553205c58b1e61f
4544b11f1f45445958b9051000e6455258b900e605104459594bb0175320
5c58b124244544b1312445445958b12224455258b124224459594bb05153
205c58b124244544b1232445445958b17d24455258b1247d4459594bb06e
53205c58b124244544b1332445445958b1aa24455258b124aa4459592b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b45695342014b5058b108004259435c58
b1080042591610703eb0124358b911b53d801bba011c03d9000b2b59b00a
2342b00b2342003f3f182b103c012f5d060cb0062342b0072342b0124358
b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d41
2d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211b
ba01a80400000b2b59b0102342b0112342002b4bb02e5358b8016b45b02a
60b8016b2344590018456944456944184569444569447373737375757573
737475757575752b4bb026534bb03d515a58b1262645b0196044592b4518
6944742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
004bb02a534bb03f515a58b1070745b04060445973732b2b451869442b2b
752b2b4518694475752b2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
74752b2b2b2b2b451869442b002b732b2b2b2b2b2b2b2b2b012b2b2b0073
73732b2b2b01435c58b8ffdeb31e1c3318b8037fb52b3318262b33b9fff0
0381b112332b2b2b2b590173742b002b73752b2b732b2b2b2b2b73752b2b
2b2b2b0000>
[3669 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N27/AJAMED+TimesNewRomanPS-ItalicMT 1 TZ
%ADOBeginSubsetFont: AJAMEE+SymbolMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (AJAMEE+SymbolMT)
%%Title: (AJAMEE+SymbolMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /AJAMEE+SymbolMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -220 1113 1005} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 192 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235BDD70
699E096A6312D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /AJAMEE+SymbolMT-Identity-H /Identity-H 0 [/AJAMEE+SymbolMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N30 (AJAMEE+SymbolMT-Identity-H)
/N30 (AJAMEE+SymbolMT-Identity-H) /Identity-H [ (AJAMEE+SymbolMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%ADOBeginSubsetFont: AJAMGF+ArialUnicodeMS-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (AJAMGF+ArialUnicodeMS)
%%Title: (AJAMGF+ArialUnicodeMS Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /AJAMGF+ArialUnicodeMS def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1011 -330 2260 1078} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 50377 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300EE23D0BA079325E1D5F86AF2FE7DC374914003E
5DDB91552C283> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /AJAMGF+ArialUnicodeMS-Identity-H /Identity-H 0 [/AJAMGF+ArialUnicodeMS] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N31 (AJAMGF+ArialUnicodeMS-Identity-H)
/N31 (AJAMGF+ArialUnicodeMS-Identity-H) /Identity-H [ (AJAMGF+ArialUnicodeMS) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%ADOBeginSubsetFont: AJAMNG+MonotypeCorsiva Initial
ct_T42Dict begin
-0.238 -0.305 1.156 0.91
 256 array 0 1 255 {1 index exch /.notdef put} for  /AJAMNG+MonotypeCorsiva
Type42DictBegin
[<00010000000c000c000c000c4f532f3270336767000000cc000000566376
7420ba68a9e8000001240000049e6670676d2524cbb0000005c40000045f
676c796654d3bf2100002350000003d268656164be4a023700000a240000
0036686865610e4f084700000a5c00000024686d7478fe0c91a400000a80
00000a746c6f636158fe5a47000014f40000053c6d617870052105df0000
1a30000000206e616d65b1894a0000001a500000052070726570934cd750
00001f70000003de67646972000000000000000000000000000102cd0190
00050000059a0533ffd400b7059a053300b601ed006602120a0603010101
010201010101000002870000000000000000000000004d4f4e4f00010020
fb020583fdee00fa0652026c2000009fdfd70000000005800003049d0010
04a2000d03490000ffdaff920000ffe6ffe6fffffe00ffee05610022fe23
ffde0296000004c30000023fffee04b100000000fff10271000000000000
0000000000000000ffffffffffffffffffffffffffffffffffffffffffff
ffff026401ea000000000000000000000000000000000000000000000000
000000000000ffffffffffff0000000000a7000000000000000000000000
000000000000000000000000008b0062007d006f0080009600270137003f
00930174004b003c00b900120045006d0048008c00a7004300c900d0004d
007100a800f70037025900b500610083014f005d0003002b003800460015
002b002f0039005f0025007500f20031003200410052006a01f20375003f
007800af0016003b003d00720089009401ea029405b10002000600470066
006f006f00a500130017003e0056007000840089009000b302b803230338
00290038003a006100610064006e0087009a00a9010c01b401fa02d102d1
03070003001f003c003e0044004f005200620067006800690086009200c5
011e01220122019d01d401e101ed022e028c02fa036e0401040504180467
04ab054d057305a0000200200020002d00300037003c0050005500650074
0078007800810082009c009f00a200a500a600a800ab00ad00b700b800bb
00be00cb00d4010a01220129013b015e0183018702160256029f02c002c5
02e703110361037d039203a3044a045404a104b70576059005d4069506ed
00010004000f0014002200270032003e0040004300590066006d00730073
007a008600860089008d009d00a800ac00b000b500e300e700e800eb00ef
010701160131014501450156015d015f01a901b801b901c701cb01d901f4
01fc02090230023d024102660266026b02710280029902a502ab02b302c9
02e302e702f202f302fa033c03400345035503730375039e03a803ad03bf
03e303e503eb040004180426043c043f044e0485048d04b004bc04cd04d5
04f904fe0500050e0513052f0535054905530554055905610574057b0595
05bb0601061d063a0641066106b906b906de073e077c079b0805082300b0
00c200ae00000000000000000000000000000072021d00900079068e0063
017300a8009a007e00f2008d009e00f200be00060678005b00d202180096
00d100d1001701050014004600450116001900c900cb014d007900af001c
007a016e025b02c80046000501bf002c00fa007400ad01af00e000ce015a
011500020287005e0033017600b900a800bf01490259005d00d800180243
00c301c800880148007e00bb00b300b300cb002c00f5010a044b00ca0074
008e00cb00bd010100fd006a001700420118036600d600a600e800f700cb
01210167004c00e001660052005700c200690008002000d7013b008f0132
010f0121019101e900ae0190010c0019017401e6014e009f0280003d0140
009b0113001d00b6028703270208056b0164007f023c00ec02c501cc0070
0095015e00f405ed00de00d301db00e400b5026902df00ec024c0157029c
02da01ea018c038600f90192018200b601df01d701b40092018800d4001d
019807730017000200dc011f0046004600e10103002700ba03af000c0089
006c006800004037383734333231302f2e2d2c2b2a292827262524232221
201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706050403
0201002c4523466020b02660b004262348482d2c452346236120b02661b0
04262348482d2c45234660b0206120b04660b004262348482d2c45234623
61b0206020b02661b02061b004262348482d2c45234660b0406120b06660
b004262348482d2c4523462361b0406020b02661b04061b004262348482d
2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d442359
20b0ed51582320b04d44235920b0042651582320b00d44235921212d2c20
204518684420b001602045b04676688a4560442d2c01b10b0a432343650a
2d2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370b1024645
3ab10200080d2d2c45b04a234445b04923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae4
182d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c
b01243588745b0112bb0472344b0477ae41b038a45186920b04723448a8a
8720b0a05158b0112bb0472344b0477ae41b21b0477ae45959182d2c2d2c
4b52582145441b23458c20b00325455258441b212159592d2c01182f2d2c
20b0032545b049234445b04a23444565234520b00325606a20b009234223
688a6a606120b01a8ab000527921b21a4a40b9ffe0004a45208a54582321
b03f1b235961441cb114008a5279b34940204945208a54582321b03f1b23
5961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b
2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b
2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b00052
5823b002253823b002256538008a63381b212121212159012d2c4569b009
43608a103a2d2c01b005251023208af500b0016023edec2d2c01b0052510
23208af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110
203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743
b006430b2d2c3eb02a2a2d2c352d2c76b04b23701020b04b4520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4523204520b10405258a505826618a8b1b26608a8c59442d2c46234660
8a8a462320468a608a61b8ff8062232010238ab14b4b8a70456020b00050
58b00161b8ffc08b1bb0408c5968013a2d2cb0332bb02a2a2d2cb0134358
031b02592d2cb0134358021b03592d00000100000002599a893192af5f0f
3cf5001b080000000000a55575f400000000b268e8d0fe15fd8c0945074d
0000000b0001000000000000000100000652fd94003c0897fe15fdf10945
018e0064000000000000000000000000029d060001000000000001c20000
01c20000023d010e01c3012d05710159038500ae0571014b063d00e90148
0171021400ba01c3ff6f035c01180429011201c30025023d00a801c30095
02b8ffe9038500d1038500d3038500970385009403850099038500850385
00f80385012a038500c5038500930214009501eb0023042900de04290112
0429014b030a00b3059a010304f6ff9804cd0089042900c4059a008e04f6
008704a300e504f601030571002b030a008a03330001054800b204a40062
06b80081059a005904cd00d20452009504cd00d204cd00c203ae00260400
00a205eb00ed051f00d2070a00c5047bfff0047b00c604f6008801eb0081
03d701ac028f0042042901f80400fff401c30137035c0097035c00ef02b8
00b00385009a02b800a5028ffedd0333ffe5038500b201eb00a201c3ff1d
038500b401eb00c104f600ab03ae00aa033300ae0385ffe30333009c0266
00a7028f0082028f00db03ae00a80385009105710097035c00300333ffc3
0385004a01eb00b20429029b01ebffb20429011904f6ff9804f6ff980429
00c404f60087059a005904cd00d205eb00ed035c0097035c0097035c0097
035c0097035c0097035c009702b800a202b800a502b800a502b800a502b8
00a501eb00a201eb00a201eb00a201eb00a203ae00aa033300ae033300ae
033300ae033300ae033300ae03ae00a803ae00a803ae00a803ae00a803ae
01150333019e0385007b03d70069035cffc404cd020004000066035cfe85
05eb00bb05eb00bb080000ad026601d002e101b70464012f05ebffc30548
010705b40036046400f6046400fc0464016805c3016a049c00a203f40041
05b4002b0695002e0464004802310000021400c8021400ef062500320452
009a038500c903330085023d00c104cd0164046400510333fee004640137
04e5001a02b800a2030a0077080000f101c2000004f6ff9804f6ff9804cd
00d2068f00d1047b00b00400007f0800007f02b8017402e1018a01eb0190
01eb01900464012e03f4002f0333ffc3047b00c6007bff6e0385009301eb
00d9021400770429fed60429fede03d7005601c3011b01710019023d0010
07ae014204f6ff9804f6008704f6ff9804f6008704f60087030a008a030a
008a030a008a030a008a04cd00d204cd00d20652000004cd00d205eb00ed
05eb00ed05eb00ed01eb00a202b80168038501de038501dd0385022b01c3
01aa026601bf02660091033300a4023d008a02b801db04a4006202660087
03ae0026028f008204f600880385004a0429029b059a008e033300ac047b
00c60333ffc3045200a50385ffe304cd016404290158021d00de021d00b5
021d00c3054801280548012d0548011d04a200e504f601030333ffe5030a
008a03ae0026028f0082042900c402b800b0042900c402b800b00385009a
0400012202aa022c021d00d204f6ff98035c009704f6ff98035c0097059a
008e03dc009a059a008e04f6008702b800a504f6008702b800a5063d008a
03ae00a104a4006201eb00c104a4006202b300c104a4006202a000c1059a
005903ae00aa059a005903ae00aa04a8011704cd00d2033300ae04cd00c2
026600a704cd00c2026600a703ae0026028f0082040000a2028f008b0400
00a2028f00db05eb00ed03ae00a805eb00ed03ae00a804f600880385004a
04f600880385004a052b00610638006b0639006b0449005203c90052038b
005204ae0052036b0041047900520400fff40148015001c3010c03de010e
026400d10897009504dc012f034200ab0800004f040000990800004f0400
00990800004f040000980400009807d5016a05c000c00429011204d50117
02d6013802d6013804d5014f02d6012502aa009904f6ff98035c00970429
00c402b800b0042900c402b800b004f6008702b800a504f6008702b800a5
04f6008702b800a504f601030333ffe504f601030333ffe504f601030333
ffe50571002b038500b20571002b038500b2030a008a01eb00a2030a008a
01eb00a7030a008a01eb00a2030a008a01eb00a20333000101c3ff1d0548
00b2038500b4038500a804a4006201eb005e059a005903ae00aa056400b2
036800aa04cd00d2033300ae04cd00d2033300ae04cd00c20266009c03ae
0026028f0082040000a2028f00a105eb00ed03ae00a805eb00ed03ae00a8
05eb00ed03ae00a805eb00ed03ae00a8070a00c505710097047b00c60333
ffc3022ffead04f6ff98035c009705ebffc30452009a05480107038500c9
02e1025202e10120050effb00215012505ba00f2064200f1033500b50512
00f204f80109055c00c601eb00a204f6ff9804cd0089046600e6039efff4
04f6008704f600880571002b04cd00d2030a008a054800b204f6ff9806b8
0081059a0059052700da04cd00d20571002b04520095056000d0040000a2
047b00c6051f00dc047bfff005fc009f054600af030a008a047b00c603cf
009a02be00a8039c00aa01eb00a2038d00a103cf009a03a8ff2603c7ffd0
033300ae02be00a802eb009b039c00aa035c00ed01eb00a203c300a803fc
003703ae000e0385009102e900ad033300ae044e0037038f000002b400bc
038100ae032300a5038d00a104b600890404ffdc057b009204e900ad01eb
00a2038d00a1033300ae038d00a104e900ad04f60087053b00a3046600e6
042900c503ae0026030a008a030a008a033300010689ff9706b2002b054e
00a2054800b205950093057100c904f6ff98045a006104cd0089046600e6
059a008e04f6008706b80044042900940573002b0573002b054800b204f6
ff9806b800810571002b04cd00d20571002b04520095042900c40777002a
05950093064800d1047bfff0057100c9059c009f079e00c8079e00c80493
00f1075e00a404a000a40429007107a4002b044cfe15035c0097033d00cc
02ee00a502be0096033300ac02b800a50537002402fe009403ae00a803ae
00a8038500a80366003704fa003603ae00a8033300ae03ae00aa0385ffe3
02b800b004f600ab0333ffc304b6000c035c003003ae00a80373006d050a
00a8050a00a803c3006304e300a3033d00a4033300b004eb00a803be006d
02b800a50350002d02c7009702b800b0028f008201eb00a201eb00a201c3
ff1d04b0003604c300a8038500b2038500a80333ffc303aeffe0042500e6
02aa00cc070a00c505710097070a00c505710097070a00c505710097047b
00c60333ffc30600007f01eb017d0385011c03d700690739005904cd00f6
0548011c05480100054800eb0548014d04cd009904cd015004cd02c104cd
01a505b4ffee05b4028305b4028305b4ffee05b4028305b4ffee05b40283
05b4ffee05b4ffee05b4ffee05b4ffee05b4ffee05b401c505b4028305b4
01c505b401c505b4ffee05b4ffee05b4ffee05b4028305b401c505b401c5
05b4ffee05b4ffee05b4ffee05b4028305b401c505b401c505b4ffee05b4
ffee05b4ffee05b4ffee05b4ffee05b4ffee05b4ffee05b4ffee05b4ffee
05b4ffee05b4ffee05b4ffee05b4ffee05b4ffee05b4ffee05b4ffee05b4
02da05b4006b05b4ffee05d7000004d500920800000007eb013007eb0120
07eb013007eb012004cd00ae04cd007c04cd0026082b0198086b01b80756
0010046b0059055600660444003c054a003c04ba003c040e003c062b001a
08000130026600a8021d00eb021d014d021d00fa04cd016b000000270027
002700270027002700270027002700270027002700270027002700270027
002700270027002700270027002700270027002700270027002700270027
00270027002700270027002700270027014b014b014b014b014b014b014b
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e901e901e901e901e901e901e901e901e9
01e901e901e901e901e901e901e900010000029d00f2003c007700050002
001000140039000001f6045f000300010000000c00960001000000000000
00c000000001000000000003001600c00001000000000004001600d60001
000000000006001600ec0001000000000007006e01020003000104090000
018001700003000104090001002c02f00003000104090002000e031c0003
000104090003002c032a0003000104090004002c03560003000104090006
002c0382000300010409000700dc03ae4469676974697a65642064617461
20636f7079726967687420546865204d6f6e6f7479706520436f72706f72
6174696f6e20313939312d313939352e20416c6c20726967687473207265
7365727665642e204d6f6e6f7479706520436f7273697661aa2069732061
2074726164656d61726b206f6620546865204d6f6e6f7479706520436f72
706f726174696f6e207768696368206d6179206265207265676973746572
656420696e206365727461696e206a7572697364696374696f6e732e414a
414d4e472b4d6f6e6f74797065436f7273697661414a414d4e472b4d6f6e
6f74797065436f7273697661414a414d4e472b4d6f6e6f74797065436f72
736976614d6f6e6f7479706520436f7273697661aa206973206120747261
64656d61726b206f6620546865204d6f6e6f7479706520436f72706f7261
74696f6e207768696368206d617920626520726567697374657265642069
6e206365727461696e206a7572697364696374696f6e732e004400690067
006900740069007a006500640020006400610074006100200063006f0070
00790072006900670068007400200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200031003900390031002d0031003900390035002e00200041006c
006c00200072006900670068007400730020007200650073006500720076
00650064002e0020004d006f006e006f007400790070006500200043006f
007200730069007600612122002000690073002000610020007400720061
00640065006d00610072006b0020006f006600200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e0020007700680069006300680020006d006100790020
006200650020007200650067006900730074006500720065006400200069
006e0020006300650072007400610069006e0020006a0075007200690073
00640069006300740069006f006e0073002e0041004a0041004d004e0047
002b004d006f006e006f00740079007000650043006f0072007300690076
00610052006500670075006c006100720041004a0041004d004e0047002b
004d006f006e006f00740079007000650043006f00720073006900760061
0041004a0041004d004e0047002b004d006f006e006f0074007900700065
0043006f007200730069007600610041004a0041004d004e0047002b004d
006f006e006f00740079007000650043006f00720073006900760061004d
006f006e006f007400790070006500200043006f00720073006900760061
212200200069007300200061002000740072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e0020
007700680069006300680020006d00610079002000620065002000720065
0067006900730074006500720065006400200069006e0020006300650072
007400610069006e0020006a007500720069007300640069006300740069
006f006e0073002eb80249b3f61e1f6fbe024e007f024e008f024e000302
4e401e591e1f00591059205970598059905906a059b059c059d059e059f0
5906afbe024c00bf024c00cf024c00df024c407e04001400151014101520
142015060014001520142015201620173014301550145015601460158014
8015c014c015c016c017f014f01514090014001502001400150208001800
19020018001910181019201820192f1e2f1f701870197f1e7f1f0c090018
0019020801000101000901020008004646000000121108404868bb018b00
480032024db3681d1f20b80125b2483220b8011f4073483220f6483220f5
483220f4483220f3483220f1483220f0483220ee483220ed483220eb4832
20c5483220c4483220b2483220b0483220a4483220a2483220a14832209c
48322092483220904832208c4832208b48322074483220724832206a4832
205e4832205a4832205948322055483220b8012eb2483220b8012cb24832
20b8012ab2483220b80129b2483220b80124b2483220b801214080483220
f2483220ef483220e9483220e6483220a5483220a3483220914832208248
3220814832206d4832205748321609160990cc0790cb0790940790880790
7507907107906f07906e07906b07906707906207905f07905c0724082208
20081e081c081a08180816081408120810080e080c080a08080806080408
020800080001b013034b024b5342014bb0c063004b6220b0f65323b8010a
515ab005234201b0124b004b5442b0382b4bb8080052b0372b4bb009505b
58b101018e59b00288b801005458b801c0b101018e851bb0124358b90001
0137858d1bb9000101ff858d595900162b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b014b5079b9001f012b400a
071fe5071fc8071fc1072b2b2b2b4b5379b90090012b400a0790e50790c8
0790c1072b2b2b2b1801b25000374b618b601d002b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b0145695342014b5058b108004259435c58b10800
4259b3020b0a124358601b2159421610703eb0124358b90fce3e051bba00
fd03e0000b2b59b00a2342b00b2342003f3f182b103c012f060cb0062342
b0072342b0124358b93b21187e1bba040001a8000b2b59b00c2342b00d23
42b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b012
4358b9187e3b211bba01a80400000b2b59b0102342b01123420100b00245
68b801954568b0408b60b0202344b0064568b801964568b0408b60b02223
44b0004568b801984568b0408b60b801972344005e735e73735e73735e73
73730173742b752b042b00>
[979 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N32/AJAMNG+MonotypeCorsiva 1 TZ
29.0 62.0 537.0 718.0 re
W
n
q
n
567.47998 61.011002 -540.0 719.999985 re
eoclip
n
q
0.0 10.08 -10.02 0.0 37.5 61.01054 cm
0.0 0.0 0.0 setrgbcolor
q
n
0.0 0.0 1.0 1.0 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 42 def
/ImageMatrix [42.0 0.0 0.0 -41.999996 0.0 41.999996]  def
/BitsPerComponent 1 def
/Decode [0.0 1.0 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
42 42 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 6 string put
imagemask
FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFF
FFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFF
FFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0
FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFF
FFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFF
FFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0
FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFF
FFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0
Q
Q
Q
172.860001 126.890503 m
/N19 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(registerOntology)
[3.98139 6.657477 6.657477 2.649481 5.98548 3.321478 6.657477 3.98139 9.321479 6.657477 3.321478 
6.657477 2.649481 6.657477 6.657477 5.98548 ] pdfys
n
471.720001 285.651001 76.259979 230.880005 re
0.91765 0.91765 0.91765 setrgbcolor
f
0.75 w
8.0 M
1 J
n
471.720001 285.651001 76.259979 230.880005 re
0.0 0.0 0.0  setrgbcolor
S
n
501.119995 350.871002 46.5 93.420013 re
0.86667 0.86667 0.86667  setrgbcolor
f
n
501.119995 350.871002 46.5 93.360016 re
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
521.580017 357.650482 m
/N20 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(Inference)
[5.003998 10.997864 5.993866 10.007996 7.002136 10.007996 10.997864 10.007996 10.007996 ] pdfys
543.239258 367.491211 m
(Engine)
[11.991914 10.983644 10.983644 4.989778 10.983644 9.993775 ] pdfys
491.458801 329.331299 m
/N19 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(Reasoner Facade)
[12.996002 10.007996 10.007996 9.0 10.007996 10.007996 10.007996 5.993866 4.982218 10.997864 10.007996 
9.0 10.007996 10.007996 10.007996 ] pdfys
n
252.959976 386.391022 m
294.0 385.911011 l
293.940002 384.411011 l
252.959976 384.891022 l
h
288.419983 389.391022 m
295.440002 385.131012 l
288.300018 381.051025 l
287.940002 380.871033 287.519989 380.991028 287.279999 381.351013 c
287.100006 381.711029 287.220001 382.19101 287.579987 382.371033 c
293.579987 385.791016 l
293.579987 384.531006 l
287.639984 388.071014 l
287.279999 388.311005 287.160004 388.731018 287.399994 389.091003 c
287.579987 389.451019 288.059998 389.571014 288.419983 389.391022 c
0.0 0.0 0.0 setrgbcolor
f
n
340.859985 393.111023 m
390.119995 393.951019 l
390.119995 392.451019 l
340.859985 391.611023 l
h
384.419983 397.251007 m
391.619995 393.231018 l
384.539978 388.971008 l
384.179993 388.791016 383.759979 388.851013 383.519989 389.211029 c
383.279999 389.571014 383.399994 390.051025 383.759979 390.291016 c
389.700012 393.891022 l
389.759979 392.571014 l
383.700012 395.991028 l
383.339996 396.171021 383.160004 396.651031 383.399994 397.011017 c
383.579987 397.371033 384.059998 397.491028 384.419983 397.251007 c
f
1.0 w
n
85.5 284.631012 360.720001 232.619965 re
S
10.0 M
1 j
0 J
[4.0 3.0 ] 0.0 d
n
168.839996 286.131012 m
168.839996 517.25 l
369.600006 285.891022 m
369.600006 515.630005 l
S
n
75.479996 289.011017 18.479996 105.240021 re
1.0 1.0 1.0  setrgbcolor
f
0.1098 sg
89.880005 291.290497 m
/N18 [0.0 13.979996 -13.979996 0.0 0.0 0.0] Tf
(Transformations)
[8.531886 4.645449 7.763088 7.763088 6.980212 3.876651 7.763088 4.645449 11.635447 7.763088 3.876651 
3.093775 7.763088 7.763088 6.980212 ] pdfys
n
434.459991 395.031006 m
469.919983 396.531006 l
470.039978 395.031006 l
434.519989 393.531006 l
h
464.160004 399.711029 m
471.47998 395.871033 l
464.519989 391.43103 l
464.220001 391.19101 463.73999 391.311005 463.5 391.611023 c
463.259979 391.971008 463.380005 392.451019 463.73999 392.69101 c
469.559998 396.411011 l
469.619995 395.151031 l
463.5 398.391022 l
463.139954 398.571014 462.959991 398.991028 463.200012 399.411011 c
463.380005 399.771027 463.800018 399.891022 464.160004 399.711029 c
0.0 0.0 0.0 setrgbcolor
f
1.5 w
8.0 M
0 j
1 J
[] 0.0 d
n
49.740009 217.611008 505.139935 375.300003 re
0.30196 0.30196 0.30196  setrgbcolor
S
n
109.5 146.151001 m
109.5 143.091003 111.720001 140.631012 114.540009 140.631012 c
117.360001 140.631012 119.579994 143.091003 119.579994 146.151001 c
119.579994 149.151001 117.360001 151.611008 114.540009 151.611008 c
111.720001 151.611008 109.5 149.151001 109.5 146.151001 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
10.0 M
1 j
n
109.5 146.151001 m
109.5 143.091003 111.720001 140.631012 114.540009 140.631012 c
117.360001 140.631012 119.579994 143.091003 119.579994 146.151001 c
119.579994 149.151001 117.360001 151.611008 114.540009 151.611008 c
111.720001 151.611008 109.5 149.151001 109.5 146.151001 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
113.220001 169.731003 m
113.220001 166.731003 115.439995 164.271011 118.200005 164.271011 c
120.960007 164.271011 123.240005 166.731003 123.240005 169.731003 c
123.240005 172.791016 120.960007 175.251007 118.200005 175.251007 c
115.439995 175.251007 113.220001 172.791016 113.220001 169.731003 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
113.220001 169.731003 m
113.220001 166.731003 115.439995 164.271011 118.200005 164.271011 c
120.960007 164.271011 123.240005 166.731003 123.240005 169.731003 c
123.240005 172.791016 120.960007 175.251007 118.200005 175.251007 c
115.439995 175.251007 113.220001 172.791016 113.220001 169.731003 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
130.080002 148.311005 m
130.080002 145.311005 132.360001 142.911011 135.179993 142.911011 c
137.940002 142.911011 140.220001 145.311005 140.220001 148.311005 c
140.220001 151.311005 137.940002 153.771011 135.179993 153.771011 c
132.360001 153.771011 130.080002 151.311005 130.080002 148.311005 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
130.080002 148.311005 m
130.080002 145.311005 132.360001 142.911011 135.179993 142.911011 c
137.940002 142.911011 140.220001 145.311005 140.220001 148.311005 c
140.220001 151.311005 137.940002 153.771011 135.179993 153.771011 c
132.360001 153.771011 130.080002 151.311005 130.080002 148.311005 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
110.579994 190.011002 m
110.579994 186.951004 112.740005 184.491013 115.379997 184.491013 c
117.960007 184.491013 120.119995 186.951004 120.119995 190.011002 c
120.119995 193.070999 117.960007 195.531006 115.379997 195.531006 c
112.740005 195.531006 110.579994 193.070999 110.579994 190.011002 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
110.579994 190.011002 m
110.579994 186.951004 112.740005 184.491013 115.379997 184.491013 c
117.960007 184.491013 120.119995 186.951004 120.119995 190.011002 c
120.119995 193.070999 117.960007 195.531006 115.379997 195.531006 c
112.740005 195.531006 110.579994 193.070999 110.579994 190.011002 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
137.580002 174.651001 m
137.580002 171.591003 139.860001 169.131012 142.619995 169.131012 c
145.37999 169.131012 147.600006 171.591003 147.600006 174.651001 c
147.600006 177.651001 145.37999 180.111008 142.619995 180.111008 c
139.860001 180.111008 137.580002 177.651001 137.580002 174.651001 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
137.580002 174.651001 m
137.580002 171.591003 139.860001 169.131012 142.619995 169.131012 c
145.37999 169.131012 147.600006 171.591003 147.600006 174.651001 c
147.600006 177.651001 145.37999 180.111008 142.619995 180.111008 c
139.860001 180.111008 137.580002 177.651001 137.580002 174.651001 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
95.220001 167.511002 m
95.220001 164.451004 97.439995 161.991013 100.200005 161.991013 c
102.960007 161.991013 105.240005 164.451004 105.240005 167.511002 c
105.240005 170.570999 102.960007 173.031006 100.200005 173.031006 c
97.439995 173.031006 95.220001 170.570999 95.220001 167.511002 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
95.220001 167.511002 m
95.220001 164.451004 97.439995 161.991013 100.200005 161.991013 c
102.960007 161.991013 105.240005 164.451004 105.240005 167.511002 c
105.240005 170.570999 102.960007 173.031006 100.200005 173.031006 c
97.439995 173.031006 95.220001 170.570999 95.220001 167.511002 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
0 J
n
115.379997 151.011002 m
117.0 164.271011 l
135.479996 153.231003 m
139.73999 170.271011 l
131.220001 151.011002 m
121.079994 165.891006 l
103.079994 172.491013 m
111.600006 187.251007 l
113.220001 169.131012 m
105.240005 168.651001 l
138.600006 178.011002 m
120.119995 188.391006 l
123.240005 170.751007 m
137.580002 173.511002 l
S
n
120.960007 228.231018 m
153.479996 228.231018 l
153.479996 264.591003 l
149.400009 269.751007 l
120.960007 269.751007 l
1.0 1.0 0.8  setrgbcolor
eofill
n
153.479996 264.591003 m
149.580002 265.911011 l
150.179993 266.451019 150.179993 267.831024 149.400009 269.751007 c
0.80392 0.80392 0.64314  setrgbcolor
eofill
0.75 w
1 J
n
120.960007 228.231018 m
153.479996 228.231018 l
153.479996 264.591003 l
149.400009 269.751007 l
120.960007 269.751007 l
h
153.479996 264.591003 m
149.580002 265.911011 l
150.179993 266.451019 150.179993 267.831024 149.400009 269.751007 c
0.0 0.0 0.0  setrgbcolor
S
n
132.0 235.490997 m
132.0 233.69101 132.959991 232.251007 134.160004 232.251007 c
135.360001 232.251007 136.37999 233.69101 136.37999 235.490997 c
136.37999 237.291016 135.360001 238.731018 134.160004 238.731018 c
132.959991 238.731018 132.0 237.291016 132.0 235.490997 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
1.0 w
n
132.0 235.490997 m
132.0 233.69101 132.959991 232.251007 134.160004 232.251007 c
135.360001 232.251007 136.37999 233.69101 136.37999 235.490997 c
136.37999 237.291016 135.360001 238.731018 134.160004 238.731018 c
132.959991 238.731018 132.0 237.291016 132.0 235.490997 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
133.619995 249.651016 m
133.619995 247.850998 134.639999 246.411011 135.839996 246.411011 c
137.100006 246.411011 138.119995 247.850998 138.119995 249.651016 c
138.119995 251.451019 137.100006 252.891006 135.839996 252.891006 c
134.639999 252.891006 133.619995 251.451019 133.619995 249.651016 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
133.619995 249.651016 m
133.619995 247.850998 134.639999 246.411011 135.839996 246.411011 c
137.100006 246.411011 138.119995 247.850998 138.119995 249.651016 c
138.119995 251.451019 137.100006 252.891006 135.839996 252.891006 c
134.639999 252.891006 133.619995 251.451019 133.619995 249.651016 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
141.119995 236.811005 m
141.119995 235.011017 142.139999 233.511017 143.339996 233.511017 c
144.600006 233.511017 145.619995 235.011017 145.619995 236.811005 c
145.619995 238.671005 144.600006 240.111008 143.339996 240.111008 c
142.139999 240.111008 141.119995 238.671005 141.119995 236.811005 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
141.119995 236.811005 m
141.119995 235.011017 142.139999 233.511017 143.339996 233.511017 c
144.600006 233.511017 145.619995 235.011017 145.619995 236.811005 c
145.619995 238.671005 144.600006 240.111008 143.339996 240.111008 c
142.139999 240.111008 141.119995 238.671005 141.119995 236.811005 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
132.360001 261.771027 m
132.360001 259.971008 133.319992 258.531006 134.459991 258.531006 c
135.660004 258.531006 136.619995 259.971008 136.619995 261.771027 c
136.619995 263.571014 135.660004 265.011017 134.459991 265.011017 c
133.319992 265.011017 132.360001 263.571014 132.360001 261.771027 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
132.360001 261.771027 m
132.360001 259.971008 133.319992 258.531006 134.459991 258.531006 c
135.660004 258.531006 136.619995 259.971008 136.619995 261.771027 c
136.619995 263.571014 135.660004 265.011017 134.459991 265.011017 c
133.319992 265.011017 132.360001 263.571014 132.360001 261.771027 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
144.360001 252.531006 m
144.360001 250.731018 145.37999 249.231018 146.580002 249.231018 c
147.839996 249.231018 148.860001 250.731018 148.860001 252.531006 c
148.860001 254.331009 147.839996 255.770996 146.580002 255.770996 c
145.37999 255.770996 144.360001 254.331009 144.360001 252.531006 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
144.360001 252.531006 m
144.360001 250.731018 145.37999 249.231018 146.580002 249.231018 c
147.839996 249.231018 148.860001 250.731018 148.860001 252.531006 c
148.860001 254.331009 147.839996 255.770996 146.580002 255.770996 c
145.37999 255.770996 144.360001 254.331009 144.360001 252.531006 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
125.579994 248.331009 m
125.579994 246.471008 126.600006 245.031006 127.860001 245.031006 c
129.119995 245.031006 130.080002 246.471008 130.080002 248.331009 c
130.080002 250.130997 129.119995 251.630997 127.860001 251.630997 c
126.600006 251.630997 125.579994 250.130997 125.579994 248.331009 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
125.579994 248.331009 m
125.579994 246.471008 126.600006 245.031006 127.860001 245.031006 c
129.119995 245.031006 130.080002 246.471008 130.080002 248.331009 c
130.080002 250.130997 129.119995 251.630997 127.860001 251.630997 c
126.600006 251.630997 125.579994 250.130997 125.579994 248.331009 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
0 J
n
134.459991 238.490997 m
135.23999 246.411011 l
143.459991 239.751007 m
145.37999 249.891006 l
141.600006 238.490997 m
137.100006 247.371017 l
129.119995 251.270996 m
132.839996 260.151001 l
133.619995 249.231018 m
130.080002 248.990997 l
144.839996 254.511017 m
136.619995 260.751007 l
138.119995 250.251007 m
144.360001 251.871017 l
S
n
190.73999 229.130997 m
223.199997 229.130997 l
223.199997 265.431 l
219.179977 270.651001 l
190.73999 270.651001 l
1.0 1.0 0.8  setrgbcolor
eofill
n
223.199997 265.431 m
219.300003 266.811005 l
219.900009 267.291016 219.900009 268.671021 219.179977 270.651001 c
0.80392 0.80392 0.64314  setrgbcolor
eofill
0.75 w
1 J
n
190.73999 229.130997 m
223.199997 229.130997 l
223.199997 265.431 l
219.179977 270.651001 l
190.73999 270.651001 l
h
223.199997 265.431 m
219.300003 266.811005 l
219.900009 267.291016 219.900009 268.671021 219.179977 270.651001 c
0.0 0.0 0.0  setrgbcolor
S
n
201.720001 236.391006 m
201.720001 234.591019 202.679977 233.151016 203.940002 233.151016 c
205.139999 233.151016 206.100006 234.591019 206.100006 236.391006 c
206.100006 238.19101 205.139999 239.630997 203.940002 239.630997 c
202.679977 239.630997 201.720001 238.19101 201.720001 236.391006 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
1.0 w
n
201.720001 236.391006 m
201.720001 234.591019 202.679977 233.151016 203.940002 233.151016 c
205.139999 233.151016 206.100006 234.591019 206.100006 236.391006 c
206.100006 238.19101 205.139999 239.630997 203.940002 239.630997 c
202.679977 239.630997 201.720001 238.19101 201.720001 236.391006 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
203.339996 250.490997 m
203.339996 248.69101 204.360001 247.251007 205.619995 247.251007 c
206.819992 247.251007 207.839996 248.69101 207.839996 250.490997 c
207.839996 252.291016 206.819992 253.731018 205.619995 253.731018 c
204.360001 253.731018 203.339996 252.291016 203.339996 250.490997 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
203.339996 250.490997 m
203.339996 248.69101 204.360001 247.251007 205.619995 247.251007 c
206.819992 247.251007 207.839996 248.69101 207.839996 250.490997 c
207.839996 252.291016 206.819992 253.731018 205.619995 253.731018 c
204.360001 253.731018 203.339996 252.291016 203.339996 250.490997 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
210.839996 237.710999 m
210.839996 235.850998 211.860001 234.411011 213.119995 234.411011 c
214.319992 234.411011 215.339996 235.850998 215.339996 237.710999 c
215.339996 239.511017 214.319992 241.011017 213.119995 241.011017 c
211.860001 241.011017 210.839996 239.511017 210.839996 237.710999 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
210.839996 237.710999 m
210.839996 235.850998 211.860001 234.411011 213.119995 234.411011 c
214.319992 234.411011 215.339996 235.850998 215.339996 237.710999 c
215.339996 239.511017 214.319992 241.011017 213.119995 241.011017 c
211.860001 241.011017 210.839996 239.511017 210.839996 237.710999 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
202.080002 262.611023 m
202.080002 260.811005 203.039978 259.371002 204.23999 259.371002 c
205.37999 259.371002 206.339996 260.811005 206.339996 262.611023 c
206.339996 264.411011 205.37999 265.911011 204.23999 265.911011 c
203.039978 265.911011 202.080002 264.411011 202.080002 262.611023 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
202.080002 262.611023 m
202.080002 260.811005 203.039978 259.371002 204.23999 259.371002 c
205.37999 259.371002 206.339996 260.811005 206.339996 262.611023 c
206.339996 264.411011 205.37999 265.911011 204.23999 265.911011 c
203.039978 265.911011 202.080002 264.411011 202.080002 262.611023 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
214.080002 253.371017 m
214.080002 251.570999 215.100006 250.130997 216.360001 250.130997 c
217.619995 250.130997 218.580002 251.570999 218.580002 253.371017 c
218.580002 255.171005 217.619995 256.611023 216.360001 256.611023 c
215.100006 256.611023 214.080002 255.171005 214.080002 253.371017 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
214.080002 253.371017 m
214.080002 251.570999 215.100006 250.130997 216.360001 250.130997 c
217.619995 250.130997 218.580002 251.570999 218.580002 253.371017 c
218.580002 255.171005 217.619995 256.611023 216.360001 256.611023 c
215.100006 256.611023 214.080002 255.171005 214.080002 253.371017 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
n
195.360001 249.171005 m
195.360001 247.371017 196.37999 245.871017 197.580002 245.871017 c
198.839996 245.871017 199.860001 247.371017 199.860001 249.171005 c
199.860001 251.031006 198.839996 252.531006 197.580002 252.531006 c
196.37999 252.531006 195.360001 251.031006 195.360001 249.171005 c
0.73334 0.87843 0.8902  setrgbcolor
eofill
n
195.360001 249.171005 m
195.360001 247.371017 196.37999 245.871017 197.580002 245.871017 c
198.839996 245.871017 199.860001 247.371017 199.860001 249.171005 c
199.860001 251.031006 198.839996 252.531006 197.580002 252.531006 c
196.37999 252.531006 195.360001 251.031006 195.360001 249.171005 c
h
0.1098 0.1098 0.1098  setrgbcolor
S
0 J
n
204.23999 239.391006 m
204.959991 247.251007 l
213.23999 240.651016 m
215.100006 250.731018 l
211.37999 239.391006 m
206.87999 248.271011 l
198.839996 252.111008 m
202.619995 260.990997 l
203.339996 250.130997 m
199.860001 249.891006 l
214.619995 255.411011 m
206.339996 261.651001 l
207.839996 251.151016 m
214.080002 252.770996 l
S
0.0 sg
160.73999 248.510498 m
/N20 18.0 Tf
(. . .)
[4.982218 5.012638 4.982218 5.012638 4.982218 ] pdfxs
n
71.460007 402.231018 36.0 -1.5 re
101.879997 405.651031 m
108.960007 401.511017 l
101.879997 397.371033 l
101.519997 397.131012 101.040009 397.251007 100.860001 397.611023 c
100.619995 397.971008 100.740005 398.451019 101.100006 398.631012 c
107.100006 402.171021 l
107.100006 400.851013 l
101.100006 404.391022 l
100.740005 404.571014 100.619995 405.051025 100.860001 405.411011 c
101.040009 405.771027 101.519997 405.891022 101.879997 405.651031 c
0.0 0.0 0.0 setrgbcolor
f
1.5 w
n
70.740005 248.990997 m
70.740005 401.871033 l
70.080002 248.751007 m
117.479996 248.751007 l
S
n
151.73999 193.791016 m
153.660004 193.791016 l
153.660004 135.771011 l
157.440002 135.771011 l
157.440002 193.791016 l
159.360001 193.791016 l
155.519989 213.111008 l
0.88628 0.87451 0.86275  setrgbcolor
eofill
0.75 w
1 J
n
151.73999 193.791016 m
153.660004 193.791016 l
153.660004 135.771011 l
157.440002 135.771011 l
157.440002 193.791016 l
159.360001 193.791016 l
155.519989 213.111008 l
h
0.0 0.0 0.0  setrgbcolor
S
n
40.079998 223.611008 18.539989 113.759995 re
1.0 1.0 1.0  setrgbcolor
f
0.1098 sg
54.479996 225.890488 m
/N18 [0.0 13.979996 -13.979996 0.0 0.0 0.0] Tf
(W) show
54.479996 239.153381 m
(S) show
54.479996 248.452927 m
(ML Reasoner)
[11.636845 7.764486 3.901675 10.085171 7.764486 7.764486 6.98161 7.764486 7.764486 7.764486 4.646846 
] pdfys
n
134.819992 624.651001 m
135.360001 626.21106 135.660004 627.771057 136.020004 629.331055 c
136.319992 630.651001 136.440002 631.911011 136.73999 633.109985 c
136.73999 636.531006 136.440002 637.43103 136.319992 638.331055 c
136.199997 639.291016 135.900009 640.309998 135.660004 641.151001 c
135.360001 641.98999 135.119995 642.771057 134.699997 643.671021 c
134.459991 644.45105 134.160004 645.351013 133.73999 646.25 c
133.440002 647.21106 133.080002 648.051025 132.779999 649.070007 c
132.539993 650.091003 132.119995 651.109985 131.87999 652.369995 c
131.699997 653.570007 131.339996 654.71106 131.160004 656.151001 c
131.160004 657.591003 131.039993 659.151001 131.039993 660.891052 c
108.0 660.891052 l
108.0 624.651001 l
1.0 1.0 0.60001 setrgbcolor
eofill
n
134.819992 624.651001 m
135.360001 626.21106 135.660004 627.771057 136.020004 629.331055 c
136.319992 630.651001 136.440002 631.911011 136.73999 633.109985 c
136.73999 636.531006 136.440002 637.43103 136.319992 638.331055 c
136.199997 639.291016 135.900009 640.309998 135.660004 641.151001 c
135.360001 641.98999 135.119995 642.771057 134.699997 643.671021 c
134.459991 644.45105 134.160004 645.351013 133.73999 646.25 c
133.440002 647.21106 133.080002 648.051025 132.779999 649.070007 c
132.539993 650.091003 132.119995 651.109985 131.87999 652.369995 c
131.699997 653.570007 131.339996 654.71106 131.160004 656.151001 c
131.160004 657.591003 131.039993 659.151001 131.039993 660.891052 c
108.0 660.891052 l
108.0 624.651001 l
h
0.0 0.0 0.0  setrgbcolor
S
n
111.839996 642.051025 m
110.700005 640.671021 110.879997 638.630005 112.200005 637.48999 c
113.579994 636.411011 115.619995 636.591003 116.759987 637.971008 c
117.900009 639.351013 117.719994 641.391052 116.339996 642.531006 c
115.019997 643.609985 112.979996 643.43103 111.839996 642.051025 c
1.0 0.63528 0.1451  setrgbcolor
eofill
n
111.839996 642.051025 m
110.700005 640.671021 110.879997 638.630005 112.200005 637.48999 c
113.579994 636.411011 115.619995 636.591003 116.759987 637.971008 c
117.900009 639.351013 117.719994 641.391052 116.339996 642.531006 c
115.019997 643.609985 112.979996 643.43103 111.839996 642.051025 c
h
0.0 0.0 0.0  setrgbcolor
S
n
122.460007 657.171021 m
121.200005 655.671021 121.320007 653.570007 122.700005 652.43103 c
124.019997 651.291016 126.119995 651.591003 127.379997 653.091003 c
128.580002 654.591003 128.520004 656.690002 127.139999 657.831055 c
125.820007 658.971008 123.719994 658.671021 122.460007 657.171021 c
1.0 0.63528 0.1451  setrgbcolor
eofill
n
122.460007 657.171021 m
121.200005 655.671021 121.320007 653.570007 122.700005 652.43103 c
124.019997 651.291016 126.119995 651.591003 127.379997 653.091003 c
128.580002 654.591003 128.520004 656.690002 127.139999 657.831055 c
125.820007 658.971008 123.719994 658.671021 122.460007 657.171021 c
h
116.100006 642.831055 m
122.939995 652.43103 l
0.0 0.0 0.0  setrgbcolor
S
n
126.719994 646.070007 m
125.579994 644.690002 125.759987 642.651001 127.079994 641.51001 c
128.459991 640.369995 130.440002 640.609985 131.639999 641.98999 c
132.779999 643.369995 132.600006 645.411011 131.220001 646.48999 c
129.900009 647.630005 127.860001 647.45105 126.719994 646.070007 c
1.0 0.63528 0.1451  setrgbcolor
eofill
n
126.719994 646.070007 m
125.579994 644.690002 125.759987 642.651001 127.079994 641.51001 c
128.459991 640.369995 130.440002 640.609985 131.639999 641.98999 c
132.779999 643.369995 132.600006 645.411011 131.220001 646.48999 c
129.900009 647.630005 127.860001 647.45105 126.719994 646.070007 c
h
117.719994 640.130005 m
126.360001 642.109985 l
128.699997 647.570007 m
126.779999 652.309998 l
0.0 0.0 0.0  setrgbcolor
S
0.0 0.0 0.60393  setrgbcolor
129.360001 625.490479 m
/N20 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(?) show
n
142.619995 626.45105 m
144.479996 626.45105 l
144.479996 717.771057 l
148.319992 717.771057 l
148.319992 626.45105 l
150.23999 626.45105 l
146.400009 596.031006 l
0.88628 0.87451 0.86275  setrgbcolor
eofill
n
142.619995 626.45105 m
144.479996 626.45105 l
144.479996 717.771057 l
148.319992 717.771057 l
148.319992 626.45105 l
150.23999 626.45105 l
146.400009 596.031006 l
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
162.959991 618.770508 m
/N19 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(DL reasoni)
[8.651881 6.659877 3.362278 3.983791 6.659877 6.659877 5.98788 6.659877 6.659877 2.651881 ] pdfys
162.959991 676.633667 m
(ng task)
[6.659877 6.659877 3.362278 3.323879 6.659877 5.98788 5.98788 ] pdfys
n
125.339996 556.72998 m
124.200005 555.351013 124.379997 553.309998 125.759987 552.109985 c
127.139999 550.971008 129.179993 551.151001 130.37999 552.531006 c
131.520004 553.911011 131.339996 556.01001 129.959991 557.151001 c
128.580002 558.291016 126.479996 558.109985 125.339996 556.72998 c
1.0 0.63528 0.1451 setrgbcolor
eofill
n
125.339996 556.72998 m
124.200005 555.351013 124.379997 553.309998 125.759987 552.109985 c
127.139999 550.971008 129.179993 551.151001 130.37999 552.531006 c
131.520004 553.911011 131.339996 556.01001 129.959991 557.151001 c
128.580002 558.291016 126.479996 558.109985 125.339996 556.72998 c
h
0.0 0.0 0.0  setrgbcolor
S
n
135.720001 571.72998 m
134.520004 570.291016 134.639999 568.130005 136.080002 566.929993 c
137.459991 565.791016 139.619995 566.031006 140.819992 567.531006 c
142.080002 569.031006 141.959991 571.130005 140.520004 572.331055 c
139.139999 573.471008 136.979996 573.22998 135.720001 571.72998 c
1.0 0.63528 0.1451  setrgbcolor
eofill
n
135.720001 571.72998 m
134.520004 570.291016 134.639999 568.130005 136.080002 566.929993 c
137.459991 565.791016 139.619995 566.031006 140.819992 567.531006 c
142.080002 569.031006 141.959991 571.130005 140.520004 572.331055 c
139.139999 573.471008 136.979996 573.22998 135.720001 571.72998 c
h
129.479996 557.331055 m
136.319992 566.929993 l
0.0 0.0 0.0  setrgbcolor
S
n
140.339996 560.391052 m
139.199997 559.01001 139.440002 556.911011 140.819992 555.770996 c
142.259979 554.570007 144.300003 554.75 145.440002 556.130005 c
146.639999 557.51001 146.400009 559.609985 145.020004 560.75 c
143.580002 561.95105 141.539993 561.771057 140.339996 560.391052 c
1.0 0.63528 0.1451  setrgbcolor
eofill
n
140.339996 560.391052 m
139.199997 559.01001 139.440002 556.911011 140.819992 555.770996 c
142.259979 554.570007 144.300003 554.75 145.440002 556.130005 c
146.639999 557.51001 146.400009 559.609985 145.020004 560.75 c
143.580002 561.95105 141.539993 561.771057 140.339996 560.391052 c
h
131.279999 554.630005 m
140.039993 556.429993 l
142.319992 561.95105 m
140.279999 566.690002 l
0.0 0.0 0.0  setrgbcolor
S
0.0 0.0 0.60393  setrgbcolor
142.319992 539.870483 m
/N20 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(?) show
n
205.619995 310.251007 m
205.619995 307.011017 208.199997 304.371002 211.440002 304.371002 c
246.600006 304.371002 l
249.839996 304.371002 252.479996 307.011017 252.479996 310.251007 c
252.479996 479.871033 l
252.479996 483.111023 249.839996 485.751038 246.600006 485.751038 c
211.440002 485.751038 l
208.199997 485.751038 205.619995 483.111023 205.619995 479.871033 c
0.91765 0.91765 0.91765  setrgbcolor
eofill
n
205.619995 310.251007 m
205.619995 307.011017 208.199997 304.371002 211.440002 304.371002 c
246.600006 304.371002 l
249.839996 304.371002 252.479996 307.011017 252.479996 310.251007 c
252.479996 479.871033 l
252.479996 483.111023 249.839996 485.751038 246.600006 485.751038 c
211.440002 485.751038 l
208.199997 485.751038 205.619995 483.111023 205.619995 479.871033 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
235.139999 343.130493 m
/N19 [0.0 16.020004 -16.020004 0.0 0.0 0.0] Tf
(Axiomatization)
[10.66784 7.99238 3.538821 8.889497 13.326922 8.889497 4.435937 3.538821 7.99238 8.889497 4.435937 
3.538821 8.889497 8.889497 ] pdfys
n
196.37999 313.19101 m
196.37999 311.931 197.400009 310.911011 198.659988 310.911011 c
212.339996 310.911011 l
213.600006 310.911011 214.619995 311.931 214.619995 313.19101 c
214.619995 349.971008 l
214.619995 351.231018 213.600006 352.251007 212.339996 352.251007 c
198.659988 352.251007 l
197.400009 352.251007 196.37999 351.231018 196.37999 349.971008 c
0.91765 0.91765 0.91765 setrgbcolor
eofill
n
196.37999 313.19101 m
196.37999 311.931 197.400009 310.911011 198.659988 310.911011 c
212.339996 310.911011 l
213.600006 310.911011 214.619995 311.931 214.619995 313.19101 c
214.619995 349.971008 l
214.619995 351.231018 213.600006 352.251007 212.339996 352.251007 c
198.659988 352.251007 l
197.400009 352.251007 196.37999 351.231018 196.37999 349.971008 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
206.580002 313.250488 m
%ADOBeginSubsetFont: AJAMDD+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.
/AJAMDD+TimesNewRomanPS-ItalicMT 1 GetGlyphDirectory
306 <001C60D8A8C9B80456BEED20726A3416E54DB529AC0E638F8427550D8DF
607A3BE64E15451C2466CDB5035469FF1A0B7AE4386C85E793D3334BD34FCEEC
2024F79924C03AF8C42D1DF34E60FB9C2F8ED21FB7E82BED8D87617398372CF1
2E9BDAA4BF4A825F1FF7A1887A4E8673428ABDB2656C03188> |
!
end
end end
%ADOEndSubsetFont
/N26 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\0012) show
211.559998 319.670502 m
%ADOBeginSubsetFont: AJAMED+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AJAMED+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 104 68 <00020030ffe803c103890026003501d940180920082135018401842a9501
981b932a982eac33b62b0b30b8ffde40170c143fa416a43102362a4a2002
0c2219350c0e2228340eb8ffde40392228343f174f175f17033d30010c40
2228340c401935b916d926e826030102040400161617252626150c0d1627
2f322625160431152c331d26b80395401300272422220007280004041f15
26141515262fb8ffdcb31e123f2fb8032e400d1a1a100b1536282615100d
8a0cbd014300040203001500000203b726ad15401e123f15b8ffc0400e23
25340015101530150390150115b8ff80b2533515bd0295002c0381001200
1dffc0b32e34341db8ffc040172627341d8053359f1def1d021d32361517
15360a32c3182b2b103c2b4e10f45d2b2b2b435c58b9001dffc0b350283f
1db8ffc0b332193f1db8ffc0b318283f1db8ffc0b315233f1db8ffc0b30f
193f1db8ffc0b31e123f1db8ffc0b313193f1db8ffc0b117392b2b2b2b2b
2b2b2b594de9f42b5d712b2bf4ed10fdf6ed2b103c2b10c0003f3c10ed2b
870e2e2b0e7d10c42b183f003c10ed10e401113911123911393911390011
12390110c9870e7d10c4083c870e10c4c43130015d002b2b5d72012b2b2b
5d004bb02a534bb03a515a58bf0035ffd40034ffd40028ffe80027ffe838
38383859005d2b015d010307061514171633323736371706062322263534
373706070623222635341237363332161737072207060215141633323736
35342603c1c316030a080c0d1527412245923e2b2b1615836e4f4c496abf
9373663d511524c54048669f442c6d80ab420389fd5a5b0d09100c09101d
5b18686d2b2931504bab4431796a9f01616a54404a721c3c55feb287444f
a1d6e1554c00>AJAMED+TimesNewRomanPS-ItalicMT AddT42Char 
1 3194 91 <0001ffbcffe8038403890046010840630d40120b3f0700072a003d013e14
001601240023014a1b56018919a301a919aa2aa83daf3f10484010351017
63217321c919cb210509230c2a52230304191a1a022a2a2b3e403e3c4028
2122021a1a1f2840142828403e2a1904041135428a46c60011b80395401f
153a0a0a000735c639272e2e260b042a193e218a9f22cf220222c90d02e4
45ba014700400124b21a8228b8019f401d19e43e403b4b343e401d353e3e
47200d400d8f0daf0d040d1a48321947b80114b1de182b4e10e410e65d12
392f2b2b4dedf4edf4e6ed10f45ded11123939003f3c10fde43f3c10fde4
10f4ed11121739870e2e2b0e7d10c40110c90708103c083c870e10c4c431
30005d5d012b5d2b01161716173736363736333216151407062322272623
220706071316163332373637170607062322272603020706232227263534
363332171633323736363726272626232207350167311912295823642618
1d2b330f1c2415182f1018213e5652131a0d151c3727233f613726382115
429c5e3d392821182c2020241a0e0c132fa2193e05174a48171e03893434
2499843057100a2e21260e1909101c3495fea84f1f172e4a12764e2c3f27
0129fef14e321d1625212c20171026fc38f30e4136022400>AJAMED+TimesNewRomanPS-ItalicMT AddT42Char 
1 740 76 <00020058ffe8022e0516000b002901244027176e3a3516763a35122b4012
352b40191b34590c0119230116172945215a282830294d0c007006b8039c
401a0c07280c0f0c290f1f1e21141e1e211b0b1e2a28211e10178a16b801
43b40f0970030cb80147b203600fb80123b7296c121e401b351eb8ffc0b3
3a3b341eb8ffc0b32a34341eb8ffc040092324341e401f20341eb8ffc040
13131634301e8f1e021e192a1e171e2a0a7786182b2b103c2b4e10f45d2b
2b2b2b2b2b435c58400b1e401c113f1e400d113f1eb8ffc0b3160d3f1eb8
ffc0b117392b2b2b2b594de4fde4e610ed10f6ed2b103c2b10c0003f870e
2e2b087d10c42b183f00f6ed10f5ed2bfc01f510c9313001715d2b2b435c
58b517400c143f0db8ffdeb61339172213390db8ffdeb50f3917400f392b
2b2b2b2b59012b2b01321615140623222635343613030615141633323736
371706070623222635343713363534262322073501ca2a3a3b29293b3a37
c614130d0f15393a23445c443e29341982201f1b164505163a2a293b3b29
2a3afe73fd43470e1014102d53176847353125255601c06e1c161c0b2700
>AJAMED+TimesNewRomanPS-ItalicMT AddT42Char 
1 2550 82 <0002003cffe803b30389000d001900ad404108020903060a03a413ae18a0
1bb212b216be18065b18591985138c1895139d18a5120736133a19471349
19570856125413070a0c0c11240b070305051724040b14b8038140120780
4b5334078043358f079f070207191a0eb8038140270040170e3f00404b53
34004043350040323500401e350000200030004000a0000500c31b2bc318
2b4e10f65d2b2b2b2b2b4de94e10f45d2b2b4de9003fed3c103c3fed3c10
3c3130015d5d5d005d011402042322263534122433321607342623220215
141633321203b39ffee48689ada9011b8484aba65b4893f760498df70250
96fedaacaf8b930128acae465d63fe5bd05f6701a300>AJAMED+TimesNewRomanPS-ItalicMT AddT42Char 
1 1160 80 <00010023ffe8056e038900530245408419010112382d0159095b0c5f0d57
145c385d3a5d3b5e3c5552681369166a2c790c79167a2c783c89038b2c8b
3c89439d039b0e9b369d43a701ab0da137a938af39af3aaf3bae3caa44a3
45b538b63ab648256b3668376a4403520059445252038936884498450365
397a36753a7b447648a339062801253927472f556f5405212253fe4bb801
1c4054285230534d000d3a070149410d0a3a01004b343111114131070753
c600071419191f2930142929300a3a3a1f3b3e143b3b3e00480053481f49
4b1449494b260b4948483b3b3a0a29542830293e3b4b4910228a21b80143
b319142530b80124400c192529400e356029df290229b80234b66f3a01af
3a013ab8020340153b4023353b401b1c346f3b013b500a010a253ead3bba
01c000480203b44bad52c949b8ffc0b2173949b8ffc0b2233549b8ffc0b2
1f3549b8ffc0b31b1c3449b8ffc0b2193549b8ffc0b32a2c3449b8ffc040
172f34346f49ef490249195429173b17491729540a3286182b2b103c2b2b
2b4e10f45d2b2b2b2b2b2b2b4de4e4edf4f4ed5d10712b2bed5d71f45d2b
edf4ed10f6ed2b103c103c103c2b10c0003f3c103c103c3f87052e2b087d
10c487052e182b0e7d10c4870e2e182b7d10c400183fe43c10ed3c10ed01
1112391112390011123911123910f5ed2bfc01f510c93130015d5d5d5d5d
5d0171435c5840110d180c393c180c3900220c394a180c3936b8ffc0b20f
390fb8ffdeb20f3904b8ffdeb20f3900b8ffc0b20f3953b8ffc0b20f3917
b8ffdeb613143e222213392b2b2b2b2b2b2b2b2b2b2b59005d0103363736
373633321615140707123736333216151407030615141716333237363717
0e0223222635343713363736353427262322070607060723133635342623
22070602070603231337363534262322072701bc82573d5f5a353a324217
47a392514f2e3b126e2409060a0a19393221197f5a26232f295b1f02030b
0c0f2a2f8a784f4597ab1c161021253cbd34195e94b91807281f0d3b0903
89fe3d9f507c38204032314ffe01317b443f423a41fe7b7f0e0e0a07132c
4815288c323023309101416f0c1312190e0e2b7fe597ec025d62211b1a18
27ff007537fed6028854130916230c25>AJAMED+TimesNewRomanPS-ItalicMT AddT42Char 
1 0 0 <0002010000000500050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121010004
00fc2003c0fc400500fb002004c0>AJAMED+TimesNewRomanPS-ItalicMT AddT42Char 
AJAMED+TimesNewRomanPS-ItalicMT /CharStrings get begin
/a 68 def
/x 91 def
/i 76 def
/o 82 def
/m 80 def
end
AJAMED+TimesNewRomanPS-ItalicMT /Encoding get
dup 97 /a put
dup 120 /x put
dup 105 /i put
dup 111 /o put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N27 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(axiom)
[6.02532 5.353323 3.361319 6.02532 8.689322 ] pdfys
n
195.360001 420.831024 m
195.360001 419.631012 196.319992 418.611023 197.519989 418.611023 c
210.659988 418.611023 l
211.860001 418.611023 212.87999 419.631012 212.87999 420.831024 c
212.87999 479.330994 l
212.87999 480.531036 211.860001 481.491028 210.659988 481.491028 c
197.519989 481.491028 l
196.319992 481.491028 195.360001 480.531036 195.360001 479.330994 c
0.91765 0.91765 0.91765 setrgbcolor
eofill
n
195.360001 420.831024 m
195.360001 419.631012 196.319992 418.611023 197.519989 418.611023 c
210.659988 418.611023 l
211.860001 418.611023 212.87999 419.631012 212.87999 420.831024 c
212.87999 479.330994 l
212.87999 480.531036 211.860001 481.491028 210.659988 481.491028 c
197.519989 481.491028 l
196.319992 481.491028 195.360001 480.531036 195.360001 479.330994 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
209.87999 420.890503 m
/N18 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(O) show
209.87999 434.870483 m
%ADOBeginSubsetFont: AJAMEE+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.
/AJAMEE+SymbolMT 1 GetGlyphDirectory
3 <001C60D8A8C9B8707C25> |
!
end
end end
%ADOEndSubsetFont
/N30 [0.0 18.0 -18.0 6.156296 0.0 0.0] Tf
(\000\003) show
209.87999 439.370483 m
%ADOBeginSubsetFont: AJAMGF+ArialUnicodeMS-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.
/AJAMGF+ArialUnicodeMS 1 GetGlyphDirectory
3470 <001C60D8A8C9B63C43A7574AA6D821681B9C139D7761A5D01A573C742F
CCC4141A6AB02CAE6D072958C3425BB6C01A48863EC96EFA01D754E6B2319B70
DF1D594AF660> |
!
end
end end
%ADOEndSubsetFont
/N31 [0.0 19.979996 -19.979996 0.0 0.0 0.0] Tf
(\r\216) show
209.87999 453.590454 m
/N29 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(2) show
204.900009 462.650482 m
%ADOBeginSubsetFont: AJAMNG+MonotypeCorsiva AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AJAMNG+MonotypeCorsiva gcheck setglobal} if
1 662 47 <00010062ffda04b604b4003c008c402a0b201b202b203b2004fb20018622
9622a622031e1a1e1e5a05071405050705071a030a3b015d00b93b10b802
28b415660a0231b801ff401c3722252766377b205d3b0a0105071a1e2006
2e000d0d342a8d2e9234b8010ab31f0001002f5dfdfdf411392f11121739
003fedf4fd323210ed3feded10f6ed1112173987052e2b7d10c4002e3130
005d5d7117373e023712373e013332161514062322272e012322070e0107
060702070607363332161716333236353427263534363332161514062322
27242322620c69473931413551f17b4f6c21171e2b3035191d1c2759301f
304b271c288f55355a70612726350e0d201a1e2a907b3d60febc64931136
143485d0011379b6b0502b1822272a1a10167b7952bcfed562462e200d1a
172f1e132220131b1f352e577e091d00>AJAMNG+MonotypeCorsiva AddT42Char 
1 78 40 <00010087ffdd055304ab00560154404a061d061e02971db71dc61dc71ed7
1dd51ee61de61ef61df61e0ab91fc91fd91f037b507b51023b08191b0728
07283e7807783e041b07075a3e3b143e3e3b0706011b1d38213735310001
b8023a401006063e0c4a4a101d3e5d52022f100110b801c04013190c9919
8f0808521b5d3521663155b952022bb801ff400b311d1f2166317b35385d
37b801be40301b5d350a0708191b3e0510473837424e0303000112120f10
018300002e24478642248d28922e42764e10830f7d0c830db801ccb20183
00b801cab4552f3b013bbd01c6004e005501ca002e010bb59f4eaf4e024e
2f5dfde610e45d10f6edf4edf4ed10ed10fde410e41112392fed1112392f
1112392f1112393911121739003fedf6ed10f4fd323210ed3fe610ed10ed
12392fede410e65d3fed1112392f1112392ff63c11123911391239111239
87052e2b0e7d10c4015d8705c4c4002e3130015d005d5d71012336353426
2307033332363733060723363534272627262b0102073633321716333236
3534272635343633321615140623222726232207373e0137361213220e01
1514161716151406232227263534373629013237060520350843db926fcf
622d0a39201933050e07131b39cd59605d4878ae5c212c360d08251a1f29
957a4062d77194c610762a0e30994f78d678111e13251b2717229f9f0130
0157b2552803bf331e281901fe461d3a79912f1a0b10080305feacc11d26
152c1c102419161724302855800b181837211f1e5f023c013e72b7652b40
3a23161622273962d2a7a717a600>AJAMNG+MonotypeCorsiva AddT42Char 
1 0 0 <00020100000005000500000300070025b504dc0007dc01b8016eb7000a04
db0005db03b9016000002ffee510e5003ffee510e5313021112111252111
2101000400fc2003c0fc400500fb002004c0>AJAMNG+MonotypeCorsiva AddT42Char 
AJAMNG+MonotypeCorsiva /CharStrings get begin
/L 47 def
/E 40 def
end
AJAMNG+MonotypeCorsiva /Encoding get
dup 76 /L put
dup 69 /E put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N32 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(LE)
[7.018822 7.498741 ] pdfys
n
294.959991 313.911011 m
294.959991 310.851013 297.47998 308.391022 300.539978 308.391022 c
333.779999 308.391022 l
336.839996 308.391022 339.359985 310.851013 339.359985 313.911011 c
339.359985 484.19101 l
339.359985 487.251038 336.839996 489.771027 333.779999 489.771027 c
300.539978 489.771027 l
297.47998 489.771027 294.959991 487.251038 294.959991 484.19101 c
0.91765 0.91765 0.91765 setrgbcolor
eofill
n
294.959991 313.911011 m
294.959991 310.851013 297.47998 308.391022 300.539978 308.391022 c
333.779999 308.391022 l
336.839996 308.391022 339.359985 310.851013 339.359985 313.911011 c
339.359985 484.19101 l
339.359985 487.251038 336.839996 489.771027 333.779999 489.771027 c
300.539978 489.771027 l
297.47998 489.771027 294.959991 487.251038 294.959991 484.19101 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
323.279999 350.270477 m
/N19 [0.0 16.020004 -16.020004 0.0 0.0 0.0] Tf
(Normalization)
[11.547061 8.887734 5.315158 13.32516 8.887734 3.537059 3.537059 7.990618 8.887734 4.434175 3.537059 
8.887734 8.887734 ] pdfys
n
285.839996 317.151001 m
285.839996 315.891022 286.859985 314.871002 288.119995 314.871002 c
301.73999 314.871002 l
302.940002 314.871002 303.959991 315.891022 303.959991 317.151001 c
303.959991 353.991028 l
303.959991 355.251007 302.940002 356.271027 301.73999 356.271027 c
288.119995 356.271027 l
286.859985 356.271027 285.839996 355.251007 285.839996 353.991028 c
0.91765 0.91765 0.91765 setrgbcolor
eofill
n
285.839996 317.151001 m
285.839996 315.891022 286.859985 314.871002 288.119995 314.871002 c
301.73999 314.871002 l
302.940002 314.871002 303.959991 315.891022 303.959991 317.151001 c
303.959991 353.991028 l
303.959991 355.251007 302.940002 356.271027 301.73999 356.271027 c
288.119995 356.271027 l
286.859985 356.271027 285.839996 355.251007 285.839996 353.991028 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
295.97998 317.150482 m
/N26 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(\0012) show
300.959991 323.570496 m
%ADOBeginSubsetFont: AJAMED+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AJAMED+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1986 81 <00010027ffe803ad03890036018f400901180c392d180c390ab8ffde409c
13143e14221339082f16001b021b2f0451075209521e512079017b2d891e
a627a428ba02ba260b5c015c28bf01035a095a1e5a2003690669096a1e79
09791e7b2606562a51356c260352000114221935132219350101022a2b2b
00131436452d5a283530364d0001232c01002d9f2301233104040007070c
0c1f1b20141b1b20002b00362b1f2c2d142c2c2d2c2b0a180b1b3728201b
2d2c10148a13b80143b30c072520b80124b20c251bb8ffc0b25c351bb802
95b235c92dbc0124002b0203002cffc0b217392cb8ffc0b25c352cb8ffc0
b23a352cb8ffc0b32a34342cb8ffc0b32324342cb8ffc0b21c352cb8ffc0
4013191a34ef2c012c19371b172c171b370a3286182b2b103c2b2b4e10f4
5d2b2b2b2b2b2b2b4dede4e4f42bedf4ed10f6ed2b103c103c2b10c0003f
3f3c87052e2b087d10c4870e2e182b7d10c400183f3c10ed720111123900
11123910f5ed2bfc01f510c987100e7dc4083c3130012b2b5d5d5d4bb032
534bb036515a58b120223859015d005d015d712b2b2b2b01031236333216
151407030615141633323736371706070623222635343713363534262322
07060607060707231336353426232207072701c485bbc75c32411d7a1510
090c11353f1f5d533a2e252c2274161a131c274aa0592f1f3296b620231a
0c1e26060389fe390117b042353c64fe5b49100e130d2a56138539272d26
307501924b2a1419182dcfa15565a5027271171621040624>AJAMED+TimesNewRomanPS-ItalicMT AddT42Char 
AJAMED+TimesNewRomanPS-ItalicMT /CharStrings get begin
/n 81 def
end
AJAMED+TimesNewRomanPS-ItalicMT /Encoding get
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N27 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(no)
[6.00372 6.00372 ] pdfys
%ADOBeginSubsetFont: AJAMED+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AJAMED+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 2812 85 <00010026000003390389002900f9404102180c3921180c39510155035e09
5e0a5229aa03ac0faa18a51a09851a951aff2b0389049904021e1f1f0100
4521ea282930004d01021420021f0201212f0d010db8019f402214250606
010728011f01001f1f202114202021201f0a282120103009400950090309
ba0240001f0203b229c920b8ffc0402e17392040343d3420402c35204024
352040223520401f203420401c1d3400200100209f20bf20d020ef20ff20
0620b80188b52b2017324c182b2b10f45d712b2b2b2b2b2b2be4fde45d2b
103c2b3f3c87052e2b087d10c42b183f003c10fde45d0111123911390011
123910f5ed2bfc01f5870e7d10c43130005d015d5d2b2b13250312373633
321615140706232226272627262322070607060706070607072313363534
272623220767015990af8f5133212622182d1721040207080b110f1a3553
612a1e2a062099b9200f14211538035138fe1a012b77442725423c2d1e1f
130608080e40629c425372177e026d6c2e120c100900>AJAMED+TimesNewRomanPS-ItalicMT AddT42Char 
AJAMED+TimesNewRomanPS-ItalicMT /CharStrings get begin
/r 85 def
end
AJAMED+TimesNewRomanPS-ItalicMT /Encoding get
dup 114 /r put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(rm) show
n
285.839996 412.551025 m
285.839996 411.351013 286.859985 410.391022 288.059998 410.391022 c
301.139984 410.391022 l
302.399994 410.391022 303.359985 411.351013 303.359985 412.551025 c
303.359985 483.830994 l
303.359985 485.031036 302.399994 485.991028 301.139984 485.991028 c
288.059998 485.991028 l
286.859985 485.991028 285.839996 485.031036 285.839996 483.830994 c
0.91765 0.91765 0.91765 setrgbcolor
eofill
n
285.839996 412.551025 m
285.839996 411.351013 286.859985 410.391022 288.059998 410.391022 c
301.139984 410.391022 l
302.399994 410.391022 303.359985 411.351013 303.359985 412.551025 c
303.359985 483.830994 l
303.359985 485.031036 302.399994 485.991028 301.139984 485.991028 c
288.059998 485.991028 l
286.859985 485.991028 285.839996 485.031036 285.839996 483.830994 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
300.359985 412.610504 m
/N29 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(2) show
295.380005 421.610504 m
%ADOBeginSubsetFont: AJAMNG+MonotypeCorsiva AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AJAMNG+MonotypeCorsiva gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N32 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(LE)
[7.018822 7.498741 ] pdfys
300.359985 440.570496 m
/N30 [0.0 18.0 -18.0 6.156296 0.0 0.0] Tf
(\000\003) show
300.359985 445.070496 m
/N31 [0.0 19.979996 -19.979996 0.0 0.0 0.0] Tf
(\r\216) show
300.359985 459.290497 m
/N29 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(2) show
295.380005 468.350464 m
%ADOBeginSubsetFont: AJAMNG+MonotypeCorsiva AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AJAMNG+MonotypeCorsiva gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N32 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(LE)
[7.018822 7.498741 ] pdfys
n
391.5 315.531006 m
391.5 312.591003 393.899994 310.131012 396.899994 310.131012 c
429.419983 310.131012 l
432.419983 310.131012 434.880005 312.591003 434.880005 315.531006 c
434.880005 486.111023 l
434.880005 489.110992 432.419983 491.511017 429.419983 491.511017 c
396.899994 491.511017 l
393.899994 491.511017 391.5 489.110992 391.5 486.111023 c
0.91765 0.91765 0.91765 setrgbcolor
eofill
n
391.5 315.531006 m
391.5 312.591003 393.899994 310.131012 396.899994 310.131012 c
429.419983 310.131012 l
432.419983 310.131012 434.880005 312.591003 434.880005 315.531006 c
434.880005 486.111023 l
434.880005 489.110992 432.419983 491.511017 429.419983 491.511017 c
396.899994 491.511017 l
393.899994 491.511017 391.5 489.110992 391.5 486.111023 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
410.279999 367.490479 m
/N19 [0.0 16.020004 -16.020004 0.0 0.0 0.0] Tf
(OWL API)
[12.455551 15.114878 8.899108 4.442345 10.677452 10.677452 4.445549 ] pdfys
429.47998 347.029633 m
(Transfor)
[9.77849 5.32493 8.897507 8.897507 8.00039 4.443947 8.897507 5.32493 ] pdfys
429.47998 406.671112 m
(m) show
429.47998 419.991821 m
(ation)
[8.897507 4.443947 3.546831 8.897507 8.897507 ] pdfys
n
378.0 415.371033 m
378.0 414.231018 378.959991 413.271027 380.100006 413.271027 c
392.940002 413.271027 l
394.139984 413.271027 395.100006 414.231018 395.100006 415.371033 c
395.100006 485.091003 l
395.100006 486.291016 394.139984 487.251038 392.940002 487.251038 c
380.100006 487.251038 l
378.959991 487.251038 378.0 486.291016 378.0 485.091003 c
0.91765 0.91765 0.91765 setrgbcolor
eofill
n
378.0 415.371033 m
378.0 414.231018 378.959991 413.271027 380.100006 413.271027 c
392.940002 413.271027 l
394.139984 413.271027 395.100006 414.231018 395.100006 415.371033 c
395.100006 485.091003 l
395.100006 486.291016 394.139984 487.251038 392.940002 487.251038 c
380.100006 487.251038 l
378.959991 487.251038 378.0 486.291016 378.0 485.091003 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
392.220001 415.490479 m
/N29 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(2) show
387.23999 424.490479 m
%ADOBeginSubsetFont: AJAMNG+MonotypeCorsiva AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AJAMNG+MonotypeCorsiva gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N32 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(LE)
[7.018822 7.498741 ] pdfys
392.220001 442.910492 m
/N30 [0.0 18.0 -18.0 6.156296 0.0 0.0] Tf
(\000\003) show
392.220001 447.47049 m
/N31 [0.0 19.979996 -19.979996 0.0 0.0 0.0] Tf
(\r\216) show
392.220001 466.730499 m
/N18 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(O) show
n
110.339996 310.731018 m
110.339996 307.491028 112.979996 304.911011 116.219994 304.911011 c
151.37999 304.911011 l
154.619995 304.911011 157.199997 307.491028 157.199997 310.731018 c
157.199997 480.411011 l
157.199997 483.651031 154.619995 486.231018 151.37999 486.231018 c
116.219994 486.231018 l
112.979996 486.231018 110.339996 483.651031 110.339996 480.411011 c
0.91765 0.91765 0.91765 setrgbcolor
eofill
n
110.339996 310.731018 m
110.339996 307.491028 112.979996 304.911011 116.219994 304.911011 c
151.37999 304.911011 l
154.619995 304.911011 157.199997 307.491028 157.199997 310.731018 c
157.199997 480.411011 l
157.199997 483.651031 154.619995 486.231018 151.37999 486.231018 c
116.219994 486.231018 l
112.979996 486.231018 110.339996 483.651031 110.339996 480.411011 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
130.259979 366.410492 m
/N19 [0.0 16.020004 -16.020004 0.0 0.0 0.0] Tf
(Re)
[11.552028 8.892701 ] pdfys
130.259979 386.779907 m
(lation)
[3.542025 8.892701 4.439141 3.542025 8.892701 8.892701 ] pdfys
149.51915 348.530487 m
(R) show
149.51915 360.108124 m
(e) show
149.51915 368.986389 m
(plac)
[8.849446 3.498771 8.849446 7.95233 ] pdfys
149.51915 398.224457 m
(emen)
[8.849446 13.286872 8.849446 8.849446 ] pdfys
149.51915 438.147827 m
(t) show
n
100.079994 421.311035 m
100.079994 420.111023 101.100006 419.151031 102.300003 419.151031 c
115.439995 419.151031 l
116.639999 419.151031 117.600006 420.111023 117.600006 421.311035 c
117.600006 479.811035 l
117.600006 481.011017 116.639999 482.031036 115.439995 482.031036 c
102.300003 482.031036 l
101.100006 482.031036 100.079994 481.011017 100.079994 479.811035 c
0.91765 0.91765 0.91765 setrgbcolor
eofill
n
100.079994 421.311035 m
100.079994 420.111023 101.100006 419.151031 102.300003 419.151031 c
115.439995 419.151031 l
116.639999 419.151031 117.600006 420.111023 117.600006 421.311035 c
117.600006 479.811035 l
117.600006 481.011017 116.639999 482.031036 115.439995 482.031036 c
102.300003 482.031036 l
101.100006 482.031036 100.079994 481.011017 100.079994 479.811035 c
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
114.600006 421.370483 m
/N18 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(O) show
114.600006 435.350464 m
/N30 [0.0 18.0 -18.0 6.156296 0.0 0.0] Tf
(\000\003) show
114.600006 439.850464 m
/N31 [0.0 19.979996 -19.979996 0.0 0.0 0.0] Tf
(\r\216) show
114.600006 458.570496 m
/N18 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(O) show
n
157.860001 387.651031 m
203.759979 387.171021 l
203.699997 385.671021 l
157.860001 386.151031 l
h
198.119995 390.591003 m
205.199997 386.391022 l
198.059998 382.311005 l
197.699997 382.131012 197.220001 382.251007 197.039978 382.611023 c
196.860001 382.971008 196.979996 383.391022 197.339996 383.631012 c
203.339996 387.051025 l
203.339996 385.791016 l
197.400009 389.331024 l
197.039978 389.511017 196.919998 389.991028 197.100006 390.351013 c
197.339996 390.711029 197.819992 390.831024 198.119995 390.591003 c
0.0 0.0 0.0 setrgbcolor
f
1.0 w
0 J
n
156.600006 558.411011 m
354.23999 558.411011 l
354.23999 402.411011 l
S
n
354.47998 403.911011 m
390.23999 403.43103 l
390.23999 401.93103 l
354.47998 402.411011 l
h
384.660004 406.911011 m
391.73999 402.651031 l
384.539978 398.571014 l
384.179993 398.391022 383.759979 398.511017 383.519989 398.871033 c
383.339996 399.231018 383.459991 399.711029 383.819977 399.891022 c
389.880005 403.311005 l
389.819977 401.991028 l
383.880005 405.591034 l
383.519989 405.831024 383.399994 406.251007 383.639984 406.611023 c
383.819977 406.971008 384.300018 407.091034 384.660004 406.911011 c
f
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font ArialMT
%%+ font Arial-ItalicMT
%%+ font Arial-BoldMT
%%+ font TimesNewRoman
%%EOF
