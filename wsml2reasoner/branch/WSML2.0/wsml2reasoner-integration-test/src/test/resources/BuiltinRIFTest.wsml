wsmlVariant _"http://www.wsmo.org/wsml/wsml-syntax/wsml-core"
namespace { _"http://example.com/builtin01#",
	wsml _"http://www.wsmo.org/wsml/wsml-syntax#",
	xsd  _"http://www.w3.org/2001/XMLSchema#",
	rif  _"http://www.w3.org/2007/rif-builtin-predicate#",
	rif-pred  _"http://www.w3.org/2007/rif-builtin-predicate#",
	rif-func  _"http://www.w3.org/2007/rif-builtin-function#",
	rdf  _"http://www.w3.org/1999/02/22-rdf-syntax-ns#" }

/**
* To test rif data types
* see: http://www.w3.org/2005/rules/wiki/DTB#Primitive_Datatypes
*/
ontology builtin01

concept C1
concept C2 
concept C3 

instance A memberOf C1
  aStringValue hasValue xsd#string( "InstanceA" )	

instance B memberOf C2
  bStringValue hasValue xsd#string( "InstanceB" )	
		
axiom testRIFBuiltin definedBy
	   
	   // Test
	   m(?x) 					:- ?x[?attribute hasValue ?value].
       
////////////////////
// RIF builtins
///////////////////

 	  // rif is-literal tests
	   isAnyURITest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-anyURI(xsd#anyURI("http://anyuri.org/")).
	   isBase64BinaryTest(?x) 	:- ?x[?attribute hasValue ?value] and rif#is-literal-base64Binary(xsd#base64Binary( "FFFF" )).
	   isBooleanTest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-boolean(xsd#boolean("true")).
	   isDateTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-date( xsd#date( 1981, 12, 31 )).
	   isDateTimeTest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-dateTime( xsd#dateTime( 1981, 12, 31, 20, 33, 23.4, 0, 0 )).
	   isDateTimeStampTest(?x) 	:- ?x[?attribute hasValue ?value] and rif#is-literal-dateTimeStamp( xsd#dateTimeStamp( 1981, 12, 31, 20, 33, 23.4, 0, 0 )).
	   isDoubleTest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-double(xsd#double( "12345.6789" )).
	   isFloatTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-float(xsd#float("3.4")).
	   isHexBinaryTest(?x)		:- ?x[?attribute hasValue ?value] and rif#is-literal-hexBinary(xsd#hexBinary("FFFF")).
	   isDecimalTest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-decimal(xsd#decimal(123456.78901)).
	   isIntegerTest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-integer(xsd#integer(5)).
	   isLongTest(?x) 		    :- ?x[?attribute hasValue ?value] and rif#is-literal-long(xsd#long("54784")).
	   isIntTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-int(xsd#int("5")).
	   isShortTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-short(xsd#short("5")).
	   isByteTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-byte( xsd#byte("2")).
	   isNonNegativeIntegerTest(?x) 	:- ?x[?attribute hasValue ?value] and rif#is-literal-nonNegativeInteger( xsd#nonNegativeInteger("23")).
	   isPositiveIntegerTest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-positiveInteger( xsd#positiveInteger("3")).
	   isUnsignedLongTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-unsignedLong( xsd#unsignedLong("32342")).
	   isUnsignedIntTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-unsignedInt( xsd#unsignedInt("32")).
	   isUnsignedShortTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-unsignedShort(_unsignedshort("3")).
	   isUnsignedByteTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-unsignedByte(xsd#unsignedByte("3")).
	   isNonPositiveIntegerTest(?x) 	:- ?x[?attribute hasValue ?value] and rif#is-literal-nonPositiveInteger(xsd#nonPositiveInteger("-21")).
	   isNegativeIntegerTest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-negativeInteger( xsd#negativeInteger("-1")).
	   isPlainLiteralTest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-PlainLiteral( rdf#PlainLiteral("test plain literal", "en")).
	   isStringTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-string(xsd#string("string-value")).
	   isNormalizedStringTest(?x)   :- ?x[?attribute hasValue ?value] and rif#is-literal-normalizedString(xsd#normalizedString("normalized")).
	   isTokenTest(?x) 				:- ?x[?attribute hasValue ?value] and rif#is-literal-token(xsd#token("this is a token")).
	   isLanguageTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-language(xsd#language("de")).
	   isNameTest(?x) 				:- ?x[?attribute hasValue ?value] and rif#is-literal-Name(xsd#Name("Baal")).
	   isNCNameTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-NCName(xsd#NCName("NC Hammer")).
	   isNMTokenTest(?x) 			:- ?x[?attribute hasValue ?value] and rif#is-literal-NMTOKEN(xsd#NMTOKEN("This is a NM Token")).
	   isTimeTest(?x) 				:- ?x[?attribute hasValue ?value] and rif#is-literal-time(xsd#time(22,10,32.32,0,0)).
	  
	   isDayTimeDurationTest(?x) 	:- ?x[?attribute hasValue ?value] and rif#is-literal-dayTimeDuration(xsd#dayTimeDuration(3,34,7,3)).
 	   isYearMonthDurationTest(?x) 	:- ?x[?attribute hasValue ?value] and rif#is-literal-yearMonthDuration(xsd#yearMonthDuration(24, 2)).	   
 	   isXMLLiteralTest(?x) 		:- ?x[?attribute hasValue ?value] and rif#is-literal-XMLLiteral(rdf#XMLLiteral("<tag>Text</tag>", "")).
	   
	   // rif is-not-literal tests
	   isNotAnyURITest(?x) 			    :- ?x[?attribute hasValue ?value] and rif#is-literal-not-anyURI(xsd#string("not any uri from hell")).
	   isNotBase64BinaryTest(?x)        :- ?x[?attribute hasValue ?value] and rif#is-literal-not-base64Binary(xsd#string("test_is_not")).
	   isNotBooleanTest(?x)      	    :- ?x[?attribute hasValue ?value] and rif#is-literal-not-boolean(xsd#string("test_is_not")).
	   isNotDateTest(?x)         	    :- ?x[?attribute hasValue ?value] and rif#is-literal-not-date(xsd#string("test_is_not")).
	   isNotDateTimeTest(?x)            :- ?x[?attribute hasValue ?value] and rif#is-literal-not-dateTime(xsd#string("test_is_not")).
       isNotDateTimeStampTest(?x)       :- ?x[?attribute hasValue ?value] and rif#is-literal-not-dateTimeStamp(xsd#string("test_is_not")).
	   isNotDoubleTest(?x)      	    :- ?x[?attribute hasValue ?value] and rif#is-literal-not-double(xsd#string("test_is_not")).
	   isNotFloatTest(?x)        	    :- ?x[?attribute hasValue ?value] and rif#is-literal-not-float(xsd#string("test_is_not")).
	   isNotHexBinaryTest(?x)	        :- ?x[?attribute hasValue ?value] and rif#is-literal-not-hexBinary(xsd#string("test_is_not")).
	   isNotDecimalTest(?x)      	    :- ?x[?attribute hasValue ?value] and rif#is-literal-not-decimal(xsd#string("test_is_not")).
       isNotIntegerTest(?x)				:- ?x[?attribute hasValue ?value] and rif#is-literal-not-integer(xsd#string("test_is_not")).
	   isNotLongTest(?x)         	   	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-long(xsd#string("test_is_not")).
	   isNotIntTest(?x)        	   		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-int(xsd#string("test_is_not")).
	   isNotShortTest(?x)        	   	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-short(xsd#string("test_is_not")).
	   isNotByteTest(?x) 		 	   	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-byte(xsd#string("test_is_not")).
	   isNotNonNegativeIntegerTest(?x) 	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-nonNegativeInteger(xsd#string("test_is_not")).
	   isNotPositiveIntegerTest(?x)    	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-positiveInteger(xsd#string("test_is_not")).
	   isNotUnsignedLongTest(?x) 	   	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-unsignedLong( xsd#string("test_is_not")).
	   isNotUnsignedIntTest(?x)        	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-unsignedInt( xsd#string("test_is_not")).
	   isNotUnsignedShortTest(?x)     	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-unsignedShort( xsd#string("test_is_not")).
	   isNotUnsignedByteTest(?x)       	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-unsignedByte( xsd#string("test_is_not")).
	   isNotNonPositiveIntegerTest(?x) 	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-nonPositiveInteger( xsd#string("test_is_not")).
	   isNotNegativeIntegerTest(?x)    	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-negativeInteger( xsd#string("test_is_not")). 
	   isNotPlainLiteralTest(?x)		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-PlainLiteral(xsd#string("test_is_not")). 
       isNotStringTest(?x)             	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-string(xsd#decimal(123)).
	   isNotNormalizedStringTest(?x)   	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-normalizedString(xsd#string("test_is_not")).
	   isNotTokenTest(?x)              	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-token(xsd#string("test_is_not")).
	   isNotLanguageTest(?x) 		   	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-language(xsd#string("test_is_not")).
	   isNotNameTest(?x) 			   	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-Name(xsd#string("test_is_not")).
	   isNotNCNameTest(?x)			   	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-NCName(xsd#string("test_is_not")).
	   isNotNMTOKENTest(?x)			   	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-NMTOKEN(xsd#string("test_is_not")).
	   isNotTimeTest(?x)				:- ?x[?attribute hasValue ?value] and rif#is-literal-not-time(xsd#string("test_is_not")).
	   isNotDayTimeDurationTest(?x)		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-dayTimeDuration(xsd#string("test_is_not")).
	   isNotYearMonthDurationTest(?x)	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-yearMonthDuration(xsd#string("test_is_not")).
	   isNotXMLLiteralTest(?x)			:- ?x[?attribute hasValue ?value] and rif#is-literal-not-XMLLiteral(xsd#string("test_is_not")).	 
       isNotDurationTest(?x)     		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-duration(xsd#string("test_is_not")).
       isNotDateTimeTest(?x)     		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-dateTime(xsd#string("test_is_not")).
       isNotGDayTest(?x)         		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-gDay(xsd#string("test_is_not")).
       isNotGMonthTest(?x)       		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-gMonth(xsd#string("test_is_not")).
       isNotGMonthDayTest(?x)   	 	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-gMonthDay(xsd#string("test_is_not")).
       isNotGYearTest(?x)        		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-gYear(xsd#string("test_is_not")).
       isNotGYearMonthTest(?x)	 		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-gYearMonth(xsd#string("test_is_not")).
       isNotTimeTest(?x)	     		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-time(xsd#string("test_is_not")).
       isNotDayTimeDurationTest(?x)  	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-dayTimeDuration(xsd#string("test_is_not")).
	   isNotYearMonthDurationTest(?x)  	:- ?x[?attribute hasValue ?value] and rif#is-literal-not-yearMonthDuration(xsd#string("test_is_not")).
	   isNotTextTest(?x)  				:- ?x[?attribute hasValue ?value] and rif#is-literal-not-Text(xsd#string("test_is_not")).
	   isNotXMLLiteralTest(?x)  		:- ?x[?attribute hasValue ?value] and rif#is-literal-not-xmlLiteral(xsd#string("test_is_not")).
	   
	   // rif numerics
	   numericAddTest(?x) 				:- ?x[?attribute hasValue ?value] and rif-func#numeric-add(3, 1, 2).
	   numericSubtractTest(?x) 			:- ?x[?attribute hasValue ?value] and rif-func#numeric-subtract(1, 2, 1).
	   numericMultiplyTest(?x) 			:- ?x[?attribute hasValue ?value] and rif-func#numeric-multiply(56, 7, 8).
	   numericDivideTest(?x) 			:- ?x[?attribute hasValue ?value] and rif-func#numeric-divide(2.2, 2.42, 1.1).
	   numericIntegerDivideTest(?x) 	:- ?x[?attribute hasValue ?value] and rif-func#numeric-integer-divide(4, 8, 2).
	   numericModTest(?x) 				:- ?x[?attribute hasValue ?value] and rif-func#numeric-mod(1, 7, 3).
	   numericEqualTest(?x) 			:- ?x[?attribute hasValue ?value] and rif-pred#numeric-equal(5, 5).
	   numericLessThanTest(?x) 			:- ?x[?attribute hasValue ?value] and rif-pred#numeric-less-than(3, 5).
	   numericGreaterThanTest(?x)		:- ?x[?attribute hasValue ?value] and rif-pred#numeric-greater-than(5, 3).
	   numericNotEqualTest(?x)			:- ?x[?attribute hasValue ?value] and rif-pred#numeric-not-equal(3, 5).
	   numericLessThanOrEqualTest(?x)	:- ?x[?attribute hasValue ?value] and rif-pred#numeric-less-than-or-equal(5, 5).
	   numericGreaterThanOrEqualTest(?x):- ?x[?attribute hasValue ?value] and rif-pred#numeric-greater-than-or-equal(5, 5).
	   
	   // rif boolean function
	   notTest(?x)						:- ?x[?attribute hasValue ?value] and rif-func#not(xsd#boolean("false")).

	   // rif boolean predicate
	   booleanEqualTest(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#boolean-equal(xsd#boolean("true"), xsd#boolean("true")).
	   booleanLessThanTest(?x)			:- ?x[?attribute hasValue ?value] and rif-pred#boolean-less-than(xsd#boolean("false"), xsd#boolean("true")).
	   booleanGreaterThanTest(?x)		:- ?x[?attribute hasValue ?value] and rif-pred#boolean-greater-than(xsd#boolean("true"), xsd#boolean("false")).
	   
	   // rif strings function
	   compareTest(?x) 					:- ?x[?attribute hasValue ?value] and rif-func#compare(-1, xsd#string("compare"),xsd#string("dompare")).
	   concatTest(?x)					:- ?x[?attribute hasValue ?value] and rif-func#concat(xsd#string("con7cat"), xsd#string("con"), xsd#integer("7"), xsd#string(""), xsd#string("cat")).
	   stringJoinTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#string-join(xsd#string("string+join"), xsd#string("string"), xsd#string("join"), xsd#string("+")).
	   subStringTest1(?x)				:- ?x[?attribute hasValue ?value] and rif-func#substring(xsd#string("ing"), xsd#string("string"), xsd#integer(3)).
	   subStringTest2(?x)				:- ?x[?attribute hasValue ?value] and rif-func#substring(xsd#string("in"), xsd#string("string"), xsd#double("3.0"), xsd#integer(2)).
	   stringLengthTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#string-length(xsd#integer(6), xsd#string("string")).
	   upperCaseTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#upper-case(xsd#string("STRING"), xsd#string("stRing")).
	   lowerCaseTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#lower-case(xsd#string("string"), xsd#string("STrING")).
	   encodeForUriTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#encode-for-uri(xsd#string("encode%20me"), xsd#string("encode me")).
	   iriToUriTest(?x)					:- ?x[?attribute hasValue ?value] and rif-func#iri-to-uri(xsd#string("http://www.example.com/~b%C3%A9b%C3%A9"), xsd#string("http://www.example.com/~b�b�")).
	   escapeHtmlUriTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#escape-html-uri(xsd#string("javascript:if (navigator.browserLanguage == 'fr') window.open('http://www.example.com/~b%C3%A9b%C3%A9');"), xsd#string("javascript:if (navigator.browserLanguage == 'fr') window.open('http://www.example.com/~b�b�');")).
	   substringBeforeTest1(?x)			:- ?x[?attribute hasValue ?value] and rif-func#substring-before(xsd#string("ta"), xsd#string("tattoo"), xsd#string("tt"), xsd#string("http://www.w3.org/2005/xpath-functions/collation/codepoint")).
	   substringBeforeTest2(?x)			:- ?x[?attribute hasValue ?value] and rif-func#substring-before(xsd#string("ta"), xsd#string("tattoo"), xsd#string("tt")).
	   substringAfterTest1(?x)			:- ?x[?attribute hasValue ?value] and rif-func#substring-after(xsd#string("too"), xsd#string("tattoo"), xsd#string("tat"), xsd#string("http://www.w3.org/2005/xpath-functions/collation/codepoint")).
	   substringAfterTest2(?x)			:- ?x[?attribute hasValue ?value] and rif-func#substring-after(xsd#string("too"), xsd#string("tattoo"), xsd#string("at")).
	   replaceTest(?x)					:- ?x[?attribute hasValue ?value] and rif-func#replace(xsd#string("herold"), xsd#string("helloworld"), xsd#string("llo wor"), xsd#string("ro"), xsd#string("x")).

	   // rif strings predicates
	   containsTest1(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#contains(xsd#string("tattoo"), xsd#string("tt")).
	   containsTest2(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#contains(xsd#string("tattoo"), xsd#string("tt"), xsd#string("http://www.w3.org/2005/xpath-functions/collation/codepoint")).
	   startsWithTest1(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#starts-with(xsd#string("tattoo"),xsd#string("tat") ).
	   startsWithTest2(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#starts-with(xsd#string("tattoo"),xsd#string("tat"), xsd#string("http://www.w3.org/2005/xpath-functions/collation/codepoint")).
	   endsWithTest1(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#ends-with(xsd#string("tattoo"), xsd#string("oo")).
	   endsWithTest2(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#ends-with(xsd#string("tattoo"), xsd#string("oo"), xsd#string("http://www.w3.org/2005/xpath-functions/collation/codepoint")).
	   matchesTest1(?x)					:- ?x[?attribute hasValue ?value] and rif-pred#matches(xsd#string("abracadabra"), xsd#string("^a.*a$")).
	   matchesTest2(?x)					:- ?x[?attribute hasValue ?value] and rif-pred#matches(xsd#string("abracadabra"), xsd#string("^a.*a$"), xsd#string("http://www.w3.org/2005/xpath-functions/collation/codepoint")).
	   
	   // rif date time part
	   yearFromDateTimeTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#year-from-dateTime(1986, xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
	   monthFromDateTimeTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#month-from-dateTime(12, xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
	   dayFromDateTimeTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#day-from-dateTime(31, xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
	   hoursFromDateTimeTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#hours-from-dateTime(20, xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
	   minutesFromDateTimeTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#minutes-from-dateTime(33, xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
	   secondsFromDateTimeTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#seconds-from-dateTime(xsd#decimal("23.4"), xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
	   
	   // rif date part
	   yearFromDateTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#year-from-date(1986, xsd#date( 1986, 12, 31, 0, 0)).
	   monthFromDateTest(?x)		    :- ?x[?attribute hasValue ?value] and rif-func#month-from-date(12, xsd#date( 1986, 12, 31, 0, 0)).
	   dayFromDateTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#day-from-date(31, xsd#date( 1986, 12, 31, 0, 0)).
	   
	   // rif duration
	   yearsFromDurationTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#years-from-duration(1, xsd#duration( 1, 2, 3, 4, 5, 6.0 )).
	   monthsFromDurationTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#months-from-duration(2, xsd#duration( 1, 2, 3, 4, 5, 6.0 )).
	   daysFromDurationTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#days-from-duration(3, xsd#duration( 1, 2, 3, 4, 5, 6.0 )).
	   hoursFromDurationTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#hours-from-duration(4, xsd#duration( 1, 2, 3, 4, 5, 6.0 )).
	   minutesFromDurationTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#minutes-from-duration(5, xsd#duration( 1, 2, 3, 4, 5, 6.0 )).
	   secondsFromDurationTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#seconds-from-duration(6.0, xsd#duration( 1, 2, 3, 4, 5, 6.0 )).
	  
	   // rif timezones from date
	   timezoneFromDateTimeTest(?x)	   	:- ?x[?attribute hasValue ?value] and rif-func#timezone-from-dateTime(xsd#dayTimeDuration(0,5,30,0), xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 5, 30 )).
	   timezoneFromDateTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#timezone-from-date(xsd#dayTimeDuration(0,0,0,0), xsd#date( 1981, 12, 31 )).
	   timezoneFromTimeTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#timezone-from-time(xsd#dayTimeDuration(0,1,23,0), xsd#time(20, 33, 23.4, 1, 23 )).
	   
	   // rif date time manipulation 
	   subtractDateTimesTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#subtract-dateTimes(xsd#dayTimeDuration(0,9,0,0) , xsd#dateTime(2000, 10, 30, 19, 0, 0.0 ,0,0), xsd#dateTime(2000, 10, 30, 10, 0, 0.0 ,0,0)).
	   subtractDateTimes_neg_Test(?x)		:- ?x[?attribute hasValue ?value] and rif-func#subtract-dateTimes(xsd#dayTimeDuration(0,-9,0,0) , xsd#dateTime(2000, 10, 30, 10, 0, 0.0 ,0,0), xsd#dateTime(2000, 10, 30, 19, 0, 0.0 ,0,0)).
	   subtractDatesTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#subtract-dates(xsd#dayTimeDuration(10,0,0,0), xsd#date(2000,10,30), xsd#date(2000,10,20)).
	   subtractTimesTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#subtract-times(xsd#dayTimeDuration(0,2,12,0), xsd#time(11,12,00,0,0 ), xsd#time(04,0,0,-5,0)).

	   // rif yearMonthDuration manipulation 
	   // TODO: built-in not yet supported
	   // addYearMonthDurationsTest(?x)							:- ?x[?attribute hasValue ?value] and rif-func#add-yearMonthDurations(xsd#duration( 11, 1, 0, 21, 12, 0.0), xsd#yearMonthDuration(20, 3), xsd#yearMonthDuration(12, 9)).
	   subtractYearMonthDurationsTest(?x)						:- ?x[?attribute hasValue ?value] and rif-func#subtract-yearMonthDurations(xsd#duration( 11, 1, 0, 21, 12, 0.0), xsd#yearMonthDuration(20, 3), xsd#yearMonthDuration(12, 9)).
	   // TODO: built-in not yet supported
	   // multiplyYearMonthDurationTest(?x)						:- ?x[?attribute hasValue ?value] and rif-func#multiply-yearMonthDurations(xsd#yearMonthDuration(4, 4), xsd#yearMonthDuration(2, 2),  xsd#double(2.0)).
	   divideYearMonthDurationTest(?x)							:- ?x[?attribute hasValue ?value] and rif-func#divide-yearMonthDurations(xsd#yearMonthDuration(2, 2), xsd#integer(2)).
	   divideYearMonthDurationByYearMonthDurationTest(?x) 		:- ?x[?attribute hasValue ?value] and rif-func#divide-yearMonthDurations(xsd#yearMonthDuration(2, 2), xsd#yearMonthDuration(2, 1)).
	   
	   // rif dayTimeDuration manipulation
	   //  addDayTimeDurationsTest(?x)						:- ?x[?attribute hasValue ?value] and rif-func#add-dayTimeDurations(xsd#dayTimeDuration(20, 3, 12, 33), xsd#dayTimeDuration(12, 9, 10, 33)).	
	   subtractDayTimeDurationsTest(?x)					:- ?x[?attribute hasValue ?value] and rif-func#subtract-dayTimeDurations(xsd#duration( 11, 1, 0, 21, 12, 0.0), xsd#dayTimeDuration(20, 3, 10, 33), xsd#dayTimeDuration(12, 9, 10, 33)).	
	   // TODO: built-in not yet supported
	   // multiplyDayTimeDurationTest(?x)					:- ?x[?attribute hasValue ?value] and rif-func#multiply-dayTimeDurations(xsd#dayTimeDuration(20, 3, 10, 33), xsd#dayTimeDuration(12, 9, 10, 33)).	
	   divideDayTimeDurationTest(?x)					:- ?x[?attribute hasValue ?value] and rif-func#divide-dayTimeDurations(xsd#dayTimeDuration(20, 3, 10, 33), xsd#dayTimeDuration(12, 9, 10, 33)).	
	   divideDayTimeDurationBydayTimeDurationTest(?x)	:- ?x[?attribute hasValue ?value] and rif-func#divide-dayTimeDuration-by-dayTimeDurations(xsd#dayTimeDuration(20, 3, 10, 33), xsd#dayTimeDuration(12, 9, 10, 33)).	
	   
	   // rif yearMonth dayTime
	   addYearMonthDurationToDateTimeTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#add-yearMonthDuration-to-dateTime(xsd#duration(1,2,3,4,5,6.0), xsd#yearMonthDuration(20, 3), xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).	
	   addYearMonthDurationToDateTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#add-yearMonthDuration-to-date(xsd#duration(1,2,3,4,5,6.0), xsd#yearMonthDuration(20, 3), xsd#date( 1981, 12, 31 )).
	   
	   addDayTimeDurationToDateTimeTest(?x)				:- ?x[?attribute hasValue ?value] and rif-func#add-dayTimeDuration-to-dateTime(xsd#duration(1,2,3,4,5,6.0), xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 ), xsd#dayTimeDuration(10, 33, 12, 31 )).
	   addDayTimeDurationToDateTest(?x)					:- ?x[?attribute hasValue ?value] and rif-func#add-dayTimeDuration-to-date(xsd#duration(1,2,3,4,5,6.0), xsd#date( 1981, 12, 31 ), xsd#dayTimeDuration( 10, 12, 3, 32 ) ).
	   addDayTimeDurationToTimeTest(?x)					:- ?x[?attribute hasValue ?value] and rif-func#add-dayTimeDuration-to-time(xsd#duration(1,2,3,4,5,6.0), xsd#time(20, 33, 23.4, 0, 0 ), xsd#dayTimeDuration( 10, 12, 3, 32 )).

	   subtractYearMonthDurationFromDateTimeTest(?x)	:- ?x[?attribute hasValue ?value] and rif-func#subtract-yearMonthDuration-from-dateTime(xsd#duration(1,2,3,4,5,6.0), xsd#yearMonthDuration(20, 3), xsd#dateTime(1986, 12, 31, 20, 33, 23.4, 0, 0 )).	
	   subtractYearMonthDurationFromDateTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#subtract-yearMonthDuration-from-date(xsd#duration(1,2,3,4,5,6.0), xsd#yearMonthDuration(20, 3), xsd#date( 1981, 12, 31 )).
	   
	   subtractDayTimeDurationFromDateTimeTest(?x)		:- ?x[?attribute hasValue ?value] and rif-func#subtract-dayTimeDuration-from-dateTime(xsd#duration(1,2,3,4,5,6.0), xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 ), xsd#dayTimeDuration( 10, 12, 3, 32 )).
	   subtractDayTimeDurationFromDateTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#subtract-dayTimeDuration-from-date(xsd#duration(1,2,3,4,5,6.0), xsd#date( 1981, 12, 31 ), xsd#dayTimeDuration( 10, 12, 3, 32 ) ).
	   subtractDayTimeDurationFromTimeTest(?x)			:- ?x[?attribute hasValue ?value] and rif-func#subtract-dayTimeDuration-from-time(xsd#duration(1,2,3,4,5,6.0), xsd#time(20, 33, 23.4, 0, 0 ), xsd#dayTimeDuration( 10, 12, 3, 32 )).
	
	   // rif dateTime boolean   
	   dateTimeEqualTest(?x)							:- ?x[?attribute hasValue ?value] and rif-pred#dateTime-equal( xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 ), xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
	   dateTimeLessThanTest(?x)							:- ?x[?attribute hasValue ?value] and rif-pred#dateTime-less-than( xsd#dateTime( 1985, 12, 31, 20, 33, 23.4, 0, 0 ), xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
	   dateTimeGreaterThanTest(?x)						:- ?x[?attribute hasValue ?value] and rif-pred#dateTime-greater-than(xsd#dateTime( 2001, 12, 31, 20, 33, 23.4, 0, 0 ), xsd#dateTime( 1988, 12, 31, 20, 33, 23.4, 0, 0 )).
	    
	   // rif date boolean
	   dateEqualTest(?x)								:- ?x[?attribute hasValue ?value] and rif-pred#date-equal( xsd#date( 1986, 12, 31), xsd#date( 1986, 12, 31)).
	   dateLessThanTest(?x)								:- ?x[?attribute hasValue ?value] and rif-pred#date-less-than( xsd#date( 1986, 12, 31), xsd#date( 1999, 12, 31)).
	   dateGreaterThanTest(?x)							:- ?x[?attribute hasValue ?value] and rif-pred#date-greater-than( xsd#date( 2001, 12, 31) ,xsd#date( 1988, 12, 3 )).
	
	   // rif time boolean
	   timeEqualTest(?x)								:- ?x[?attribute hasValue ?value] and rif-pred#time-equal( xsd#time(20, 33, 23.4, 0, 0 ), xsd#time(20, 33, 23.4, 0, 0 )).
	   timeLessThanTest(?x)								:- ?x[?attribute hasValue ?value] and rif-pred#time-less-than( xsd#time(10, 33, 23.4, 0, 0 ), xsd#time(20, 33, 23.4, 0, 0 )).
	   timeGreaterThanTest(?x)							:- ?x[?attribute hasValue ?value] and rif-pred#time-greater-than(xsd#time(21, 33, 23.4, 0, 0 ), xsd#time(20, 33, 23.4, 0, 0 )).   
	  
	   // rif boolean functions
	   durationEqualTest(?x)							:- ?x[?attribute hasValue ?value] and rif-pred#duration-equal( xsd#duration( 1, 2, 3, 4, 5, 6.0 ),  xsd#duration( 1, 2, 3, 4, 5, 6.0 )).
	   
	   dayTimeDurationLessThanTest(?x)					:- ?x[?attribute hasValue ?value] and rif-pred#dayTimeDuration-less-than(xsd#dayTimeDuration( 1, 2, 3, 4 ), xsd#dayTimeDuration( 6, 2, 3, 4)).
	   dayTimeDurationGreaterThanTest(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#dayTimeDuration-greater-than(xsd#dayTimeDuration( 6, 2, 3, 4 ), xsd#dayTimeDuration( 1, 2, 3, 4)).
 
	   yearMonthDurationLessThanTest(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#yearMonthDuration-less-than( xsd#yearMonthDuration(10, 2),  xsd#yearMonthDuration(20, 3)).
	   yearMonthDurationGreaterThanTest(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#yearMonthDuration-greater-than( xsd#yearMonthDuration(23, 12),  xsd#yearMonthDuration(20, 5)).

	   dateTimeNotEqualTest(?x)							:- ?x[?attribute hasValue ?value] and rif-pred#dateTime-not-equal( xsd#dateTime( 1986, 12, 31, 20, 33, 0.4, 1, 0 ), xsd#dateTime( 186, 12, 31, 20, 33, 23.4, 0, 0 )).
	   dateTimeLessThanOrEqualTest(?x)					:- ?x[?attribute hasValue ?value] and rif-pred#dateTime-less-than-or-equal( xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 ), xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
	   dateTimeGreaterThanOrEqualTest(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#dateTime-greater-than-or-equal( xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 ), xsd#dateTime( 1986, 12, 31, 20, 33, 23.4, 0, 0 )).
 
	   dateNotEqualTest(?x)								:- ?x[?attribute hasValue ?value] and rif-pred#date-equal( xsd#date( 1986, 12, 31), xsd#date( 1986, 12, 31)).
	   dateLessThanOrEqualTest(?x)						:- ?x[?attribute hasValue ?value] and rif-pred#date-equal( xsd#date( 1986, 12, 31), xsd#date( 1986, 12, 31)).
	   dateGreaterThanOrEqualTest(?x)					:- ?x[?attribute hasValue ?value] and rif-pred#date-equal( xsd#date( 1986, 12, 31), xsd#date( 1986, 12, 31)).
	
	   timeNotEqualTest(?x)								:- ?x[?attribute hasValue ?value] and rif-pred#date-equal( xsd#time(20, 33, 23.4, 0, 0 ), xsd#time(20, 33, 23.4, 0, 0 )).
	   timeLessThanOrEqualTest(?x)						:- ?x[?attribute hasValue ?value] and rif-pred#date-equal(xsd#time(20, 33, 23.4, 0, 0 ),xsd#time(20, 33, 23.4, 0, 0 )).
	   timeGreaterThanOrEqualTest(?x)					:- ?x[?attribute hasValue ?value] and rif-pred#date-equal( xsd#time(20, 33, 23.4, 0, 0 ), xsd#time(20, 33, 23.4, 0, 0 )).   
	   
	   durationNotEqualTest(?x)							:- ?x[?attribute hasValue ?value] and rif-pred#duration-not-equal( xsd#duration( 5, 8, 1, 7, 3, 2.1 ), xsd#duration( 2, 2, 3, 4, 5, 6.0 )).
	   
	   dayTimeDurationLessThanOrEqualTest(?x)			:- ?x[?attribute hasValue ?value] and rif-pred#dayTimeDuration-less-than-or-equal(  xsd#dayTimeDuration( 6, 2, 3, 4),  xsd#dayTimeDuration( 6, 2, 3, 4)).
	   dayTimeDurationGreaterThanOrEqualTest(?x)		:- ?x[?attribute hasValue ?value] and rif-pred#dayTimeDuration-greater-than-or-equal(  xsd#dayTimeDuration( 6, 2, 3, 4),  xsd#dayTimeDuration( 6, 2, 3, 4)).
	   
	   yearMonthDurationLessThanOrEqualTest(?x)			:- ?x[?attribute hasValue ?value] and rif-pred#yearMonthDuration-less-than-or-equal( xsd#yearMonthDuration(20, 3),  xsd#yearMonthDuration(22, 3)).
	   yearMonthDurationGreaterThanOrEqualTest(?x)		:- ?x[?attribute hasValue ?value] and rif-pred#yearMonthDuration-greater-than-or-equal( xsd#yearMonthDuration(23, 3),  xsd#yearMonthDuration(22, 3)).
	   
	   // rif xmlLiteral
	   xmlLiteralEqualTest(?x)							:- ?x[?attribute hasValue ?value] and rif-pred#XMLLiteral-equal( rdf#XMLLiteral("<tag>equal</tag>", ""), rdf#XMLLiteral("<tag>equal</tag>", "")).
	   xmlLiteralNotEqualTest(?x)						:- ?x[?attribute hasValue ?value] and rif-pred#XMLLiteral-not-equal( rdf#XMLLiteral("<tag>not equal</tag>", ""),  rdf#XMLLiteral("<tag>really not equal!</tag>", "")).

	   // rif plain literal
	   plainLiteralFromStringLangTest(?x)				:- ?x[?attribute hasValue ?value] and rif-pred#PlainLiteral-from-string-lang(xsd#stringLang("nothing", "en"), rdf#XMLLiteral("<tag>nothing</tag>", "en") ).
	   stringFromPlainLiteralTest(?x)					:- ?x[?attribute hasValue ?value] and rif-pred#string-from-PlainLiteral(rdf#XMLLiteral("<tag>nothing </tag>", "en"), xsd#string("nothing") ).
	   langFromPlainLiteralTest(?x)						:- ?x[?attribute hasValue ?value] and rif-pred#lang-from-PlainLiteral(rdf#XMLLiteral("<tag>nothing</tag>", "en"), xsd#lang("en")).
	
	  
////////////////////
//  WSML builtins
///////////////////

	   // Section [A]
	   toDoubleTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toDouble(?z, xsd#string("3")) and ?z = xsd#double("3.0").
	   toStringTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toString(?z, xsd#integer(123)) and ?z = xsd#string("123").
	   toDecimalTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toDecimal(?z, xsd#string("123456.78901")) and ?z = xsd#decimal(123456.78901).
	   toBooleanTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toBoolean( ?z, xsd#string("true")) and ?z = xsd#boolean("true").
	   toIntegerTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toInteger( ?z, xsd#string("1"))  and ?z = xsd#integer(1).
	   toBase64BinaryTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#toBase64Binary(?z, xsd#string("10AB")) and ?z = xsd#base64Binary("10AB").
	   toDateTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#toDate(?z, xsd#dateTime( 1981, 12, 31, 23, 59, 58.0 ) ) and wsml#dateEqual(?z , xsd#date(1981,12,31) ).
	   toDateTimeTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toDateTime(?z, xsd#date(1981, 12, 31)) and ?z =  xsd#dateTime( 1981, 12, 31, 0, 0, 0.0 ).
       toDurationTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toDuration(?z, xsd#dayTimeDuration(5, 3, 2, 1.0) ) and ?z = xsd#duration(0, 0, 5, 3, 2, 1.0).
       toFloatTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#toFloat(?z, xsd#string("3.4"))  and ?z = xsd#float("3.4").
       toGDayTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#toGDay(?z, xsd#date(1981,12,31)) and ?z = xsd#gDay(31).
       toGMonthTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toGMonth(?z, xsd#date(1981,12,31)) and ?z = xsd#gMonth(12).
       toGMonthDayTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toGMonthDay(?z, xsd#date(1981,12,31)) and ?z = xsd#gMonthDay(12, 31).
       toGYearTest(?x)	 		:- ?x[?attribute hasValue ?value] and wsml#toGYear(?z, xsd#date(1965,12,31)) and ?z = xsd#gYear(1965).
       toGYearMonthTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#toGYearMonth(?z, xsd#date(1962,6,12)) and ?z = xsd#gYearMonth(1962, 6).
       toHexBinaryTest(?x)	 	:- ?x[?attribute hasValue ?value] and wsml#toHexBinary(?z, xsd#string("FFFF")) and  ?z = xsd#hexBinary("FFFF").
       toTimeText(?x) 			:- ?x[?attribute hasValue ?value] and wsml#toTime(?z, xsd#dateTime( 1981, 12, 31, 14, 31, 30.0 )) and ?z  = xsd#time(14, 31, 30.0, 0, 0).
       toDayTimeDurationTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#toDayTimeDuration(?z, xsd#duration(0, 0, 5, 3, 2, 1.0)) and ?z = xsd#dayTimeDuration(5, 3, 2, 1.0).
       toYearMonthDurationTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#toYearMonthDuration(?z, xsd#duration(1, 0, 0, 0, 0, 0.0)) and ?z = xsd#yearMonthDuration(1,0).
       toTextTest(?x) 				:- ?x[?attribute hasValue ?value] and wsml#toText(?z, xsd#string("Text", "de")) and ?z = rdf#PlainLiteral("Text", "de").
       toXMLLiteralTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#toXMLLiteral(?z, xsd#string("<tag>Text</tag>")) and ?z = rdf#XMLLiteral("<tag>Text</tag>", "").
	   
	   // Section [B]
	   stringCompareTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#stringCompare(0, "InstanceA", "InstanceA").
	   stringEqualTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#stringEqual("InstanceA", xsd#string("InstanceA")).
	   stringConcatTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#stringConcat(?y, xsd#string("con"), xsd#string("cat")) and wsml#stringEqual(?y, xsd#string("concat")).  
	   stringJoinTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#stringJoin( ?z, xsd#string("a"), xsd#string("b"), xsd#string(" ")) and wsml#stringEqual(?z, xsd#string("a b ")).
	   stringSubstringTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#stringSubstring(?z, xsd#string("aaabbb"), xsd#integer(3)) and ?z = xsd#string("bbb"). 
	   stringLengthTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#stringLength(?z, xsd#string("aaabbb")) and ?z = 6. 
	   stringToUpperTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#stringToUpper(?z, xsd#string("this is a string")) and ?z = xsd#string("THIS IS A STRING").
	   stringToLowerTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#stringToLower(?z, xsd#string("THIS IS A STRING")) and ?z = xsd#string("this is a string").
	   
	   // Section [C]
	   stringUriEncodeTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#stringUriEncode(?z, xsd#string("")) and ?z = xsd#string(""). 
	   stringIriToUriTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#stringIriToUri(?z, xsd#string("")) and ?z = xsd#string(""). 
	   stringEscapeHtmlUriTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#stringEscapeHtmlUri(?z, xsd#string("")) and ?z = xsd#string(""). 
	   stringSubstringBeforeTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#stringSubstringBefore(?z, xsd#string("a long string for testing"), xsd#string("long")) and ?z = xsd#string("a "). 
	   stringSubstringAfterTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#stringSubstringAfter(?z, xsd#string("a long string for testing"), xsd#string("long")) and ?z = xsd#string(" string for testing"). 
	   stringReplaceTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#stringReplace(?z, xsd#string("a long string for testing"), xsd#string("long"), xsd#string("short")) and ?z = xsd#string("a short string for testing"). 
	   stringContainsTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#stringContains(xsd#string("a long string for testing"), xsd#string("long")).
	   stringStartsWithTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#stringStartsWith(xsd#string("a long string for testing"), xsd#string("a")).
	   stringEndsWithTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#stringEndsWith(xsd#string("a long string for testing"), xsd#string("testing")).
	   stringMatchesTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#stringMatches(xsd#string("a long string for testing"), xsd#string("long")).
	   
	   // Section [D]
	   yearPartTest1(?x) 	:- ?x[?attribute hasValue ?value] and wsml#yearPart(?z, xsd#dateTime( 1981, 12, 31, 23, 59, 58.0 )) and ?z = 1981. 
	   yearPartTest2(?x) 	:- ?x[?attribute hasValue ?value] and wsml#yearPart(?z, xsd#date(1981, 12, 31)) and ?z = 1981. 
	   yearPartTest3(?x) 	:- ?x[?attribute hasValue ?value] and wsml#yearPart(?z, xsd#duration(1, 2, 3, 4, 5, 6.0 )) and ?z = 1. 
	   
	   monthPartTest1(?x) 	:- ?x[?attribute hasValue ?value] and wsml#monthPart(?z, xsd#dateTime( 1981, 12, 31, 23, 59, 58.0 )) and ?z = 12. 
	   monthPartTest2(?x) 	:- ?x[?attribute hasValue ?value] and wsml#monthPart(?z, xsd#date(1981, 12, 31)) and ?z = 12. 
	   monthPartTest3(?x) 	:- ?x[?attribute hasValue ?value] and wsml#monthPart(?z, xsd#duration(1, 2, 3, 4, 5, 6.0 )) and ?z = 2. 
	   
	   dayPartTest1(?x) 	:- ?x[?attribute hasValue ?value] and wsml#dayPart(?z, xsd#dateTime( 1981, 12, 31, 23, 59, 58.0 )) and ?z = 31.	   
	   dayPartTest2(?x) 	:- ?x[?attribute hasValue ?value] and wsml#dayPart(?z, xsd#date(1981, 12, 31))  and ?z = 31.	   
	   dayPartTest3(?x) 	:- ?x[?attribute hasValue ?value] and wsml#dayPart(?z, xsd#duration(1, 2, 3, 4, 5, 6.0 ))  and ?z = 3.	   
	   
	   hourPartTest1(?x) 	:- ?x[?attribute hasValue ?value] and wsml#hourPart(?z, xsd#dateTime( 1981, 12, 31, 23, 59, 58.0 )) and ?z = 23.	   
	   hourPartTest2(?x) 	:- ?x[?attribute hasValue ?value] and wsml#hourPart(?z, xsd#time(9, 46, 13.0)) and ?z = 9.	   
	   hourPartTest3(?x) 	:- ?x[?attribute hasValue ?value] and wsml#hourPart(?z, xsd#duration(1, 2, 3, 4, 5, 6.0 )) and ?z = 4.	   
	   
	   minutePartTest1(?x) 	:- ?x[?attribute hasValue ?value] and wsml#minutePart(?z, xsd#dateTime( 1981, 12, 31, 23, 59, 58.0 )) and ?z = 59. 
	   minutePartTest2(?x) 	:- ?x[?attribute hasValue ?value] and wsml#minutePart(?z, xsd#time(9, 46, 13.0)) and ?z = 46.
	   minutePartTest3(?x) 	:- ?x[?attribute hasValue ?value] and wsml#minutePart(?z, xsd#duration(1, 2, 3, 4, 5, 6.0 )) and ?z = 5. 
	   
	   secondPartTest1(?x) 	:- ?x[?attribute hasValue ?value] and wsml#secondPart(?z, xsd#dateTime( 1981, 12, 31, 23, 59, 58.0 )) and ?z = 58.0. 
	   secondPartTest2(?x) 	:- ?x[?attribute hasValue ?value] and wsml#secondPart(?z, xsd#time(9, 46, 13.0)) and ?z = 13.0. 
	   secondPartTest3(?x) 	:- ?x[?attribute hasValue ?value] and wsml#secondPart(?z, xsd#duration(1, 2, 3, 4, 5, 6.0 )) and ?z = 6.0. 
	   
	   timezonePartTest1(?x) :- ?x[?attribute hasValue ?value] and wsml#timezonePart(?z, xsd#dateTime( 1981, 12, 31, 23, 59, 58.0, 0, 0)) and ?z = xsd#dayTimeDuration(0, 0, 0, 0.0). 
	   timezonePartTest2(?x) :- ?x[?attribute hasValue ?value] and wsml#timezonePart(?z, xsd#time(9, 46, 13.0)) and ?z = xsd#dayTimeDuration(0, 0, 0, 0.0). 
	   timezonePartTest3(?x) :- ?x[?attribute hasValue ?value] and wsml#timezonePart(?z, xsd#date(1981, 12, 31))  and ?z = xsd#dayTimeDuration(0, 0, 0, 0.0). 
	   
	   // Section [E]
	   textFromStringLangTest(?x) 	:- ?x[?attribute hasValue ?value] and wsml#textFromStringLang(?z, xsd#string("some string"), xsd#string("en")) and ?z = rdf#PlainLiteral("some string", "en").  
	   textFromStringTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#textFromString(?text, xsd#string("abc")) and ?text = rdf#PlainLiteral("abc", "").  
	   stringFromTextTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#stringFromText(?z, rdf#PlainLiteral("abc", "de")) and wsml#stringEqual(?z, xsd#string("abc")).  
	   langFromTextTest(?x) 		:- ?x[?attribute hasValue ?value] and wsml#langFromText(?z, rdf#PlainLiteral("Rdf plain literal","en")) and wsml#stringEqual(?z, xsd#string("en")).
	   textLengthTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#textLength(?length, rdf#PlainLiteral("Rdf Text", "en")) and ?length = 8.
	   textCompareTest(?x) 			:- ?x[?attribute hasValue ?value] and wsml#textCompare(?z, rdf#PlainLiteral("Rdf plain literal", "en") , rdf#PlainLiteral("Rdf plain literal", "en")) and ?z = 0.
	   
	   
	   

