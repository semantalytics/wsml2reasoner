	
<project name="WSML2Reasoner Framework" default="create-wsml2reasoner-snapshots" basedir="." >

	<!-- =================================================================== -->
	<!-- Initialization                                                -->
	<!-- =================================================================== -->
	<target name="init">
		<tstamp />
		<property name="target.vm" value="1.5" />
		
		<property name="project.dir" value="${basedir}/wsml2reasoner" />
		<property name="src.dir" value="${project.dir}/src" />
		<property name="api-src.dir" value="${project.dir}/api/src/" />
		<property name="test-src.dir" value="${project.dir}/test/" />
		<property name="lib.dir" value="${project.dir}/lib" />
		<property name="example.dir" value="${src.dir}/example/" />

		<property name="build.root" value="${basedir}/build/" />
		<property name="build.src" value="${build.root}/src" />
		<property name="build.lib" value="${build.root}/lib" />
		<property name="build.class" value="${build.root}/class" />
		<property name="dist" value="${basedir}/dist/" />
    	<property name="dist.complete" value="${dist}/complete" />
		<property name="dist.complete.src" value="${dist.complete}/src" />
		<property name="dist.complete.lib" value="${dist.complete}/lib" />
		<property name="dist.complete.test" value="${dist.complete}/test" />
		<property name="dist.complete.example" value="${dist.complete}/example" />
	
		<property name="javadoc.dir" location="${basedir}/javadoc" />
		
		<!-- For checking out project -->
		<property name="cvs.user" value="graham"/>
		<property name="cvs.path" value=":pserver:${cvs.user}@cvs.deri.at:/usr/local/cvsroot" />
		
		<!-- For updating remote snapshot -->
		<property file="pwd" />
		<property name="shell.host" value="tools.deri.org" />
		<property name="remote.snapshot.path" value="../snapshot/" />
		<property name="remote.snapshot.wsmo.path" value="../snapshot/wsml2reasoner-wsmo/" />
		<property name="remote.snapshot.dl.path" value="../snapshot/wsml2reasoner-dl/" />
		<property name="remote.snapshot.datalog.path" value="../snapshot/wsml2reasoner-datalog/" />
	</target>
	
	<!-- =================================================================== -->
	<!-- Targets                                                       		 -->
	<!-- =================================================================== -->

	<patternset id="source-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="build/*" />
		<include name="**/*.*" />
	</patternset>
		
	<patternset id="jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="build/*" />
		<include name="**/*.*" />
	</patternset>
		
	<patternset id="no-kaon2-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="build/*" />
		<exclude name="ext/kaon2/*" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="dl-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/humanOntology.wsml" />
		<exclude name="example/IrisReasonerExample.java" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/MinsReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="dl-pellet-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/humanOntology.wsml" />
		<exclude name="example/IrisReasonerExample.java" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/Kaon2DLReasonerExample.java" />
		<exclude name="example/MinsReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="datalog-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/wsml2owlExample.wsml" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/PelletReasonerExample.java" />
		<exclude name="example/Kaon2DLReasonerExample.java" />
		<exclude name="example/MinsReasonerExample.java" />
		<exclude name="example/IrisReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
		
	<patternset id="datalog-iris-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/wsml2owlExample.wsml" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/PelletReasonerExample.java" />
		<exclude name="example/Kaon2DLReasonerExample.java" />
		<exclude name="example/MinsReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="datalog-mins-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/wsml2owlExample.wsml" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/PelletReasonerExample.java" />
		<exclude name="example/Kaon2DLReasonerExample.java" />
		<exclude name="example/IrisReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="wsmo-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/wsmo4j/**"/>
	</patternset>
	
	<patternset id="dl-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/commons-logging/**"/>
		<include name="ext/log4j/**"/>
		<include name="ext/owl-api/**"/>
		<include name="ext/relaxng/**"/>
		<include name="ext/wsmo4j/**"/>
		<include name="ext/xsdlib/**"/>
	</patternset>

	<patternset id="dl-pellet-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/commons-logging/**"/>
		<include name="ext/log4j/**"/>
		<include name="ext/owl-api/**"/>
		<include name="ext/pellet/**"/>
		<include name="ext/relaxng/**"/>
		<include name="ext/wsmo4j/**"/>
		<include name="ext/xsdlib/**"/>		
	</patternset>
	
	<patternset id="datalog-iris-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/wsmo4j/**"/>
		<include name="ext/iris/**"/>
		<include name="ext/jgrapht/**"/>
	</patternset>
	
	<patternset id="datalog-mins-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/wsmo4j/**"/>
		<include name="ext/mins/**"/>
	</patternset>

	<target name="clean-build-dirs" depends="init" description="Cleans the build directories">
		<delete dir="${build.src}" />
		<delete dir="${build.lib}" />
		<delete dir="${build.class}" />
		<delete>
			<fileset dir="${remote.snapshot.path}" includes="**/**/*.jar" />
			<fileset dir="${remote.snapshot.path}" includes="**/**/*.zip" />
		</delete>
	</target>
	
	<target name="real-clean" depends="clean-build-dirs" description="Cleans everything">
		<delete dir="${build.root}" />
	</target>
	
	<target name="create-dirs" depends="init" description="Creates the build directories">
		<mkdir dir="${build.root}" />
		<mkdir dir="${build.src}" />
		<mkdir dir="${build.lib}" />
		<mkdir dir="${build.class}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${dist.complete}" />		
		<mkdir dir="${dist.complete.lib}" />
	</target>
	
	<target name="checkout-project" 
		depends= "real-clean, create-dirs"
		description="Checkout most recent version from cvs">
		<cvs compression="true"
			reallyquiet="yes"
        	cvsRoot="${cvs.path}"
			package="wsml2reasoner"
       		failonerror="true"/>
	</target>
	
	<target name="compile" depends="checkout-project" 
		description="Compiles wsml2reasoner framework">
		<copy todir="${build.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${src.dir}">
				<patternset refid="source-files" />
			</fileset>
			<fileset dir="${api-src.dir}">
				<patternset refid="source-files" />
			</fileset>
		</copy>
		<copy todir="${build.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${lib.dir}/">
				<patternset refid="jars" />
			</fileset>
		</copy>
		<javac srcdir="${build.src}" destdir="${build.class}" 
				debug="on" optimize="off" deprecation="off" target="1.5" nowarn="on">
			<classpath>
				<fileset dir="${build.lib}" />
			</classpath>
		</javac>
	</target>
	
	<target name="create-jar" depends="compile" description="Creates wsml2reasoner jar - basic">
		<mkdir dir="${dist.complete}" />
		<jar jarfile="${dist.complete}/wsml2reasoner-${DSTAMP}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${dist.complete}/wsml2reasoner-${DSTAMP}.jar" todir="${remote.snapshot.path}" 
			preservelastmodified="yes" includeEmptyDirs="no"/>
	</target>
	
	<target name="create-wsml2reasoner" depends="create-jar" 
		description="Creates wsml2reasoner src (including jar) - basic">
		<copy file="${project.dir}/license-gpl.txt" todir="${dist.complete}"/>
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}" />
		</copy>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}" >
				<patternset refid="no-kaon2-jars" />
			</fileset>
		</copy>
		<zip destfile="${remote.snapshot.path}/wsml2reasoner-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<!--<delete dir="${dist}"/>
		<delete dir="${project.dir}/"/>-->
	</target>
	
	<target name="create-wsml2reasoner-wsmo-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-wsmo jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-wsmo-${DSTAMP}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${dist.complete}/wsml2reasoner-wsmo-${DSTAMP}.jar" todir="${remote.snapshot.wsmo.path}" 
			preservelastmodified="yes" includeEmptyDirs="no"/>
		<copy file="${project.dir}/license.txt" todir="${remote.snapshot.wsmo.path}"/>
		<copy file="${project.dir}/license.txt" todir="${dist.complete}"/>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="wsmo-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-wsmo-jar+libs+example" depends="create-wsml2reasoner-wsmo-jar+libs" 
		description="Zips wsml2reasoner-wsmo jar, libs, and example">
		<copy file="${example.dir}/ReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/humanOntology.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${remote.snapshot.wsmo.path}/wsml2reasoner-wsmo-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-wsmo-src" depends="create-wsml2reasoner-wsmo-jar+libs" 
		description="Creates/zips wsml2reasoner src with wsmo jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}" />
		</copy>
		<zip destfile="${remote.snapshot.wsmo.path}/wsml2reasoner-wsmo-src-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-dl-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-dl jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-dl-${DSTAMP}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${dist.complete}/wsml2reasoner-dl-${DSTAMP}.jar" todir="${remote.snapshot.dl.path}" 
			preservelastmodified="yes" includeEmptyDirs="no"/>
		<copy file="${project.dir}/license.txt" todir="${dist.complete}"/>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="dl-jars" />
			</fileset>
		</copy>
	</target>
		
		<target name="create-wsml2reasoner-dl-jar+libs+example" depends="create-wsml2reasoner-dl-jar+libs" 
			description="Zips wsml2reasoner-dl jar, libs, and example">
			<copy file="${example.dir}/PelletReasonerExample.java" todir="${dist.complete.example}"/>
			<copy file="${example.dir}/wsml2owlExample.wsml" todir="${dist.complete.example}"/>
			<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
			<zip destfile="${remote.snapshot.dl.path}/wsml2reasoner-dl-${DSTAMP}.zip">
				<fileset dir="${dist.complete}"/>
			</zip>
			<delete dir="${dist.complete}"/>
		</target>
		
		<target name="create-wsml2reasoner-dl-src" depends="create-wsml2reasoner-dl-jar+libs" 
				description="Creates/zips wsml2reasoner src with dl jars)">
			<mkdir dir="${dist.complete.src}" />
			<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
				<fileset dir="${build.src}">
					<patternset refid="dl-files" />	
				</fileset>
			</copy>
			<zip destfile="${remote.snapshot.dl.path}/wsml2reasoner-dl-src-${DSTAMP}.zip">
				<fileset dir="${dist.complete}"/>
			</zip>
			<delete dir="${dist.complete}"/>
		</target>
	
	<target name="create-wsml2reasoner-dl-pellet-jar+libs" depends="compile" 
			description="Creates wsml2reasoner-dl-pellet jar + libs">
			<mkdir dir="${dist.complete}" />	
			<jar jarfile="${dist.complete}/wsml2reasoner-dl-pellet-${DSTAMP}.jar">
				<fileset dir="${build.src}" />
				<fileset dir="${build.class}" />
			</jar>
			<copy file="${dist.complete}/wsml2reasoner-dl-pellet-${DSTAMP}.jar" todir="${remote.snapshot.dl.path}" 
				preservelastmodified="yes" includeEmptyDirs="no"/>
			<copy file="${project.dir}/license.txt" todir="${dist.complete}"/>
			<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
				<fileset dir="${build.lib}">
					<patternset refid="dl-pellet-jars" />
				</fileset>
			</copy>
		</target>
		
		<target name="create-wsml2reasoner-dl-pellet-jar+libs+example" depends="create-wsml2reasoner-dl-pellet-jar+libs" 
			description="Zips wsml2reasoner-dl-pellet jar, libs, and example">
			<copy file="${example.dir}/PelletReasonerExample.java" todir="${dist.complete.example}"/>
			<copy file="${example.dir}/wsml2owlExample.wsml" todir="${dist.complete.example}"/>
			<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
			<zip destfile="${remote.snapshot.dl.path}/wsml2reasoner-dl-pellet-${DSTAMP}.zip">
				<fileset dir="${dist.complete}"/>
			</zip>
			<delete dir="${dist.complete}"/>
		</target>
		
		<target name="create-wsml2reasoner-dl-pellet-src" depends="create-wsml2reasoner-dl-pellet-jar+libs" 
			description="Creates/zips wsml2reasoner src with dl-pellet jars)">
			<mkdir dir="${dist.complete.src}" />
			<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
				<fileset dir="${build.src}">
					<patternset refid="dl-pellet-files" />	
				</fileset>
			</copy>
			<zip destfile="${remote.snapshot.dl.path}/wsml2reasoner-dl-pellet-src-${DSTAMP}.zip">
				<fileset dir="${dist.complete}"/>
			</zip>
			<delete dir="${dist.complete}"/>
		</target>
	
	<target name="create-wsml2reasoner-datalog-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-datalog jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-datalog-${DSTAMP}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${dist.complete}/wsml2reasoner-datalog-${DSTAMP}.jar" todir="${remote.snapshot.datalog.path}" 
			preservelastmodified="yes" includeEmptyDirs="no"/>
		<copy file="${project.dir}/license.txt" todir="${dist.complete}"/>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="wsmo-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-datalog-jar+libs+example" depends="create-wsml2reasoner-datalog-jar+libs" 
		description="Zips wsml2reasoner-datalog jar, libs, and example">
		<copy file="${example.dir}/ReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/humanOntology.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${remote.snapshot.datalog.path}/wsml2reasoner-datalog-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-datalog-src" depends="create-wsml2reasoner-datalog-jar+libs" 
		description="Creates/zips wsml2reasoner src with datalog jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}">
				<patternset refid="datalog-files" />	
			</fileset>
		</copy>
		<zip destfile="${remote.snapshot.datalog.path}/wsml2reasoner-datalog-src-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
	</target>
	
	<target name="create-wsml2reasoner-datalog-iris-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-datalog-iris jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-datalog-iris-${DSTAMP}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${dist.complete}/wsml2reasoner-datalog-iris-${DSTAMP}.jar" todir="${remote.snapshot.datalog.path}" 
			preservelastmodified="yes" includeEmptyDirs="no"/>
		<copy file="${project.dir}/license.txt" todir="${dist.complete}"/>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="datalog-iris-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-datalog-iris-jar+libs+example" depends="create-wsml2reasoner-datalog-iris-jar+libs" 
		description="Zips wsml2reasoner-datalog jar, libs, and example">
		<copy file="${example.dir}/ReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/IrisReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/humanOntology.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${remote.snapshot.datalog.path}/wsml2reasoner-datalog-iris-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-datalog-iris-src" depends="create-wsml2reasoner-datalog-iris-jar+libs" 
		description="Creates/zips wsml2reasoner src with datalog-iris jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}">
				<patternset refid="datalog-iris-files" />	
			</fileset>
		</copy>
		<zip destfile="${remote.snapshot.datalog.path}/wsml2reasoner-datalog-iris-src-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
		
	<target name="create-wsml2reasoner-datalog-mins-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-datalog-mins jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-datalog-mins-${DSTAMP}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${dist.complete}/wsml2reasoner-datalog-mins-${DSTAMP}.jar" todir="${remote.snapshot.datalog.path}" 
			preservelastmodified="yes" includeEmptyDirs="no"/>
		<copy file="${project.dir}/license.txt" todir="${dist.complete}"/>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="datalog-mins-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-datalog-mins-jar+libs+example" depends="create-wsml2reasoner-datalog-mins-jar+libs" 
		description="Zips wsml2reasoner-datalog jar, libs, and example">
		<copy file="${example.dir}/ReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/MinsReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/humanOntology.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${remote.snapshot.datalog.path}/wsml2reasoner-datalog-mins-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-datalog-mins-src" depends="create-wsml2reasoner-datalog-mins-jar+libs" 
		description="Creates/zips wsml2reasoner src with datalog-mins jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}">
				<patternset refid="datalog-mins-files" />	
			</fileset>
		</copy>
		<zip destfile="${remote.snapshot.datalog.path}/wsml2reasoner-datalog-mins-src-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-snapshots-bins" depends="create-jar, create-wsml2reasoner-datalog-mins-jar+libs+example, 
		create-wsml2reasoner-datalog-iris-jar+libs+example, create-wsml2reasoner-datalog-jar+libs+example, create-wsml2reasoner-dl-jar+libs+example,
		create-wsml2reasoner-dl-pellet-jar+libs+example, create-wsml2reasoner-wsmo-jar+libs+example" description="Creates/zips wsml2reasoner bins)">
	</target>
	
	<target name="create-wsml2reasoner-snapshots-srcs" depends="create-wsml2reasoner, create-wsml2reasoner-datalog-mins-src, 
		create-wsml2reasoner-datalog-iris-src, create-wsml2reasoner-datalog-src, create-wsml2reasoner-dl-src,
		create-wsml2reasoner-dl-pellet-src, create-wsml2reasoner-wsmo-src" description="Creates/zips wsml2reasoner srcs)">
	</target>
	
	<target name="create-wsml2reasoner-snapshots" depends="create-wsml2reasoner-snapshots-bins,create-wsml2reasoner-snapshots-srcs" 
		description="Creates/zips wsml2reasoner)">
	</target>
</project>