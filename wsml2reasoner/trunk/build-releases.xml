	
<project name="WSML2Reasoner Framework" default="create-jar" basedir="." >

	<!-- =================================================================== -->
	<!-- Initialization                                                -->
	<!-- =================================================================== -->
	<target name="init">
		<tstamp />
		<property name="target.vm" value="1.5" />

		<property name="src.dir" value="${basedir}/src" />
		<property name="api-src.dir" value="${basedir}/api/src/" />
		<property name="test-src.dir" value="${basedir}/test/" />
		<property name="lib.dir" value="${basedir}/lib" />
		<property name="example.dir" value="${src.dir}/example/" />

		<property name="build.root" value="${basedir}/build" />
		<property name="build.src" value="${build.root}/src" />
		<property name="build.lib" value="${build.root}/lib" />
		<property name="build.class" value="${build.root}/class" />
		<property name="dist" value="${basedir}/dist" />
    	<property name="dist.complete" value="${dist}/complete" />
		<property name="dist.complete.src" value="${dist.complete}/src" />
		<property name="dist.complete.lib" value="${dist.complete}/lib" />
		<property name="dist.complete.test" value="${dist.complete}/test" />
		<property name="dist.complete.example" value="${dist.complete}/example" />
		<property name="dist.wsml2reasoner-dl" value="${dist}/wsml2reasoner-dl" />
		<property name="dist.wsml2reasoner-dl-pellet" value="${dist.wsml2reasoner-dl}/wsml2reasoner-dl-pellet" />
		<property name="dist.wsml2reasoner-datalog" value="${dist}/wsml2reasoner-datalog" />	
		<property name="dist.wsml2reasoner-datalog-iris" value="${dist.wsml2reasoner-datalog}/wsml2reasoner-datalog-iris" />	
		<property name="dist.wsml2reasoner-datalog-mins" value="${dist.wsml2reasoner-datalog}/wsml2reasoner-datalog-mins" />	
		<property name="deploy.version" value="0_4" />
	
		<property name="javadoc.dir" location="${basedir}/javadoc" />
		
		<!-- For updating remote snapshot -->
		<property file="pwd" />
		<property name="cvs.user" value="graham"/>
		<property name="cvs.path" value=":ext:${cvs.user}@cvs.deri.at:/usr/local/cvsroot" />
		<property name="shell.host" value="tools.deri.org" />
		<property name="remote.release.path" value="/var/www/html/tools_deri_org/wsml2reasoner/releases/v${deploy.version}" />
		<property name="remote.snapshot.path" value="/var/www/html/tools_deri_org/wsml2reasoner/snapshot/" />
		<property name="remote.javadoc.path" value="/var/www/html/tools_deri_org/wsml2reasoner/javadoc/" />
	</target>
	
	<!-- =================================================================== -->
	<!-- Targets                                                       		 -->
	<!-- =================================================================== -->

	<patternset id="source-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="build/*" />
		<include name="**/*.*" />
	</patternset>
		
	<patternset id="jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="build/*" />
		<include name="**/*.*" />
	</patternset>
		
	<patternset id="no-kaon2-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="build/*" />
		<exclude name="ext/kaon2/*" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="sdk-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="bin/**" />
		<exclude name="build/**" />
		<exclude name="dist/**" />
		<exclude name="ext/**" />
		<exclude name="lib/ext/kaon2/**" />
		<exclude name="pub/**" />
		<exclude name="web/**" />
		<excludesfile name="pwd" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="dl-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/humanOntology.wsml" />
		<exclude name="example/IrisReasonerExample.java" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/MinsReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="dl-pellet-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/humanOntology.wsml" />
		<exclude name="example/IrisReasonerExample.java" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/Kaon2DLReasonerExample.java" />
		<exclude name="example/MinsReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="datalog-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/wsml2owlExample.wsml" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/PelletReasonerExample.java" />
		<exclude name="example/Kaon2DLReasonerExample.java" />
		<exclude name="example/MinsReasonerExample.java" />
		<exclude name="example/IrisReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
		
	<patternset id="datalog-iris-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/wsml2owlExample.wsml" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/PelletReasonerExample.java" />
		<exclude name="example/Kaon2DLReasonerExample.java" />
		<exclude name="example/MinsReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
	
	<patternset id="datalog-mins-files">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<exclude name="example/wsml2owlExample.wsml" />
		<exclude name="example/Kaon2ReasonerExample.java" />
		<exclude name="example/PelletReasonerExample.java" />
		<exclude name="example/Kaon2DLReasonerExample.java" />
		<exclude name="example/IrisReasonerExample.java" />
		<include name="**/*.*" />
	</patternset>
			
	<patternset id="wsmo-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/wsmo4j/**"/>
	</patternset>
	
	<patternset id="dl-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/commons-logging/**"/>
		<include name="ext/log4j/**"/>
		<include name="ext/owl-api/**"/>
		<include name="ext/relaxng/**"/>
		<include name="ext/wsmo4j/**"/>
		<include name="ext/xsdlib/**"/>
	</patternset>

	<patternset id="dl-pellet-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/commons-logging/**"/>
		<include name="ext/log4j/**"/>
		<include name="ext/owl-api/**"/>
		<include name="ext/pellet/**"/>
		<include name="ext/relaxng/**"/>
		<include name="ext/wsmo4j/**"/>
		<include name="ext/xsdlib/**"/>		
	</patternset>
	
	<patternset id="datalog-iris-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/wsmo4j/**"/>
		<include name="ext/iris/**"/>
		<include name="ext/jgrapht/**"/>
	</patternset>
	
	<patternset id="datalog-mins-jars">
		<exclude name="CVS/*" />
		<exclude name="*.DS_Store" />
		<include name="ext/wsmo4j/**"/>
		<include name="ext/mins/**"/>
	</patternset>
	
	<path id="classpath">
		<fileset dir="build/lib" includes="**/*.jar"/>
	</path>
			
	<target name="clean-dist.complete-dir" depends="init" description="Cleans the dist.complete directory">
		<delete dir="${dist.complete}" />
	</target>
	
	<target name="clean-build-dirs" depends="init" description="Cleans the build directories">
		<delete dir="${build.src}" />
		<delete dir="${build.lib}" />
		<delete dir="${build.class}" />
	</target>
	
	<target name="real-clean" depends="clean-build-dirs" description="Cleans everything">
		<delete dir="${build.root}" />
	</target>
	
	<target name="create-dirs" depends="init" description="Creates the build directories">
		<mkdir dir="${build.root}" />
		<mkdir dir="${build.src}" />
		<mkdir dir="${build.lib}" />
		<mkdir dir="${build.class}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${dist.complete}" />		
		<mkdir dir="${dist.complete.lib}" />
		<mkdir dir="${dist.wsml2reasoner-dl}" />
		<mkdir dir="${dist.wsml2reasoner-dl-pellet}" />
		<mkdir dir="${dist.wsml2reasoner-datalog}" /> 		
		<mkdir dir="${dist.wsml2reasoner-datalog-iris}" />
		<mkdir dir="${dist.wsml2reasoner-datalog-mins}" />
	</target>
	
	<target name="compile" depends="real-clean, create-dirs" 
		description="Compiles wsml2reasoner framework">
		<copy todir="${build.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${src.dir}">
				<patternset refid="source-files" />
			</fileset>
			<fileset dir="${api-src.dir}">
				<patternset refid="source-files" />
			</fileset>
		</copy>
		<copy todir="${build.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${lib.dir}/">
				<patternset refid="jars" />
			</fileset>
		</copy>
		<javac srcdir="${build.src}" destdir="${build.class}" 
				debug="on" optimize="off" deprecation="off" target="1.5" nowarn="on">
			<classpath>
				<fileset dir="${build.lib}" />
			</classpath>
		</javac>
	</target>
	
	<target name="create-jar" depends="compile" description="Creates wsml2reasoner jar - basic">
		<mkdir dir="${dist.complete}" />
		<jar jarfile="${dist.complete}/wsml2reasoner-${DSTAMP}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
	</target>
	
	<target name="create-wsml2reasoner-package-src" depends="create-jar" 
		description="Creates wsml2reasoner src (including jars) - basic">
		<copy file="${basedir}/license-gpl.txt" todir="${dist.complete}"/>
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}" />
		</copy>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}" >
				<patternset refid="no-kaon2-jars" />
			</fileset>
		</copy>
		<zip destfile="${dist}/wsml2reasoner-package-src-${DSTAMP}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
	</target>
	
	<target name="create-wsml2reasoner-sdk" depends="real-clean, create-dirs" 
		description="Creates complete wsml2reasoner (including tests) for developers">
		<copy file="${basedir}/" todir="${dist.complete}"/>
		<echo file="${dist.complete}/version.txt">${deploy.version}</echo>
		<copy todir="${dist.complete}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${basedir}">
				<patternset refid="sdk-files" />
			</fileset>
		</copy>
		<zip destfile="${dist}/wsml2reasoner-sdk-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-wsmo-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-wsmo jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-${deploy.version}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${basedir}/license.txt" todir="${dist.complete}"/>
		<echo file="${dist.complete}/version.txt">${deploy.version}</echo>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="wsmo-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-wsmo-jar+libs+example" depends="create-wsml2reasoner-wsmo-jar+libs" 
		description="Zips wsml2reasoner-wsmo jar, libs, and example">
		<copy file="${example.dir}/ReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/humanOntology.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${dist}/wsml2reasoner-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-wsmo-src" depends="create-wsml2reasoner-wsmo-jar+libs" 
		description="Creates/zips wsml2reasoner src with wsmo jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}" />
		</copy>
		<zip destfile="${dist}/wsml2reasoner-src-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-dl-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-dl jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-dl-${deploy.version}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${basedir}/license.txt" todir="${dist.complete}"/>
		<echo file="${dist.complete}/version.txt">${deploy.version}</echo>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="dl-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-dl-jar+libs+example" depends="create-wsml2reasoner-dl-jar+libs" 
		description="Zips wsml2reasoner-dl jar, libs, and example">
		<copy file="${example.dir}/PelletReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/wsml2owlExample.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${dist.wsml2reasoner-dl}/wsml2reasoner-dl-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-dl-src" depends="create-wsml2reasoner-dl-jar+libs" 
			description="Creates/zips wsml2reasoner src with dl jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}">
				<patternset refid="dl-files" />	
			</fileset>
		</copy>
		<zip destfile="${dist.wsml2reasoner-dl}/wsml2reasoner-dl-src-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-dl-pellet-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-dl-pellet jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-dl-pellet-${deploy.version}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${basedir}/license.txt" todir="${dist.complete}"/>
		<echo file="${dist.complete}/version.txt">${deploy.version}</echo>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="dl-pellet-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-dl-pellet-jar+libs+example" depends="create-wsml2reasoner-dl-pellet-jar+libs" 
		description="Zips wsml2reasoner-dl-pellet jar, libs, and example">
		<copy file="${example.dir}/PelletReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/wsml2owlExample.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${dist.wsml2reasoner-dl-pellet}/wsml2reasoner-dl-pellet-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-dl-pellet-src" depends="create-wsml2reasoner-dl-pellet-jar+libs" 
		description="Creates/zips wsml2reasoner src with dl-pellet jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}">
				<patternset refid="dl-pellet-files" />	
			</fileset>
		</copy>
		<zip destfile="${dist.wsml2reasoner-dl-pellet}/wsml2reasoner-dl-pellet-src-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-datalog-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-datalog jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-datalog-${deploy.version}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${basedir}/license.txt" todir="${dist.complete}"/>
		<echo file="${dist.complete}/version.txt">${deploy.version}</echo>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="wsmo-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-datalog-jar+libs+example" depends="create-wsml2reasoner-datalog-jar+libs" 
		description="Zips wsml2reasoner-datalog jar, libs, and example">
		<copy file="${example.dir}/ReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/humanOntology.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${dist.wsml2reasoner-datalog}/wsml2reasoner-datalog-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
		
	<target name="create-wsml2reasoner-datalog-src" depends="create-wsml2reasoner-datalog-jar+libs" 
		description="Creates/zips wsml2reasoner src with datalog jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}">
				<patternset refid="datalog-files" />	
			</fileset>
		</copy>
		<zip destfile="${dist.wsml2reasoner-datalog}/wsml2reasoner-datalog-src-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
	</target>
	
	<target name="create-wsml2reasoner-datalog-iris-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-datalog-iris jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-datalog-iris-${deploy.version}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${basedir}/license.txt" todir="${dist.complete}"/>
		<echo file="${dist.complete}/version.txt">${deploy.version}</echo>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="datalog-iris-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-datalog-iris-jar+libs+example" depends="create-wsml2reasoner-datalog-iris-jar+libs" 
		description="Zips wsml2reasoner-datalog jar, libs, and example">
		<copy file="${example.dir}/ReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/IrisReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/humanOntology.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${dist.wsml2reasoner-datalog-iris}/wsml2reasoner-datalog-iris-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-datalog-iris-src" depends="create-wsml2reasoner-datalog-iris-jar+libs" 
		description="Creates/zips wsml2reasoner src with datalog-iris jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}">
				<patternset refid="datalog-iris-files" />	
			</fileset>
		</copy>
		<zip destfile="${dist.wsml2reasoner-datalog-iris}/wsml2reasoner-datalog-iris-src-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-datalog-mins-jar+libs" depends="compile" 
		description="Creates wsml2reasoner-datalog-mins jar + libs">
		<mkdir dir="${dist.complete}" />	
		<jar jarfile="${dist.complete}/wsml2reasoner-datalog-mins-${deploy.version}.jar">
			<fileset dir="${build.src}" />
			<fileset dir="${build.class}" />
		</jar>
		<copy file="${basedir}/license-gpl.txt" todir="${dist.complete}"/>
		<echo file="${dist.complete}/version.txt">${deploy.version}</echo>
		<copy todir="${dist.complete.lib}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.lib}">
				<patternset refid="datalog-mins-jars" />
			</fileset>
		</copy>
	</target>
	
	<target name="create-wsml2reasoner-datalog-mins-jar+libs+example" depends="create-wsml2reasoner-datalog-mins-jar+libs" 
		description="Zips wsml2reasoner-datalog jar, libs, and example">
		<copy file="${example.dir}/ReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/MinsReasonerExample.java" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/humanOntology.wsml" todir="${dist.complete.example}"/>
		<copy file="${example.dir}/simpleOntology.wsml" todir="${dist.complete.example}"/>
		<zip destfile="${dist.wsml2reasoner-datalog-mins}/wsml2reasoner-datalog-mins-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-datalog-mins-src" depends="create-wsml2reasoner-datalog-mins-jar+libs" 
		description="Creates/zips wsml2reasoner src with datalog-mins jars)">
		<mkdir dir="${dist.complete.src}" />
		<copy todir="${dist.complete.src}" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${build.src}">
				<patternset refid="datalog-mins-files" />	
			</fileset>
		</copy>
		<zip destfile="${dist.wsml2reasoner-datalog-mins}/wsml2reasoner-datalog-mins-src-${deploy.version}.zip">
			<fileset dir="${dist.complete}"/>
		</zip>
		<delete dir="${dist.complete}"/>
	</target>
	
	<target name="create-wsml2reasoner-releases-bins" depends="create-jar, create-wsml2reasoner-datalog-mins-jar+libs+example, 
		create-wsml2reasoner-datalog-iris-jar+libs+example, create-wsml2reasoner-datalog-jar+libs+example, create-wsml2reasoner-dl-jar+libs+example,
		create-wsml2reasoner-dl-pellet-jar+libs+example, create-wsml2reasoner-wsmo-jar+libs+example" description="Creates/zips wsml2reasoner bins)">
	</target>
	
	<target name="create-wsml2reasoner-releases-srcs" depends="create-wsml2reasoner-datalog-mins-src, 
		create-wsml2reasoner-datalog-iris-src, create-wsml2reasoner-datalog-src, create-wsml2reasoner-dl-src,
		create-wsml2reasoner-dl-pellet-src, create-wsml2reasoner-wsmo-src" description="Creates/zips wsml2reasoner srcs">
	</target>
	
	<target name="create-wsml2reasoner-releases" depends="create-wsml2reasoner-releases-bins,create-wsml2reasoner-releases-srcs" 
		description="Creates/zips wsml2reasoner)">
	</target>

	<target name="create-javadoc" depends="compile" description="Produces javadoc">
		<delete dir="${javadoc.dir}" />
		<mkdir dir="${javadoc.dir}" />
		<javadoc destdir="${javadoc.dir}"
             classpathref="classpath"
             author="true"
             version="true"
             use="true"
             windowtitle="WSML2Reasoner Framework">
			<fileset dir="${build.src}">
				<include name="**/*.java" />
			</fileset>
			<link href="http://wsmo4j.sourceforge.net/multiproject/wsmo-api/apidocs/"
            packagelistloc="http://wsmo4j.sourceforge.net/multiproject/wsmo-api/apidocs/package-list" />
			<link href="http://wsmo4j.sourceforge.net/multiproject/logexp-api/apidocs/"
            packagelistloc="http://wsmo4j.sourceforge.net/multiproject/logexp-api/apidocs/package-list" />
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/"
            packagelistloc="http://java.sun.com/j2se/1.5.0/docs/api/package-list" />
			<doctitle><![CDATA[<h1>WSML2Reasoner Framework  v${deploy.version}</h1>]]></doctitle>
		<bottom>
			<![CDATA[<i>Copyright &#169; 2005 University of Innsbruck, Austria; FZI, Germany. All Rights Reserved.</i>]]></bottom>
			<tag name="TODO" scope="all" description="To do:" />
		</javadoc>
	</target>

	<target name="get-jsse-4-ssh+scp"
          description="Download necessary jar for ssh/scp and place directly into ant lib">
		<get dest="${ant.library.dir}/jsch-0.1.32.jar"
         src="http://puzzle.dl.sourceforge.net/sourceforge/jsch/jsch-0.1.32.jar" />
	</target>

	<target name="choose-user-password">
		<input message="Username for ${shell.host}:" addproperty="ssh.user" />
		<input message="Password for ${shell.host}:" addproperty="ssh.password" />
	</target>

	<target name="update-releases"
		depends="create-wsml2reasoner-releases"
        description="Loads new releases onto tools.deri.org">

		<!--delete old snapshot
		<sshexec host="${shell.host}"
        	username="${ssh.user}"
            password="${ssh.password}"
            trust="yes"
            command="rm -f ${remote.snapshot.path}/wsml2reasoner*" />
		-->
		<!--upload releases-->
		<scp trust="yes"
         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.release.path}">
			<fileset dir="${dist}/"/>
				
		</scp>
		
		<!--
		<scp file="${dist}/wsml2reasoner-${DSTAMP}.zip"
         	trust="yes"
         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.snapshot.path}" />
		
		<scp file="${dist}/wsml2reasoner-${DSTAMP}.zip"
		         	trust="yes"
		         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.snapshot.path.wsmo}" />
		 
		
		<scp file="${basedir}/license.txt"
         	trust="yes"
         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.snapshot.path}" />
         -->
	</target>


	<target name="update_remote_javadoc"
          depends="create-javadoc"
          description="Updates wsml2reasoner javadoc on tools.deri.org">

		<!--delete old javadoc-->
		<sshexec host="${shell.host}"
        	username="${ssh.user}"
            password="${ssh.password}"
            trust="yes"
            command="rm -r -f ${remote.javadoc.path}/*" />

		<!--upload snapshot -->
		<scp trust="yes"
         	todir="${ssh.user}:${ssh.password}@${shell.host}:${remote.javadoc.path}" >
			<fileset dir="${javadoc.dir}" />
		</scp>
	</target>

</project>