<!--
In order successfuly to use the sshexec/scp tasks you have to download from 
http://www.jcraft.com/jsch/index.html jsch-0.x.xx.jar and put it in 
%ANT_HOME%/lib folder as jsse.jar
Note for Eclipse User: When using ant from eclipse you can get jsse.jar by using 
	  "get.antscplib" additionally go to Windows>Preferences>Ant>Runtime>Classpath
	  and add the lib to the runtime classpath
-->
<project name="WSML Reasoning Wrapper" basedir="." default="create_jar">
  <!-- set global properties for this build -->
  <tstamp />
  <!-- avoids pop ups if you create this file and set ssh.password and ssh.user
       on server also enables to reset src dir etc.-->
  <property file="pwd" />
  <property name="cvs.user" value="graham"/>
  <property name="cvs.path" value=":pserver:${cvs.user}@cvs.deri.at:/usr/local/cvsroot" />
  <property name="cvs.module" value="wsml2reasoner"/>
  <property name="cvs.dir" location="${basedir}/src" />
    
  <property name="dir.java-doc" location="${basedir}/java-doc" />
  <property name="dir.jUnit" location="${basedir}/jUnitReport" />
  <property name="dir.jCoverage" location="${basedir}/jCoverage" />
  <property name="dir.src" location="${basedir}/src" />
  <property name="dir.lib" location="${basedir}" />
  <property name="dir.build" location="${basedir}/build" />
  <property name="dir.distribution" location="${basedir}/Snapshot" />
  <property name="shell.host" value="tools.deri.org" />
  <property name="lib.wrapper"
            location="${dir.distribution}/${cvs.module}-${DSTAMP}.jar" />
  <property name="lib.wrapper-src"
            location="${dir.distribution}/${cvs.module}-src${DSTAMP}.zip" />
  <!--necessary: wsml-grammar, wsmo4j-api, xercesimpl, xmlApis-->
  <path id="classpath">
    <fileset dir="${dir.lib}" includes="**/*.jar" />
  </path>
  <target name="compile">
    <mkdir dir="${dir.build}" />
    <javac debug="yes"
           srcdir="${dir.src}"
           excludes="**/test/**/*.java"
           classpathref="classpath"
           destdir="${dir.build}"
           source="1.5"
           target="1.5" />
  </target>
  <target name="test.djunit"
          description="Executes the unit test with files available in lib directory">
    <delete dir="${dir.build}" />
    <mkdir dir="${dir.build}" />
    <javac debug="yes"
           srcdir="${dir.src}/**/test"
           classpathref="classpath"
           destdir="${dir.build}"
           source="1.5"
           target="1.5"
           classpath="${lib.wrapper}" />
    <copy todir="${dir.build}">
      <fileset dir="${dir.src}/test" includes="**/*.wsml;**/*.xml" />
    </copy>
    <djunit printsummary="yes"
            targetSrcDir="${dir.src}/logexp-impl/src;${dir.src}/logexp-impl/src"
            coverage="yes"
            virtualmock="yes">
      <classpath refid="classpath" />
      <classpath location="${lib.logexp}" />
      <classpath path="${dir.build}" />
      <formatter type="xml" />
      <batchtest todir="${dir.build}">
        <fileset dir="${dir.build}">
          <include name="**/*.class" />
          <exclude name="**/LogicalExpressionTestCase.*" />
          <exclude name="**/LogExpIntegrationTest.*" />
        </fileset>
      </batchtest>
    </djunit>
    <delete dir="${dir.jUnit}" />
    <mkdir dir="${dir.jUnit}" />
    <junitreport todir="${dir.build}">
      <fileset dir="${dir.build}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${dir.jUnit}" />
    </junitreport>
    <delete dir="${dir.jCoverage}" />
    <mkdir dir="${dir.jCoverage}" />
    <djunit-coverage-report serFile="./jcoverage.ser"
                            srcdir="${dir.src}/logexp-impl/src/"
                            destdir="${dir.jCoverage}">
      <classpath refid="classpath" />
    </djunit-coverage-report>
    <delete dir="${dir.build}" />
  </target>
  <target name="test.junit"
          description="Executes the unit test with files available in lib directory">
    <delete dir="${dir.build}" />
    <mkdir dir="${dir.build}" />
<javac debug="yes"
           srcdir="${dir.src}"
           includes="**/test/**/*.java"
           classpathref="classpath"
           destdir="${dir.build}"
           source="1.5"
           target="1.5"
           classpath="${lib.wrapper}" />
    <copy todir="${dir.build}">
      <fileset dir="${dir.src}" includes="examples/**/*.wsml"></fileset>
    </copy>
<echo>${dir.src}</echo>
    <junit printsummary="yes">
      <classpath refid="classpath" />
      <classpath location="${lib.wrapper}" />
      <classpath path="${dir.build}" />
      <classpath path="${dir.src}" />
      <formatter type="xml" />
      <batchtest todir="${dir.build}">
        <fileset dir="${dir.build}">
          <include name="**/*.class" />
          <exclude name="**/TestWSMLConceptualSyntax2LExprs.*"/>
          <exclude name="**/WSMLNormalizationTest.*"/>
          <exclude name="**/BaseTest.*"/>
          <exclude name="**/BaseReasonerTest.*"/>
        </fileset>
      </batchtest>
    </junit>
    <delete dir="${dir.jUnit}" />
    <mkdir dir="${dir.jUnit}" />
    <junitreport todir="${dir.build}">
      <fileset dir="${dir.build}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${dir.jUnit}" />
    </junitreport>
    <delete dir="${dir.build}" />
  </target>  
  
  <target name="cvs.checkout" description="checkout sources">
    <delete dir="${cvs.dir}"/>
    <mkdir dir="${cvs.dir}"/>
    <cvspass cvsroot="${cvs.path}" password="${cvs.pass}"/> 
    <cvs compression="true"
        cvsroot="${cvs.path}"
        package="${cvs.module}"
        dest="${cvs.dir}"
        failonerror="true"/>
  </target>
  <target name="web" depends="cvs.checkout,create_jar,test.junit,javadoc">
  </target>
  <target name="create_jar"
          depends="compile"
          description="creates a new version of the snapshot, make 
			sure you have the last version of WSMO4J">
    <delete dir="${dir.distribution}" />
    <mkdir dir="${dir.distribution}" />
    <jar jarfile="${lib.wrapper}"
         basedir="${dir.build}"
         index="true" />
    <zip destfile="${lib.wrapper-src}"
         basedir="${dir.src}/${cvs.module}"
         includes="src/**/*.java,api/**/*.java,test/**/*.java" />
    <delete dir="${dir.build}" />
<!--    <copy todir="${dir.distribution}" flatten="false">
      <fileset dir="${dir.lib}/ext" 
        includes="wsmo4j/*.*,mins/*.*"/>
    </copy>
    <copy todir="${dir.distribution}" file="${dir.src}/license.txt"/>-->
  </target>
  <target name="javadoc" description="produces javadoc">
    <delete dir="${dir.java-doc}" />
    <mkdir dir="${dir.java-doc}" />
    <javadoc source="${dir.src}"
             destdir="${dir.java-doc}"
             classpathref="classpath"
             author="true"
             version="true"
             use="true"
             windowtitle="WSMO4J Reasoning Wrapper">
      <fileset dir="${dir.src}">
        <include name="${dir.src}/**/*.java" />
      </fileset>
      <link href="http://wsmo4j.sourceforge.net/multiproject/wsmo-api/apidocs/"
            packagelistloc="http://wsmo4j.sourceforge.net/multiproject/wsmo-api/apidocs/package-list" />
      <link href="http://wsmo4j.sourceforge.net/multiproject/logexp-api/apidocs/"
            packagelistloc="http://wsmo4j.sourceforge.net/multiproject/logexp-api/apidocs/package-list" />
      <link href="http://java.sun.com/j2se/1.4.2/docs/api/"
            packagelistloc="http://java.sun.com/j2se/1.4.2/docs/api/package-list" />
      <doctitle>
        <![CDATA[<h1>WSMO4J Reasoning Wrapper</h1>]]></doctitle>
    <bottom>
      <![CDATA[<i>Copyright &#169; 2005 University of Innsbruck, Austria; FZI, Germnay. All Rights Reserved.</i>]]></bottom>
  <tag name="TODO" scope="all" description="To do:" />
</javadoc>
</target>
<taskdef classpath="lib/djunit.jar" resource="djunittasks.properties" />
</project>

